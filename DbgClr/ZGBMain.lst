                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14228 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module ZGBMain
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _GetTileReplacement
                                     12 	.globl _J_ATK
                                     13 	.globl _J_WHIP
                                     14 	.globl _next_state
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area _DATA
                                     22 ;--------------------------------------------------------
                                     23 ; ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area _INITIALIZED
                           000000    26 G$next_state$0_0$0==.
      000000                         27 _next_state::
      000000                         28 	.ds 1
                           000001    29 G$J_WHIP$0_0$0==.
      000001                         30 _J_WHIP::
      000001                         31 	.ds 1
                           000002    32 G$J_ATK$0_0$0==.
      000002                         33 _J_ATK::
      000002                         34 	.ds 1
                                     35 ;--------------------------------------------------------
                                     36 ; absolute external ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area _DABS (ABS)
                                     39 ;--------------------------------------------------------
                                     40 ; global & static initialisations
                                     41 ;--------------------------------------------------------
                                     42 	.area _HOME
                                     43 	.area _GSINIT
                                     44 	.area _GSFINAL
                                     45 	.area _GSINIT
                                     46 ;--------------------------------------------------------
                                     47 ; Home
                                     48 ;--------------------------------------------------------
                                     49 	.area _HOME
                                     50 	.area _HOME
                                     51 ;--------------------------------------------------------
                                     52 ; code
                                     53 ;--------------------------------------------------------
                                     54 	.area _CODE
                           000000    55 	G$GetTileReplacement$0$0	= .
                                     56 	.globl	G$GetTileReplacement$0$0
                           000000    57 	C$ZGBMain.c$10$0_0$161	= .
                                     58 	.globl	C$ZGBMain.c$10$0_0$161
                                     59 ;ZGBMain.c:10: UINT8 GetTileReplacement(UINT8* tile_ptr, UINT8* tile) {
                                     60 ;	---------------------------------
                                     61 ; Function GetTileReplacement
                                     62 ; ---------------------------------
      000000                         63 _GetTileReplacement::
      000000 E8 FD            [16]   64 	add	sp, #-3
      000002 F8 01            [12]   65 	ldhl	sp,	#1
      000004 7B               [ 4]   66 	ld	a, e
      000005 22               [ 8]   67 	ld	(hl+), a
      000006 72               [ 8]   68 	ld	(hl), d
                           000007    69 	C$ZGBMain.c$11$1_0$161	= .
                                     70 	.globl	C$ZGBMain.c$11$1_0$161
                                     71 ;ZGBMain.c:11: if(current_state == StateGame) {
      000007 FAr00r00         [16]   72 	ld	a, (#_current_state)
      00000A B7               [ 4]   73 	or	a, a
      00000B 20 26            [12]   74 	jr	NZ, 00104$
                           00000D    75 	C$ZGBMain.c$12$2_0$162	= .
                                     76 	.globl	C$ZGBMain.c$12$2_0$162
                                     77 ;ZGBMain.c:12: if(U_LESS_THAN(255 - (UINT16)*tile_ptr, N_SPRITE_TYPES)) {
      00000D F8 01            [12]   78 	ldhl	sp,#1
      00000F 2A               [ 8]   79 	ld	a, (hl+)
      000010 5F               [ 4]   80 	ld	e, a
      000011 3A               [ 8]   81 	ld	a, (hl-)
      000012 2B               [ 8]   82 	dec	hl
      000013 57               [ 4]   83 	ld	d, a
      000014 1A               [ 8]   84 	ld	a, (de)
      000015 77               [ 8]   85 	ld	(hl), a
      000016 5E               [ 8]   86 	ld	e, (hl)
      000017 16 00            [ 8]   87 	ld	d, #0x00
      000019 3E F6            [ 8]   88 	ld	a, #0xf6
      00001B 93               [ 4]   89 	sub	a, e
      00001C 9F               [ 4]   90 	sbc	a, a
      00001D 92               [ 4]   91 	sub	a, d
      00001E 07               [ 4]   92 	rlca
      00001F 30 0E            [12]   93 	jr	NC, 00102$
                           000021    94 	C$ZGBMain.c$13$3_0$163	= .
                                     95 	.globl	C$ZGBMain.c$13$3_0$163
                                     96 ;ZGBMain.c:13: *tile = 0;
      000021 AF               [ 4]   97 	xor	a, a
      000022 02               [ 8]   98 	ld	(bc), a
                           000023    99 	C$ZGBMain.c$14$3_0$163	= .
                                    100 	.globl	C$ZGBMain.c$14$3_0$163
                                    101 ;ZGBMain.c:14: return 255 - (UINT16)*tile_ptr;
      000023 F8 01            [12]  102 	ldhl	sp,#1
      000025 2A               [ 8]  103 	ld	a, (hl+)
      000026 5F               [ 4]  104 	ld	e, a
      000027 56               [ 8]  105 	ld	d, (hl)
      000028 1A               [ 8]  106 	ld	a, (de)
      000029 4F               [ 4]  107 	ld	c, a
      00002A 3E FF            [ 8]  108 	ld	a, #0xff
      00002C 91               [ 4]  109 	sub	a, c
      00002D 18 06            [12]  110 	jr	00105$
      00002F                        111 00102$:
                           00002F   112 	C$ZGBMain.c$17$2_0$162	= .
                                    113 	.globl	C$ZGBMain.c$17$2_0$162
                                    114 ;ZGBMain.c:17: *tile = *tile_ptr;
      00002F F8 00            [12]  115 	ldhl	sp,	#0
      000031 7E               [ 8]  116 	ld	a, (hl)
      000032 02               [ 8]  117 	ld	(bc), a
      000033                        118 00104$:
                           000033   119 	C$ZGBMain.c$20$1_0$161	= .
                                    120 	.globl	C$ZGBMain.c$20$1_0$161
                                    121 ;ZGBMain.c:20: return 255u;
      000033 3E FF            [ 8]  122 	ld	a, #0xff
      000035                        123 00105$:
                           000035   124 	C$ZGBMain.c$21$1_0$161	= .
                                    125 	.globl	C$ZGBMain.c$21$1_0$161
                                    126 ;ZGBMain.c:21: }
      000035 E8 03            [16]  127 	add	sp, #3
                           000037   128 	C$ZGBMain.c$21$1_0$161	= .
                                    129 	.globl	C$ZGBMain.c$21$1_0$161
                           000037   130 	XG$GetTileReplacement$0$0	= .
                                    131 	.globl	XG$GetTileReplacement$0$0
      000037 C9               [16]  132 	ret
                                    133 	.area _CODE
                                    134 	.area _INITIALIZER
                           000000   135 FZGBMain$__xinit_next_state$0_0$0 == .
      000000                        136 __xinit__next_state:
      000000 01                     137 	.db #0x01	; 1
                           000001   138 FZGBMain$__xinit_J_WHIP$0_0$0 == .
      000001                        139 __xinit__J_WHIP:
      000001 10                     140 	.db #0x10	; 16
                           000002   141 FZGBMain$__xinit_J_ATK$0_0$0 == .
      000002                        142 __xinit__J_ATK:
      000002 20                     143 	.db #0x20	; 32
                                    144 	.area _CABS (ABS)
