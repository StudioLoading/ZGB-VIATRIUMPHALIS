                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14228 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module Scroll
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _ScrollUpdateColumnWithDelay
                                     12 	.globl _ScrollUpdateColumnR
                                     13 	.globl _ScrollUpdateRowWithDelay
                                     14 	.globl _ScrollUpdateRowR
                                     15 	.globl _ClampScrollLimits
                                     16 	.globl _UPDATE_TILE
                                     17 	.globl _SetTile
                                     18 	.globl _GetTileReplacement
                                     19 	.globl _memcmp
                                     20 	.globl _memset
                                     21 	.globl _SetPalette
                                     22 	.globl _PopBank
                                     23 	.globl _PushBank
                                     24 	.globl _SpriteManagerAdd
                                     25 	.globl _set_win_tile_xy
                                     26 	.globl _set_bkg_tile_xy
                                     27 	.globl _set_bkg_data
                                     28 	.globl _clamp_enabled
                                     29 	.globl _scroll_h_border
                                     30 	.globl _last_bg_pal_loaded
                                     31 	.globl _last_tile_loaded
                                     32 	.globl _pending_w_cmap
                                     33 	.globl _pending_h_cmap
                                     34 	.globl _pending_w_map
                                     35 	.globl _pending_h_map
                                     36 	.globl _scroll_offset_y
                                     37 	.globl _scroll_offset_x
                                     38 	.globl _scroll_target
                                     39 	.globl _scroll_y_vblank
                                     40 	.globl _scroll_x_vblank
                                     41 	.globl _scroll_y
                                     42 	.globl _scroll_x
                                     43 	.globl _scroll_cmap
                                     44 	.globl _scroll_map
                                     45 	.globl _scroll_bottom_movement_limit
                                     46 	.globl _scroll_top_movement_limit
                                     47 	.globl _current_vbl_count
                                     48 	.globl _tiles_0
                                     49 	.globl _tiles_bank_0
                                     50 	.globl _hud_map_offset
                                     51 	.globl _pending_w_i
                                     52 	.globl _pending_w_y
                                     53 	.globl _pending_w_x
                                     54 	.globl _pending_h_i
                                     55 	.globl _pending_h_y
                                     56 	.globl _pending_h_x
                                     57 	.globl _scroll_bank
                                     58 	.globl _scroll_tile_info
                                     59 	.globl _scroll_collisions_down
                                     60 	.globl _scroll_collisions
                                     61 	.globl _scroll_tiles_h
                                     62 	.globl _scroll_tiles_w
                                     63 	.globl _scroll_h
                                     64 	.globl _scroll_w
                                     65 	.globl _ScrollSetTiles
                                     66 	.globl _UpdateMapTile
                                     67 	.globl _LoadMap
                                     68 	.globl _ScrollSetMap
                                     69 	.globl _InitScroll
                                     70 	.globl _InitScrollWithTiles
                                     71 	.globl _ScrollUpdateRow
                                     72 	.globl _ScrollUpdateColumn
                                     73 	.globl _RefreshScroll
                                     74 	.globl _MoveScroll
                                     75 	.globl _GetScrollTilePtr
                                     76 	.globl _GetScrollTile
                                     77 	.globl _GetMapSize
                                     78 	.globl _ScrollFindTile
                                     79 ;--------------------------------------------------------
                                     80 ; special function registers
                                     81 ;--------------------------------------------------------
                                     82 ;--------------------------------------------------------
                                     83 ; ram data
                                     84 ;--------------------------------------------------------
                                     85 	.area _DATA
                           000000    86 G$scroll_w$0_0$0==.
      000000                         87 _scroll_w::
      000000                         88 	.ds 2
                           000002    89 G$scroll_h$0_0$0==.
      000002                         90 _scroll_h::
      000002                         91 	.ds 2
                           000004    92 G$scroll_tiles_w$0_0$0==.
      000004                         93 _scroll_tiles_w::
      000004                         94 	.ds 2
                           000006    95 G$scroll_tiles_h$0_0$0==.
      000006                         96 _scroll_tiles_h::
      000006                         97 	.ds 2
                           000008    98 G$scroll_collisions$0_0$0==.
      000008                         99 _scroll_collisions::
      000008                        100 	.ds 256
                           000108   101 G$scroll_collisions_down$0_0$0==.
      000108                        102 _scroll_collisions_down::
      000108                        103 	.ds 256
                           000208   104 G$scroll_tile_info$0_0$0==.
      000208                        105 _scroll_tile_info::
      000208                        106 	.ds 256
                           000308   107 G$scroll_bank$0_0$0==.
      000308                        108 _scroll_bank::
      000308                        109 	.ds 1
                           000309   110 G$pending_h_x$0_0$0==.
      000309                        111 _pending_h_x::
      000309                        112 	.ds 2
                           00030B   113 G$pending_h_y$0_0$0==.
      00030B                        114 _pending_h_y::
      00030B                        115 	.ds 2
                           00030D   116 G$pending_h_i$0_0$0==.
      00030D                        117 _pending_h_i::
      00030D                        118 	.ds 1
                           00030E   119 G$pending_w_x$0_0$0==.
      00030E                        120 _pending_w_x::
      00030E                        121 	.ds 2
                           000310   122 G$pending_w_y$0_0$0==.
      000310                        123 _pending_w_y::
      000310                        124 	.ds 2
                           000312   125 G$pending_w_i$0_0$0==.
      000312                        126 _pending_w_i::
      000312                        127 	.ds 1
                           000313   128 G$hud_map_offset$0_0$0==.
      000313                        129 _hud_map_offset::
      000313                        130 	.ds 2
                           000315   131 G$tiles_bank_0$0_0$0==.
      000315                        132 _tiles_bank_0::
      000315                        133 	.ds 1
                           000316   134 G$tiles_0$0_0$0==.
      000316                        135 _tiles_0::
      000316                        136 	.ds 2
                           000318   137 G$current_vbl_count$0_0$0==.
      000318                        138 _current_vbl_count::
      000318                        139 	.ds 1
                                    140 ;--------------------------------------------------------
                                    141 ; ram data
                                    142 ;--------------------------------------------------------
                                    143 	.area _INITIALIZED
                           000000   144 G$scroll_top_movement_limit$0_0$0==.
      000000                        145 _scroll_top_movement_limit::
      000000                        146 	.ds 1
                           000001   147 G$scroll_bottom_movement_limit$0_0$0==.
      000001                        148 _scroll_bottom_movement_limit::
      000001                        149 	.ds 1
                           000002   150 G$scroll_map$0_0$0==.
      000002                        151 _scroll_map::
      000002                        152 	.ds 2
                           000004   153 G$scroll_cmap$0_0$0==.
      000004                        154 _scroll_cmap::
      000004                        155 	.ds 2
                           000006   156 G$scroll_x$0_0$0==.
      000006                        157 _scroll_x::
      000006                        158 	.ds 2
                           000008   159 G$scroll_y$0_0$0==.
      000008                        160 _scroll_y::
      000008                        161 	.ds 2
                           00000A   162 G$scroll_x_vblank$0_0$0==.
      00000A                        163 _scroll_x_vblank::
      00000A                        164 	.ds 1
                           00000B   165 G$scroll_y_vblank$0_0$0==.
      00000B                        166 _scroll_y_vblank::
      00000B                        167 	.ds 1
                           00000C   168 G$scroll_target$0_0$0==.
      00000C                        169 _scroll_target::
      00000C                        170 	.ds 2
                           00000E   171 G$scroll_offset_x$0_0$0==.
      00000E                        172 _scroll_offset_x::
      00000E                        173 	.ds 1
                           00000F   174 G$scroll_offset_y$0_0$0==.
      00000F                        175 _scroll_offset_y::
      00000F                        176 	.ds 1
                           000010   177 G$pending_h_map$0_0$0==.
      000010                        178 _pending_h_map::
      000010                        179 	.ds 2
                           000012   180 G$pending_w_map$0_0$0==.
      000012                        181 _pending_w_map::
      000012                        182 	.ds 2
                           000014   183 G$pending_h_cmap$0_0$0==.
      000014                        184 _pending_h_cmap::
      000014                        185 	.ds 2
                           000016   186 G$pending_w_cmap$0_0$0==.
      000016                        187 _pending_w_cmap::
      000016                        188 	.ds 2
                           000018   189 G$last_tile_loaded$0_0$0==.
      000018                        190 _last_tile_loaded::
      000018                        191 	.ds 1
                           000019   192 G$last_bg_pal_loaded$0_0$0==.
      000019                        193 _last_bg_pal_loaded::
      000019                        194 	.ds 1
                           00001A   195 G$scroll_h_border$0_0$0==.
      00001A                        196 _scroll_h_border::
      00001A                        197 	.ds 1
                           00001B   198 G$clamp_enabled$0_0$0==.
      00001B                        199 _clamp_enabled::
      00001B                        200 	.ds 1
                                    201 ;--------------------------------------------------------
                                    202 ; absolute external ram data
                                    203 ;--------------------------------------------------------
                                    204 	.area _DABS (ABS)
                                    205 ;--------------------------------------------------------
                                    206 ; global & static initialisations
                                    207 ;--------------------------------------------------------
                                    208 	.area _HOME
                                    209 	.area _GSINIT
                                    210 	.area _GSFINAL
                                    211 	.area _GSINIT
                                    212 ;--------------------------------------------------------
                                    213 ; Home
                                    214 ;--------------------------------------------------------
                                    215 	.area _HOME
                                    216 	.area _HOME
                                    217 ;--------------------------------------------------------
                                    218 ; code
                                    219 ;--------------------------------------------------------
                                    220 	.area _CODE
                           000000   221 	G$SetTile$0$0	= .
                                    222 	.globl	G$SetTile$0$0
                           000000   223 	C$Scroll.c$66$0_0$194	= .
                                    224 	.globl	C$Scroll.c$66$0_0$194
                                    225 ;C:/ZGB-2023.0/common/src/Scroll.c:66: void SetTile(UINT16 r, UINT8 t) OLDCALL{
                                    226 ;	---------------------------------
                                    227 ; Function SetTile
                                    228 ; ---------------------------------
      000000                        229 _SetTile::
                           000000   230 	C$Scroll.c$88$1_0$194	= .
                                    231 	.globl	C$Scroll.c$88$1_0$194
                                    232 ;C:/ZGB-2023.0/common/src/Scroll.c:88: __endasm;
                                    233 ;bc	= r, hl = t
      000000 F8 02            [12]  234 	ldhl	sp,#2
      000002 4E               [ 8]  235 	ld	c,(hl)
      000003 23               [ 8]  236 	inc	hl
      000004 46               [ 8]  237 	ld	b,(hl)
      000005 F8 04            [12]  238 	ldhl	sp,#4
                                    239 ;while	0xff41 & 02 != 0 (cannot write)
      000007                        240 1$:
      000007 FAr00r00         [16]  241 	ld	a,(#_STAT_REG)
      00000A E6 02            [ 8]  242 	and	a, #0x02
      00000C 20 F9            [12]  243 	jr	NZ,1$
                                    244 ;Write	tile
      00000E 7E               [ 8]  245 	ld	a,(hl)
      00000F 02               [ 8]  246 	ld	(bc),a
      000010 C9               [16]  247 	ret
                           000011   248 	C$Scroll.c$89$1_0$194	= .
                                    249 	.globl	C$Scroll.c$89$1_0$194
                                    250 ;C:/ZGB-2023.0/common/src/Scroll.c:89: }
                           000011   251 	C$Scroll.c$89$1_0$194	= .
                                    252 	.globl	C$Scroll.c$89$1_0$194
                           000011   253 	XG$SetTile$0$0	= .
                                    254 	.globl	XG$SetTile$0$0
      000011 C9               [16]  255 	ret
                           000012   256 	G$UPDATE_TILE$0$0	= .
                                    257 	.globl	G$UPDATE_TILE$0$0
                           000012   258 	C$Scroll.c$91$1_0$196	= .
                                    259 	.globl	C$Scroll.c$91$1_0$196
                                    260 ;C:/ZGB-2023.0/common/src/Scroll.c:91: void UPDATE_TILE(INT16 x, INT16 y, UINT8* t, UINT8* c) {
                                    261 ;	---------------------------------
                                    262 ; Function UPDATE_TILE
                                    263 ; ---------------------------------
      000012                        264 _UPDATE_TILE::
      000012 E8 F6            [16]  265 	add	sp, #-10
      000014 F8 07            [12]  266 	ldhl	sp,	#7
      000016 7B               [ 4]  267 	ld	a, e
      000017 22               [ 8]  268 	ld	(hl+), a
      000018 72               [ 8]  269 	ld	(hl), d
      000019 F8 05            [12]  270 	ldhl	sp,	#5
      00001B 79               [ 4]  271 	ld	a, c
      00001C 22               [ 8]  272 	ld	(hl+), a
                           00001D   273 	C$Scroll.c$100$1_0$196	= .
                                    274 	.globl	C$Scroll.c$100$1_0$196
                                    275 ;C:/ZGB-2023.0/common/src/Scroll.c:100: if((UINT16)x >= scroll_tiles_w || (UINT16)y >= scroll_tiles_h) { //This also checks x < 0 || y < 0
      00001D 78               [ 4]  276 	ld	a, b
      00001E 22               [ 8]  277 	ld	(hl+), a
      00001F 2A               [ 8]  278 	ld	a, (hl+)
      000020 4F               [ 4]  279 	ld	c, a
      000021 46               [ 8]  280 	ld	b, (hl)
      000022 21r04r00         [12]  281 	ld	hl, #_scroll_tiles_w
      000025 79               [ 4]  282 	ld	a, c
      000026 96               [ 8]  283 	sub	a, (hl)
      000027 23               [ 8]  284 	inc	hl
      000028 78               [ 4]  285 	ld	a, b
      000029 9E               [ 8]  286 	sbc	a, (hl)
      00002A 30 0F            [12]  287 	jr	NC, 00109$
      00002C F8 05            [12]  288 	ldhl	sp,	#5
      00002E 2A               [ 8]  289 	ld	a, (hl+)
      00002F 4F               [ 4]  290 	ld	c, a
      000030 46               [ 8]  291 	ld	b, (hl)
      000031 21r06r00         [12]  292 	ld	hl, #_scroll_tiles_h
      000034 79               [ 4]  293 	ld	a, c
      000035 96               [ 8]  294 	sub	a, (hl)
      000036 23               [ 8]  295 	inc	hl
      000037 78               [ 4]  296 	ld	a, b
      000038 9E               [ 8]  297 	sbc	a, (hl)
      000039 38 07            [12]  298 	jr	C, 00110$
      00003B                        299 00109$:
                           00003B   300 	C$Scroll.c$101$2_0$197	= .
                                    301 	.globl	C$Scroll.c$101$2_0$197
                                    302 ;C:/ZGB-2023.0/common/src/Scroll.c:101: replacement = 0;
      00003B F8 00            [12]  303 	ldhl	sp,	#0
      00003D 36 00            [12]  304 	ld	(hl), #0x00
      00003F C3r0Dr01         [16]  305 	jp	00111$
      000042                        306 00110$:
                           000042   307 	C$Scroll.c$103$2_0$198	= .
                                    308 	.globl	C$Scroll.c$103$2_0$198
                                    309 ;C:/ZGB-2023.0/common/src/Scroll.c:103: replacement = *t;
      000042 F8 0C            [12]  310 	ldhl	sp,	#12
      000044 2A               [ 8]  311 	ld	a, (hl+)
      000045 5F               [ 4]  312 	ld	e, a
      000046 56               [ 8]  313 	ld	d, (hl)
      000047 1A               [ 8]  314 	ld	a, (de)
                           000048   315 	C$Scroll.c$104$2_0$198	= .
                                    316 	.globl	C$Scroll.c$104$2_0$198
                                    317 ;C:/ZGB-2023.0/common/src/Scroll.c:104: type = GetTileReplacement(t, &replacement);
      000048 F8 00            [12]  318 	ldhl	sp,#0
      00004A 77               [ 8]  319 	ld	(hl), a
      00004B 4D               [ 4]  320 	ld	c, l
      00004C 44               [ 4]  321 	ld	b, h
      00004D CDr00r00         [24]  322 	call	_GetTileReplacement
                           000050   323 	C$Scroll.c$105$2_0$198	= .
                                    324 	.globl	C$Scroll.c$105$2_0$198
                                    325 ;C:/ZGB-2023.0/common/src/Scroll.c:105: if(type != 255u) {
      000050 F8 01            [12]  326 	ldhl	sp,#1
      000052 77               [ 8]  327 	ld	(hl), a
      000053 7E               [ 8]  328 	ld	a, (hl)
      000054 3C               [ 4]  329 	inc	a
      000055 CAr0Dr01         [16]  330 	jp	Z,00111$
                           000058   331 	C$Scroll.c$106$3_0$199	= .
                                    332 	.globl	C$Scroll.c$106$3_0$199
                                    333 ;C:/ZGB-2023.0/common/src/Scroll.c:106: id = SPRITE_UNIQUE_ID(x, y);
      000058 F8 07            [12]  334 	ldhl	sp,	#7
      00005A 3A               [ 8]  335 	ld	a, (hl-)
      00005B 2B               [ 8]  336 	dec	hl
      00005C 4F               [ 4]  337 	ld	c, a
      00005D 56               [ 8]  338 	ld	d, (hl)
      00005E F8 02            [12]  339 	ldhl	sp,	#2
      000060 79               [ 4]  340 	ld	a, c
      000061 22               [ 8]  341 	ld	(hl+), a
      000062 72               [ 8]  342 	ld	(hl), d
                           000063   343 	C$Scroll.c$107$5_0$201	= .
                                    344 	.globl	C$Scroll.c$107$5_0$201
                                    345 ;C:/ZGB-2023.0/common/src/Scroll.c:107: for(i = 0u; i != sprite_manager_updatables[0]; ++i) {
      000063 F8 09            [12]  346 	ldhl	sp,	#9
      000065 36 00            [12]  347 	ld	(hl), #0x00
      000067                        348 00118$:
      000067 FAr00r00         [16]  349 	ld	a, (#_sprite_manager_updatables + 0)
      00006A F8 04            [12]  350 	ldhl	sp,	#4
      00006C 77               [ 8]  351 	ld	(hl), a
      00006D F8 09            [12]  352 	ldhl	sp,	#9
      00006F 7E               [ 8]  353 	ld	a, (hl)
      000070 F8 04            [12]  354 	ldhl	sp,	#4
      000072 96               [ 8]  355 	sub	a, (hl)
      000073 3E 01            [ 8]  356 	ld	a, #0x01
      000075 28 01            [12]  357 	jr	Z, 00181$
      000077 AF               [ 4]  358 	xor	a, a
      000078                        359 00181$:
      000078 F8 04            [12]  360 	ldhl	sp,	#4
      00007A 77               [ 8]  361 	ld	(hl), a
      00007B CB 46            [12]  362 	bit	0, (hl)
      00007D 20 37            [12]  363 	jr	NZ, 00104$
                           00007F   364 	C$Scroll.c$108$5_0$201	= .
                                    365 	.globl	C$Scroll.c$108$5_0$201
                                    366 ;C:/ZGB-2023.0/common/src/Scroll.c:108: s = sprite_manager_sprites[sprite_manager_updatables[i + 1]];
      00007F F8 09            [12]  367 	ldhl	sp,	#9
      000081 4E               [ 8]  368 	ld	c, (hl)
      000082 06 00            [ 8]  369 	ld	b, #0x00
      000084 03               [ 8]  370 	inc	bc
      000085 21r00r00         [12]  371 	ld	hl, #_sprite_manager_updatables
      000088 09               [ 8]  372 	add	hl, bc
      000089 6E               [ 8]  373 	ld	l, (hl)
                                    374 ;	spillPairReg hl
      00008A 26 00            [ 8]  375 	ld	h, #0x00
                                    376 ;	spillPairReg hl
                                    377 ;	spillPairReg hl
      00008C 29               [ 8]  378 	add	hl, hl
      00008D 11r00r00         [12]  379 	ld	de, #_sprite_manager_sprites
      000090 19               [ 8]  380 	add	hl, de
      000091 2A               [ 8]  381 	ld	a, (hl+)
      000092 4F               [ 4]  382 	ld	c, a
      000093 46               [ 8]  383 	ld	b, (hl)
                           000094   384 	C$Scroll.c$109$5_0$201	= .
                                    385 	.globl	C$Scroll.c$109$5_0$201
                                    386 ;C:/ZGB-2023.0/common/src/Scroll.c:109: if((s->type == type) && (s->unique_id == id)) {
      000094 21 13 00         [12]  387 	ld	hl, #0x0013
      000097 09               [ 8]  388 	add	hl, bc
      000098 5E               [ 8]  389 	ld	e, (hl)
      000099 F8 01            [12]  390 	ldhl	sp,	#1
      00009B 7E               [ 8]  391 	ld	a, (hl)
      00009C 93               [ 4]  392 	sub	a, e
      00009D 20 12            [12]  393 	jr	NZ, 00119$
      00009F 21 19 00         [12]  394 	ld	hl, #0x0019
      0000A2 09               [ 8]  395 	add	hl, bc
      0000A3 2A               [ 8]  396 	ld	a, (hl+)
      0000A4 4F               [ 4]  397 	ld	c, a
      0000A5 46               [ 8]  398 	ld	b, (hl)
      0000A6 F8 02            [12]  399 	ldhl	sp,	#2
      0000A8 7E               [ 8]  400 	ld	a, (hl)
      0000A9 91               [ 4]  401 	sub	a, c
      0000AA 20 05            [12]  402 	jr	NZ, 00184$
      0000AC 23               [ 8]  403 	inc	hl
      0000AD 7E               [ 8]  404 	ld	a, (hl)
      0000AE 90               [ 4]  405 	sub	a, b
      0000AF 28 05            [12]  406 	jr	Z, 00104$
      0000B1                        407 00184$:
                           0000B1   408 	C$Scroll.c$110$5_0$201	= .
                                    409 	.globl	C$Scroll.c$110$5_0$201
                                    410 ;C:/ZGB-2023.0/common/src/Scroll.c:110: break;
      0000B1                        411 00119$:
                           0000B1   412 	C$Scroll.c$107$4_0$200	= .
                                    413 	.globl	C$Scroll.c$107$4_0$200
                                    414 ;C:/ZGB-2023.0/common/src/Scroll.c:107: for(i = 0u; i != sprite_manager_updatables[0]; ++i) {
      0000B1 F8 09            [12]  415 	ldhl	sp,	#9
      0000B3 34               [12]  416 	inc	(hl)
      0000B4 18 B1            [12]  417 	jr	00118$
      0000B6                        418 00104$:
                           0000B6   419 	C$Scroll.c$114$3_0$199	= .
                                    420 	.globl	C$Scroll.c$114$3_0$199
                                    421 ;C:/ZGB-2023.0/common/src/Scroll.c:114: if(i == sprite_manager_updatables[0]) {
      0000B6 F8 04            [12]  422 	ldhl	sp,	#4
      0000B8 7E               [ 8]  423 	ld	a, (hl)
      0000B9 B7               [ 4]  424 	or	a, a
      0000BA 28 51            [12]  425 	jr	Z, 00111$
                           0000BC   426 	C$Scroll.c$115$4_0$203	= .
                                    427 	.globl	C$Scroll.c$115$4_0$203
                                    428 ;C:/ZGB-2023.0/common/src/Scroll.c:115: PUSH_BANK(spriteDataBanks[type]);
      0000BC 11r00r00         [12]  429 	ld	de, #_spriteDataBanks
      0000BF F8 01            [12]  430 	ldhl	sp,	#1
      0000C1 6E               [ 8]  431 	ld	l, (hl)
      0000C2 26 00            [ 8]  432 	ld	h, #0x00
      0000C4 19               [ 8]  433 	add	hl, de
      0000C5 4D               [ 4]  434 	ld	c, l
      0000C6 44               [ 4]  435 	ld	b, h
      0000C7 0A               [ 8]  436 	ld	a, (bc)
      0000C8 F5               [16]  437 	push	af
      0000C9 33               [ 8]  438 	inc	sp
      0000CA CDr00r00         [24]  439 	call	_PushBank
      0000CD 33               [ 8]  440 	inc	sp
                           0000CE   441 	C$Scroll.c$116$4_0$203	= .
                                    442 	.globl	C$Scroll.c$116$4_0$203
                                    443 ;C:/ZGB-2023.0/common/src/Scroll.c:116: sprite_y = ((y + 1) << 3) - spriteDatas[type]->height;
      0000CE F8 05            [12]  444 	ldhl	sp,	#5
      0000D0 2A               [ 8]  445 	ld	a, (hl+)
      0000D1 66               [ 8]  446 	ld	h, (hl)
                                    447 ;	spillPairReg hl
                                    448 ;	spillPairReg hl
      0000D2 6F               [ 4]  449 	ld	l, a
                                    450 ;	spillPairReg hl
                                    451 ;	spillPairReg hl
      0000D3 23               [ 8]  452 	inc	hl
      0000D4 29               [ 8]  453 	add	hl, hl
      0000D5 29               [ 8]  454 	add	hl, hl
      0000D6 29               [ 8]  455 	add	hl, hl
      0000D7 4D               [ 4]  456 	ld	c, l
      0000D8 44               [ 4]  457 	ld	b, h
      0000D9 F8 01            [12]  458 	ldhl	sp,	#1
      0000DB 6E               [ 8]  459 	ld	l, (hl)
      0000DC 26 00            [ 8]  460 	ld	h, #0x00
      0000DE 29               [ 8]  461 	add	hl, hl
      0000DF 11r00r00         [12]  462 	ld	de, #_spriteDatas
      0000E2 19               [ 8]  463 	add	hl, de
      0000E3 2A               [ 8]  464 	ld	a, (hl+)
      0000E4 66               [ 8]  465 	ld	h, (hl)
                                    466 ;	spillPairReg hl
      0000E5 6F               [ 4]  467 	ld	l, a
                                    468 ;	spillPairReg hl
                                    469 ;	spillPairReg hl
      0000E6 23               [ 8]  470 	inc	hl
      0000E7 5E               [ 8]  471 	ld	e, (hl)
      0000E8 16 00            [ 8]  472 	ld	d, #0x00
      0000EA 79               [ 4]  473 	ld	a, c
      0000EB 93               [ 4]  474 	sub	a, e
      0000EC 4F               [ 4]  475 	ld	c, a
      0000ED 78               [ 4]  476 	ld	a, b
      0000EE 9A               [ 4]  477 	sbc	a, d
      0000EF 47               [ 4]  478 	ld	b, a
                           0000F0   479 	C$Scroll.c$117$4_0$203	= .
                                    480 	.globl	C$Scroll.c$117$4_0$203
                                    481 ;C:/ZGB-2023.0/common/src/Scroll.c:117: POP_BANK;
      0000F0 C5               [16]  482 	push	bc
      0000F1 CDr00r00         [24]  483 	call	_PopBank
      0000F4 C1               [12]  484 	pop	bc
                           0000F5   485 	C$Scroll.c$118$4_0$203	= .
                                    486 	.globl	C$Scroll.c$118$4_0$203
                                    487 ;C:/ZGB-2023.0/common/src/Scroll.c:118: s = SpriteManagerAdd(type, x << 3, sprite_y);
      0000F5 F8 07            [12]  488 	ldhl	sp,#7
      0000F7 2A               [ 8]  489 	ld	a, (hl+)
      0000F8 5F               [ 4]  490 	ld	e, a
      0000F9 56               [ 8]  491 	ld	d, (hl)
      0000FA CB 23            [ 8]  492 	sla	e
      0000FC CB 12            [ 8]  493 	rl	d
      0000FE CB 23            [ 8]  494 	sla	e
      000100 CB 12            [ 8]  495 	rl	d
      000102 CB 23            [ 8]  496 	sla	e
      000104 CB 12            [ 8]  497 	rl	d
      000106 C5               [16]  498 	push	bc
      000107 F8 03            [12]  499 	ldhl	sp,	#3
      000109 7E               [ 8]  500 	ld	a, (hl)
      00010A CDr00r00         [24]  501 	call	_SpriteManagerAdd
      00010D                        502 00111$:
                           00010D   503 	C$Scroll.c$123$1_0$196	= .
                                    504 	.globl	C$Scroll.c$123$1_0$196
                                    505 ;C:/ZGB-2023.0/common/src/Scroll.c:123: id = 0x9800 + (0x1F & (x + scroll_offset_x)) + ((0x1F & (y + scroll_offset_y)) << 5);
      00010D 21r0Er00         [12]  506 	ld	hl, #_scroll_offset_x
      000110 4E               [ 8]  507 	ld	c, (hl)
      000111 06 00            [ 8]  508 	ld	b, #0x00
      000113 F8 07            [12]  509 	ldhl	sp,	#7
      000115 2A               [ 8]  510 	ld	a,	(hl+)
      000116 66               [ 8]  511 	ld	h, (hl)
      000117 6F               [ 4]  512 	ld	l, a
      000118 09               [ 8]  513 	add	hl, bc
      000119 7D               [ 4]  514 	ld	a, l
      00011A E6 1F            [ 8]  515 	and	a, #0x1f
      00011C 26 00            [ 8]  516 	ld	h, #0x00
                                    517 ;	spillPairReg hl
                                    518 ;	spillPairReg hl
                                    519 ;	spillPairReg hl
                                    520 ;	spillPairReg hl
      00011E 4F               [ 4]  521 	ld	c, a
      00011F 7C               [ 4]  522 	ld	a, h
      000120 C6 98            [ 8]  523 	add	a, #0x98
      000122 47               [ 4]  524 	ld	b, a
      000123 21r0Fr00         [12]  525 	ld	hl, #_scroll_offset_y
      000126 5E               [ 8]  526 	ld	e, (hl)
      000127 16 00            [ 8]  527 	ld	d, #0x00
      000129 F8 05            [12]  528 	ldhl	sp,	#5
      00012B 2A               [ 8]  529 	ld	a,	(hl+)
      00012C 66               [ 8]  530 	ld	h, (hl)
      00012D 6F               [ 4]  531 	ld	l, a
      00012E 19               [ 8]  532 	add	hl, de
      00012F 7D               [ 4]  533 	ld	a, l
      000130 E6 1F            [ 8]  534 	and	a, #0x1f
      000132 26 00            [ 8]  535 	ld	h, #0x00
                                    536 ;	spillPairReg hl
                                    537 ;	spillPairReg hl
      000134 6F               [ 4]  538 	ld	l, a
      000135 29               [ 8]  539 	add	hl, hl
      000136 29               [ 8]  540 	add	hl, hl
      000137 29               [ 8]  541 	add	hl, hl
      000138 29               [ 8]  542 	add	hl, hl
      000139 29               [ 8]  543 	add	hl, hl
      00013A 09               [ 8]  544 	add	hl, bc
      00013B 4D               [ 4]  545 	ld	c, l
      00013C 44               [ 4]  546 	ld	b, h
                           00013D   547 	C$Scroll.c$124$1_0$196	= .
                                    548 	.globl	C$Scroll.c$124$1_0$196
                                    549 ;C:/ZGB-2023.0/common/src/Scroll.c:124: SetTile(id, replacement);
      00013D F8 00            [12]  550 	ldhl	sp,	#0
      00013F 7E               [ 8]  551 	ld	a, (hl)
      000140 F5               [16]  552 	push	af
      000141 33               [ 8]  553 	inc	sp
      000142 C5               [16]  554 	push	bc
      000143 CDr00r00         [24]  555 	call	_SetTile
      000146 E8 03            [16]  556 	add	sp, #3
                           000148   557 	C$Scroll.c$128$1_0$196	= .
                                    558 	.globl	C$Scroll.c$128$1_0$196
                                    559 ;C:/ZGB-2023.0/common/src/Scroll.c:128: if (_cpu == CGB_TYPE) {
      000148 FAr00r00         [16]  560 	ld	a, (#__cpu)
      00014B D6 11            [ 8]  561 	sub	a, #0x11
      00014D 20 48            [12]  562 	jr	NZ, 00120$
                           00014F   563 	C$Scroll.c$129$2_0$204	= .
                                    564 	.globl	C$Scroll.c$129$2_0$204
                                    565 ;C:/ZGB-2023.0/common/src/Scroll.c:129: VBK_REG = 1;
      00014F 3E 01            [ 8]  566 	ld	a, #0x01
      000151 E0r00            [12]  567 	ldh	(_VBK_REG + 0), a
                           000153   568 	C$Scroll.c$130$2_0$204	= .
                                    569 	.globl	C$Scroll.c$130$2_0$204
                                    570 ;C:/ZGB-2023.0/common/src/Scroll.c:130: if(!scroll_cmap) {
      000153 21r05r00         [12]  571 	ld	hl, #_scroll_cmap + 1
      000156 3A               [ 8]  572 	ld	a, (hl-)
      000157 B6               [ 8]  573 	or	a, (hl)
      000158 20 10            [12]  574 	jr	NZ, 00114$
                           00015A   575 	C$Scroll.c$131$3_0$205	= .
                                    576 	.globl	C$Scroll.c$131$3_0$205
                                    577 ;C:/ZGB-2023.0/common/src/Scroll.c:131: c = &scroll_tile_info[replacement];
      00015A 01r08r02         [12]  578 	ld	bc, #_scroll_tile_info+0
      00015D F8 00            [12]  579 	ldhl	sp,	#0
      00015F 6E               [ 8]  580 	ld	l, (hl)
      000160 26 00            [ 8]  581 	ld	h, #0x00
      000162 09               [ 8]  582 	add	hl, bc
      000163 4D               [ 4]  583 	ld	c, l
      000164 7C               [ 4]  584 	ld	a, h
      000165 F8 0E            [12]  585 	ldhl	sp,	#14
      000167 71               [ 8]  586 	ld	(hl), c
      000168 23               [ 8]  587 	inc	hl
      000169 77               [ 8]  588 	ld	(hl), a
      00016A                        589 00114$:
                           00016A   590 	C$Scroll.c$133$2_0$204	= .
                                    591 	.globl	C$Scroll.c$133$2_0$204
                                    592 ;C:/ZGB-2023.0/common/src/Scroll.c:133: set_bkg_tile_xy(0x1F & (x + scroll_offset_x), 0x1F & (y + scroll_offset_y), *c);
      00016A F8 0E            [12]  593 	ldhl	sp,	#14
      00016C 2A               [ 8]  594 	ld	a, (hl+)
      00016D 4F               [ 4]  595 	ld	c, a
      00016E 46               [ 8]  596 	ld	b, (hl)
      00016F 0A               [ 8]  597 	ld	a, (bc)
      000170 4F               [ 4]  598 	ld	c, a
      000171 F8 05            [12]  599 	ldhl	sp,	#5
      000173 7E               [ 8]  600 	ld	a, (hl)
      000174 21r0Fr00         [12]  601 	ld	hl, #_scroll_offset_y
      000177 46               [ 8]  602 	ld	b, (hl)
      000178 80               [ 4]  603 	add	a, b
      000179 E6 1F            [ 8]  604 	and	a, #0x1f
      00017B 5F               [ 4]  605 	ld	e, a
      00017C F8 07            [12]  606 	ldhl	sp,	#7
      00017E 7E               [ 8]  607 	ld	a, (hl)
      00017F 21r0Er00         [12]  608 	ld	hl, #_scroll_offset_x
      000182 46               [ 8]  609 	ld	b, (hl)
      000183 80               [ 4]  610 	add	a, b
      000184 E6 1F            [ 8]  611 	and	a, #0x1f
      000186 61               [ 4]  612 	ld	h, c
                                    613 ;	spillPairReg hl
                                    614 ;	spillPairReg hl
      000187 E5               [16]  615 	push	hl
      000188 33               [ 8]  616 	inc	sp
      000189 63               [ 4]  617 	ld	h, e
                                    618 ;	spillPairReg hl
                                    619 ;	spillPairReg hl
      00018A E5               [16]  620 	push	hl
      00018B 33               [ 8]  621 	inc	sp
      00018C F5               [16]  622 	push	af
      00018D 33               [ 8]  623 	inc	sp
      00018E CDr00r00         [24]  624 	call	_set_bkg_tile_xy
      000191 E8 03            [16]  625 	add	sp, #3
                           000193   626 	C$Scroll.c$134$2_0$204	= .
                                    627 	.globl	C$Scroll.c$134$2_0$204
                                    628 ;C:/ZGB-2023.0/common/src/Scroll.c:134: VBK_REG = 0;
      000193 3E 00            [ 8]  629 	ld	a, #0x00
      000195 E0r00            [12]  630 	ldh	(_VBK_REG + 0), a
      000197                        631 00120$:
                           000197   632 	C$Scroll.c$137$1_0$196	= .
                                    633 	.globl	C$Scroll.c$137$1_0$196
                                    634 ;C:/ZGB-2023.0/common/src/Scroll.c:137: }
      000197 E8 0A            [16]  635 	add	sp, #10
      000199 E1               [12]  636 	pop	hl
      00019A E8 04            [16]  637 	add	sp, #4
      00019C E9               [ 4]  638 	jp	(hl)
                           00019D   639 	G$ScrollSetTiles$0$0	= .
                                    640 	.globl	G$ScrollSetTiles$0$0
                           00019D   641 	C$Scroll.c$140$1_0$207	= .
                                    642 	.globl	C$Scroll.c$140$1_0$207
                                    643 ;C:/ZGB-2023.0/common/src/Scroll.c:140: UINT16 ScrollSetTiles(UINT8 first_tile, UINT8 tiles_bank, const struct TilesInfo* tiles) {
                                    644 ;	---------------------------------
                                    645 ; Function ScrollSetTiles
                                    646 ; ---------------------------------
      00019D                        647 _ScrollSetTiles::
      00019D E8 F5            [16]  648 	add	sp, #-11
      00019F F8 09            [12]  649 	ldhl	sp,	#9
      0001A1 32               [ 8]  650 	ld	(hl-), a
                           0001A2   651 	C$Scroll.c$145$2_0$207	= .
                                    652 	.globl	C$Scroll.c$145$2_0$207
                                    653 ;C:/ZGB-2023.0/common/src/Scroll.c:145: UINT16 offset = first_tile;
      0001A2 7B               [ 4]  654 	ld	a, e
      0001A3 22               [ 8]  655 	ld	(hl+), a
      0001A4 7E               [ 8]  656 	ld	a, (hl)
      0001A5 F8 00            [12]  657 	ldhl	sp,	#0
      0001A7 22               [ 8]  658 	ld	(hl+), a
      0001A8 36 00            [12]  659 	ld	(hl), #0x00
                           0001AA   660 	C$Scroll.c$150$1_0$207	= .
                                    661 	.globl	C$Scroll.c$150$1_0$207
                                    662 ;C:/ZGB-2023.0/common/src/Scroll.c:150: tiles_0 = tiles;
      0001AA F8 0D            [12]  663 	ldhl	sp,	#13
      0001AC 2A               [ 8]  664 	ld	a, (hl+)
      0001AD 4F               [ 4]  665 	ld	c, a
      0001AE 46               [ 8]  666 	ld	b, (hl)
                           0001AF   667 	C$Scroll.c$147$1_0$207	= .
                                    668 	.globl	C$Scroll.c$147$1_0$207
                                    669 ;C:/ZGB-2023.0/common/src/Scroll.c:147: if(first_tile == 0)
      0001AF F8 09            [12]  670 	ldhl	sp,	#9
      0001B1 7E               [ 8]  671 	ld	a, (hl)
      0001B2 B7               [ 4]  672 	or	a, a
      0001B3 20 0B            [12]  673 	jr	NZ, 00102$
                           0001B5   674 	C$Scroll.c$149$2_0$208	= .
                                    675 	.globl	C$Scroll.c$149$2_0$208
                                    676 ;C:/ZGB-2023.0/common/src/Scroll.c:149: tiles_bank_0 = tiles_bank;
      0001B5 2B               [ 8]  677 	dec	hl
      0001B6 7E               [ 8]  678 	ld	a, (hl)
      0001B7 EAr15r03         [16]  679 	ld	(#_tiles_bank_0),a
                           0001BA   680 	C$Scroll.c$150$2_0$208	= .
                                    681 	.globl	C$Scroll.c$150$2_0$208
                                    682 ;C:/ZGB-2023.0/common/src/Scroll.c:150: tiles_0 = tiles;
      0001BA 21r16r03         [12]  683 	ld	hl, #_tiles_0
      0001BD 79               [ 4]  684 	ld	a, c
      0001BE 22               [ 8]  685 	ld	(hl+), a
      0001BF 70               [ 8]  686 	ld	(hl), b
      0001C0                        687 00102$:
                           0001C0   688 	C$Scroll.c$153$1_0$207	= .
                                    689 	.globl	C$Scroll.c$153$1_0$207
                                    690 ;C:/ZGB-2023.0/common/src/Scroll.c:153: PUSH_BANK(tiles_bank);
      0001C0 C5               [16]  691 	push	bc
      0001C1 F8 0A            [12]  692 	ldhl	sp,	#10
      0001C3 7E               [ 8]  693 	ld	a, (hl)
      0001C4 F5               [16]  694 	push	af
      0001C5 33               [ 8]  695 	inc	sp
      0001C6 CDr00r00         [24]  696 	call	_PushBank
      0001C9 33               [ 8]  697 	inc	sp
      0001CA C1               [12]  698 	pop	bc
                           0001CB   699 	C$Scroll.c$154$1_0$207	= .
                                    700 	.globl	C$Scroll.c$154$1_0$207
                                    701 ;C:/ZGB-2023.0/common/src/Scroll.c:154: n_tiles = tiles->num_frames;
      0001CB F8 06            [12]  702 	ldhl	sp,	#6
      0001CD 79               [ 4]  703 	ld	a, c
      0001CE 22               [ 8]  704 	ld	(hl+), a
      0001CF 70               [ 8]  705 	ld	(hl), b
      0001D0 0A               [ 8]  706 	ld	a, (bc)
      0001D1 F8 0A            [12]  707 	ldhl	sp,	#10
      0001D3 77               [ 8]  708 	ld	(hl), a
                           0001D4   709 	C$Scroll.c$155$1_0$207	= .
                                    710 	.globl	C$Scroll.c$155$1_0$207
                                    711 ;C:/ZGB-2023.0/common/src/Scroll.c:155: palette_entries = tiles->color_data;
      0001D4 21 06 00         [12]  712 	ld	hl, #0x0006
      0001D7 09               [ 8]  713 	add	hl, bc
      0001D8 5D               [ 4]  714 	ld	e, l
      0001D9 54               [ 4]  715 	ld	d, h
      0001DA 1A               [ 8]  716 	ld	a, (de)
      0001DB F8 02            [12]  717 	ldhl	sp,	#2
      0001DD 22               [ 8]  718 	ld	(hl+), a
      0001DE 13               [ 8]  719 	inc	de
      0001DF 1A               [ 8]  720 	ld	a, (de)
      0001E0 77               [ 8]  721 	ld	(hl), a
                           0001E1   722 	C$Scroll.c$157$1_0$207	= .
                                    723 	.globl	C$Scroll.c$157$1_0$207
                                    724 ;C:/ZGB-2023.0/common/src/Scroll.c:157: set_bkg_data(first_tile, n_tiles, tiles->data);
      0001E1 69               [ 4]  725 	ld	l, c
      0001E2 60               [ 4]  726 	ld	h, b
      0001E3 23               [ 8]  727 	inc	hl
      0001E4 2A               [ 8]  728 	ld	a, (hl+)
      0001E5 4F               [ 4]  729 	ld	c, a
      0001E6 46               [ 8]  730 	ld	b, (hl)
      0001E7 C5               [16]  731 	push	bc
      0001E8 F8 0C            [12]  732 	ldhl	sp,	#12
      0001EA 3A               [ 8]  733 	ld	a, (hl-)
      0001EB 57               [ 4]  734 	ld	d, a
      0001EC 5E               [ 8]  735 	ld	e, (hl)
      0001ED D5               [16]  736 	push	de
      0001EE CDr00r00         [24]  737 	call	_set_bkg_data
      0001F1 E8 04            [16]  738 	add	sp, #4
                           0001F3   739 	C$Scroll.c$158$1_0$207	= .
                                    740 	.globl	C$Scroll.c$158$1_0$207
                                    741 ;C:/ZGB-2023.0/common/src/Scroll.c:158: last_tile_loaded = first_tile + n_tiles;
      0001F3 F8 09            [12]  742 	ldhl	sp,	#9
      0001F5 2A               [ 8]  743 	ld	a, (hl+)
      0001F6 86               [ 8]  744 	add	a, (hl)
      0001F7 EAr18r00         [16]  745 	ld	(#_last_tile_loaded),a
                           0001FA   746 	C$Scroll.c$159$3_0$210	= .
                                    747 	.globl	C$Scroll.c$159$3_0$210
                                    748 ;C:/ZGB-2023.0/common/src/Scroll.c:159: for(i = first_tile; i != last_tile_loaded; ++i) {
      0001FA F8 09            [12]  749 	ldhl	sp,	#9
      0001FC 4E               [ 8]  750 	ld	c, (hl)
      0001FD                        751 00110$:
      0001FD FAr18r00         [16]  752 	ld	a, (#_last_tile_loaded)
      000200 91               [ 4]  753 	sub	a, c
      000201 28 39            [12]  754 	jr	Z, 00103$
                           000203   755 	C$Scroll.c$160$3_0$210	= .
                                    756 	.globl	C$Scroll.c$160$3_0$210
                                    757 ;C:/ZGB-2023.0/common/src/Scroll.c:160: scroll_tile_info[i] = palette_entries ? palette_entries[i - first_tile] : 0;
      000203 11r08r02         [12]  758 	ld	de, #_scroll_tile_info
      000206 69               [ 4]  759 	ld	l, c
      000207 26 00            [ 8]  760 	ld	h, #0x00
      000209 19               [ 8]  761 	add	hl, de
      00020A E5               [16]  762 	push	hl
      00020B 7D               [ 4]  763 	ld	a, l
      00020C F8 06            [12]  764 	ldhl	sp,	#6
      00020E 77               [ 8]  765 	ld	(hl), a
      00020F E1               [12]  766 	pop	hl
      000210 7C               [ 4]  767 	ld	a, h
      000211 F8 05            [12]  768 	ldhl	sp,	#5
      000213 32               [ 8]  769 	ld	(hl-), a
      000214 2B               [ 8]  770 	dec	hl
      000215 3A               [ 8]  771 	ld	a, (hl-)
      000216 B6               [ 8]  772 	or	a, (hl)
      000217 28 18            [12]  773 	jr	Z, 00117$
      000219 79               [ 4]  774 	ld	a, c
      00021A 06 00            [ 8]  775 	ld	b, #0x00
      00021C F8 09            [12]  776 	ldhl	sp,	#9
      00021E 5E               [ 8]  777 	ld	e, (hl)
      00021F 16 00            [ 8]  778 	ld	d, #0x00
      000221 93               [ 4]  779 	sub	a, e
      000222 5F               [ 4]  780 	ld	e, a
      000223 78               [ 4]  781 	ld	a, b
      000224 9A               [ 4]  782 	sbc	a, d
      000225 57               [ 4]  783 	ld	d, a
      000226 F8 02            [12]  784 	ldhl	sp,	#2
      000228 2A               [ 8]  785 	ld	a,	(hl+)
      000229 66               [ 8]  786 	ld	h, (hl)
      00022A 6F               [ 4]  787 	ld	l, a
      00022B 19               [ 8]  788 	add	hl, de
      00022C 5D               [ 4]  789 	ld	e, l
      00022D 54               [ 4]  790 	ld	d, h
      00022E 1A               [ 8]  791 	ld	a, (de)
      00022F 18 01            [12]  792 	jr	00118$
      000231                        793 00117$:
      000231 AF               [ 4]  794 	xor	a, a
      000232                        795 00118$:
      000232 47               [ 4]  796 	ld	b, a
      000233 F8 04            [12]  797 	ldhl	sp,	#4
      000235 2A               [ 8]  798 	ld	a,	(hl+)
      000236 66               [ 8]  799 	ld	h, (hl)
      000237 6F               [ 4]  800 	ld	l, a
      000238 70               [ 8]  801 	ld	(hl), b
                           000239   802 	C$Scroll.c$159$2_0$209	= .
                                    803 	.globl	C$Scroll.c$159$2_0$209
                                    804 ;C:/ZGB-2023.0/common/src/Scroll.c:159: for(i = first_tile; i != last_tile_loaded; ++i) {
      000239 0C               [ 4]  805 	inc	c
      00023A 18 C1            [12]  806 	jr	00110$
      00023C                        807 00103$:
                           00023C   808 	C$Scroll.c$165$3_0$212	= .
                                    809 	.globl	C$Scroll.c$165$3_0$212
                                    810 ;C:/ZGB-2023.0/common/src/Scroll.c:165: for(i = 0; i != last_bg_pal_loaded; ++ i)
      00023C F8 06            [12]  811 	ldhl	sp,#6
      00023E 2A               [ 8]  812 	ld	a, (hl+)
      00023F 5F               [ 4]  813 	ld	e, a
      000240 56               [ 8]  814 	ld	d, (hl)
      000241 21 03 00         [12]  815 	ld	hl, #0x0003
      000244 19               [ 8]  816 	add	hl, de
      000245 E5               [16]  817 	push	hl
      000246 7D               [ 4]  818 	ld	a, l
      000247 F8 04            [12]  819 	ldhl	sp,	#4
      000249 77               [ 8]  820 	ld	(hl), a
      00024A E1               [12]  821 	pop	hl
      00024B 7C               [ 4]  822 	ld	a, h
      00024C F8 03            [12]  823 	ldhl	sp,	#3
      00024E 77               [ 8]  824 	ld	(hl), a
      00024F F8 06            [12]  825 	ldhl	sp,#6
      000251 2A               [ 8]  826 	ld	a, (hl+)
      000252 5F               [ 4]  827 	ld	e, a
      000253 56               [ 8]  828 	ld	d, (hl)
      000254 21 04 00         [12]  829 	ld	hl, #0x0004
      000257 19               [ 8]  830 	add	hl, de
      000258 E5               [16]  831 	push	hl
      000259 7D               [ 4]  832 	ld	a, l
      00025A F8 06            [12]  833 	ldhl	sp,	#6
      00025C 77               [ 8]  834 	ld	(hl), a
      00025D E1               [12]  835 	pop	hl
      00025E 7C               [ 4]  836 	ld	a, h
      00025F F8 05            [12]  837 	ldhl	sp,	#5
      000261 77               [ 8]  838 	ld	(hl), a
      000262 F8 0A            [12]  839 	ldhl	sp,	#10
      000264 36 00            [12]  840 	ld	(hl), #0x00
      000266                        841 00113$:
      000266 F8 0A            [12]  842 	ldhl	sp,	#10
      000268 7E               [ 8]  843 	ld	a, (hl)
      000269 21r19r00         [12]  844 	ld	hl, #_last_bg_pal_loaded
      00026C 96               [ 8]  845 	sub	a, (hl)
      00026D 28 49            [12]  846 	jr	Z, 00106$
                           00026F   847 	C$Scroll.c$167$3_0$212	= .
                                    848 	.globl	C$Scroll.c$167$3_0$212
                                    849 ;C:/ZGB-2023.0/common/src/Scroll.c:167: if(memcmp(&ZGB_Fading_BPal[i << 2], tiles->pals, tiles->num_pals << 3) == 0)
      00026F F8 02            [12]  850 	ldhl	sp,#2
      000271 2A               [ 8]  851 	ld	a, (hl+)
      000272 5F               [ 4]  852 	ld	e, a
      000273 56               [ 8]  853 	ld	d, (hl)
      000274 1A               [ 8]  854 	ld	a, (de)
      000275 F8 07            [12]  855 	ldhl	sp,	#7
      000277 77               [ 8]  856 	ld	(hl), a
      000278 3A               [ 8]  857 	ld	a, (hl-)
      000279 22               [ 8]  858 	ld	(hl+), a
      00027A AF               [ 4]  859 	xor	a, a
      00027B 32               [ 8]  860 	ld	(hl-), a
      00027C 2A               [ 8]  861 	ld	a, (hl+)
      00027D 4F               [ 4]  862 	ld	c, a
      00027E 3A               [ 8]  863 	ld	a, (hl-)
      00027F 2B               [ 8]  864 	dec	hl
      000280 2B               [ 8]  865 	dec	hl
      000281 47               [ 4]  866 	ld	b, a
      000282 CB 21            [ 8]  867 	sla	c
      000284 CB 10            [ 8]  868 	rl	b
      000286 CB 21            [ 8]  869 	sla	c
      000288 CB 10            [ 8]  870 	rl	b
      00028A CB 21            [ 8]  871 	sla	c
      00028C CB 10            [ 8]  872 	rl	b
      00028E 2A               [ 8]  873 	ld	a, (hl+)
      00028F 5F               [ 4]  874 	ld	e, a
      000290 56               [ 8]  875 	ld	d, (hl)
      000291 1A               [ 8]  876 	ld	a, (de)
      000292 6F               [ 4]  877 	ld	l, a
                                    878 ;	spillPairReg hl
                                    879 ;	spillPairReg hl
      000293 13               [ 8]  880 	inc	de
      000294 1A               [ 8]  881 	ld	a, (de)
      000295 5D               [ 4]  882 	ld	e, l
      000296 57               [ 4]  883 	ld	d, a
      000297 F8 0A            [12]  884 	ldhl	sp,	#10
      000299 7E               [ 8]  885 	ld	a, (hl)
      00029A 87               [ 4]  886 	add	a, a
      00029B 87               [ 4]  887 	add	a, a
      00029C 6F               [ 4]  888 	ld	l, a
                                    889 ;	spillPairReg hl
                                    890 ;	spillPairReg hl
      00029D 07               [ 4]  891 	rlca
      00029E 9F               [ 4]  892 	sbc	a, a
      00029F 67               [ 4]  893 	ld	h, a
      0002A0 29               [ 8]  894 	add	hl, hl
      0002A1 D5               [16]  895 	push	de
      0002A2 11r00r00         [12]  896 	ld	de, #_ZGB_Fading_BPal
      0002A5 19               [ 8]  897 	add	hl, de
      0002A6 D1               [12]  898 	pop	de
      0002A7 C5               [16]  899 	push	bc
      0002A8 D5               [16]  900 	push	de
      0002A9 E5               [16]  901 	push	hl
      0002AA CDr00r00         [24]  902 	call	_memcmp
      0002AD E8 06            [16]  903 	add	sp, #6
      0002AF 7A               [ 4]  904 	ld	a, d
      0002B0 B3               [ 4]  905 	or	a, e
      0002B1 28 05            [12]  906 	jr	Z, 00106$
                           0002B3   907 	C$Scroll.c$165$2_0$211	= .
                                    908 	.globl	C$Scroll.c$165$2_0$211
                                    909 ;C:/ZGB-2023.0/common/src/Scroll.c:165: for(i = 0; i != last_bg_pal_loaded; ++ i)
      0002B3 F8 0A            [12]  910 	ldhl	sp,	#10
      0002B5 34               [12]  911 	inc	(hl)
      0002B6 18 AE            [12]  912 	jr	00113$
      0002B8                        913 00106$:
                           0002B8   914 	C$Scroll.c$171$1_0$207	= .
                                    915 	.globl	C$Scroll.c$171$1_0$207
                                    916 ;C:/ZGB-2023.0/common/src/Scroll.c:171: offset |= (i << 8);
      0002B8 F8 0A            [12]  917 	ldhl	sp,	#10
      0002BA 4E               [ 8]  918 	ld	c, (hl)
      0002BB 06 00            [ 8]  919 	ld	b, #0x00
      0002BD F8 00            [12]  920 	ldhl	sp,	#0
      0002BF 7E               [ 8]  921 	ld	a, (hl)
      0002C0 B0               [ 4]  922 	or	a, b
      0002C1 F8 06            [12]  923 	ldhl	sp,	#6
      0002C3 22               [ 8]  924 	ld	(hl+), a
      0002C4 71               [ 8]  925 	ld	(hl), c
                           0002C5   926 	C$Scroll.c$172$1_0$207	= .
                                    927 	.globl	C$Scroll.c$172$1_0$207
                                    928 ;C:/ZGB-2023.0/common/src/Scroll.c:172: if(i == last_bg_pal_loaded)
      0002C5 FAr19r00         [16]  929 	ld	a, (#_last_bg_pal_loaded)
      0002C8 F8 0A            [12]  930 	ldhl	sp,	#10
      0002CA 96               [ 8]  931 	sub	a, (hl)
      0002CB 20 2C            [12]  932 	jr	NZ, 00108$
                           0002CD   933 	C$Scroll.c$174$2_0$213	= .
                                    934 	.globl	C$Scroll.c$174$2_0$213
                                    935 ;C:/ZGB-2023.0/common/src/Scroll.c:174: SetPalette(BG_PALETTE, last_bg_pal_loaded, tiles->num_pals, tiles->pals, tiles_bank);
      0002CD F8 04            [12]  936 	ldhl	sp,#4
      0002CF 2A               [ 8]  937 	ld	a, (hl+)
      0002D0 5F               [ 4]  938 	ld	e, a
      0002D1 3A               [ 8]  939 	ld	a, (hl-)
      0002D2 2B               [ 8]  940 	dec	hl
      0002D3 2B               [ 8]  941 	dec	hl
      0002D4 57               [ 4]  942 	ld	d, a
      0002D5 1A               [ 8]  943 	ld	a, (de)
      0002D6 4F               [ 4]  944 	ld	c, a
      0002D7 13               [ 8]  945 	inc	de
      0002D8 1A               [ 8]  946 	ld	a, (de)
      0002D9 47               [ 4]  947 	ld	b, a
      0002DA 2A               [ 8]  948 	ld	a, (hl+)
      0002DB 5F               [ 4]  949 	ld	e, a
      0002DC 56               [ 8]  950 	ld	d, (hl)
      0002DD 1A               [ 8]  951 	ld	a, (de)
      0002DE F8 08            [12]  952 	ldhl	sp,	#8
      0002E0 66               [ 8]  953 	ld	h, (hl)
                                    954 ;	spillPairReg hl
                                    955 ;	spillPairReg hl
      0002E1 E5               [16]  956 	push	hl
      0002E2 33               [ 8]  957 	inc	sp
      0002E3 C5               [16]  958 	push	bc
      0002E4 F5               [16]  959 	push	af
      0002E5 33               [ 8]  960 	inc	sp
      0002E6 21r19r00         [12]  961 	ld	hl, #_last_bg_pal_loaded
      0002E9 5E               [ 8]  962 	ld	e, (hl)
      0002EA AF               [ 4]  963 	xor	a, a
      0002EB CDr00r00         [24]  964 	call	_SetPalette
                           0002EE   965 	C$Scroll.c$175$2_0$213	= .
                                    966 	.globl	C$Scroll.c$175$2_0$213
                                    967 ;C:/ZGB-2023.0/common/src/Scroll.c:175: last_bg_pal_loaded += tiles->num_pals;
      0002EE F8 02            [12]  968 	ldhl	sp,#2
      0002F0 2A               [ 8]  969 	ld	a, (hl+)
      0002F1 5F               [ 4]  970 	ld	e, a
      0002F2 56               [ 8]  971 	ld	d, (hl)
      0002F3 1A               [ 8]  972 	ld	a, (de)
      0002F4 21r19r00         [12]  973 	ld	hl, #_last_bg_pal_loaded
      0002F7 86               [ 8]  974 	add	a, (hl)
      0002F8 77               [ 8]  975 	ld	(hl), a
      0002F9                        976 00108$:
                           0002F9   977 	C$Scroll.c$179$1_0$207	= .
                                    978 	.globl	C$Scroll.c$179$1_0$207
                                    979 ;C:/ZGB-2023.0/common/src/Scroll.c:179: POP_BANK;
      0002F9 CDr00r00         [24]  980 	call	_PopBank
                           0002FC   981 	C$Scroll.c$181$1_0$207	= .
                                    982 	.globl	C$Scroll.c$181$1_0$207
                                    983 ;C:/ZGB-2023.0/common/src/Scroll.c:181: return offset;
      0002FC F8 06            [12]  984 	ldhl	sp,	#6
      0002FE 2A               [ 8]  985 	ld	a, (hl+)
      0002FF 4F               [ 4]  986 	ld	c, a
      000300 46               [ 8]  987 	ld	b, (hl)
                           000301   988 	C$Scroll.c$182$1_0$207	= .
                                    989 	.globl	C$Scroll.c$182$1_0$207
                                    990 ;C:/ZGB-2023.0/common/src/Scroll.c:182: }
      000301 E8 0B            [16]  991 	add	sp, #11
      000303 E1               [12]  992 	pop	hl
      000304 F1               [12]  993 	pop	af
      000305 E9               [ 4]  994 	jp	(hl)
                           000306   995 	G$UpdateMapTile$0$0	= .
                                    996 	.globl	G$UpdateMapTile$0$0
                           000306   997 	C$Scroll.c$184$1_0$215	= .
                                    998 	.globl	C$Scroll.c$184$1_0$215
                                    999 ;C:/ZGB-2023.0/common/src/Scroll.c:184: void UpdateMapTile(UINT8 bg_or_win, UINT8 x, UINT8 y, UINT16 map_offset, UINT8 data, UINT8* attr)
                                   1000 ;	---------------------------------
                                   1001 ; Function UpdateMapTile
                                   1002 ; ---------------------------------
      000306                       1003 _UpdateMapTile::
      000306 4F               [ 4] 1004 	ld	c, a
      000307 43               [ 4] 1005 	ld	b, e
                           000308  1006 	C$Scroll.c$187$1_1$216	= .
                                   1007 	.globl	C$Scroll.c$187$1_1$216
                                   1008 ;C:/ZGB-2023.0/common/src/Scroll.c:187: UINT8* offsetts = &map_offset;
                           000308  1009 	C$Scroll.c$188$1_1$216	= .
                                   1010 	.globl	C$Scroll.c$188$1_1$216
                                   1011 ;C:/ZGB-2023.0/common/src/Scroll.c:188: data += offsetts[0];
      000308 F8 03            [12] 1012 	ldhl	sp,	#3
      00030A 2A               [ 8] 1013 	ld	a, (hl+)
      00030B 23               [ 8] 1014 	inc	hl
      00030C 86               [ 8] 1015 	add	a, (hl)
      00030D 77               [ 8] 1016 	ld	(hl), a
                           00030E  1017 	C$Scroll.c$189$1_1$216	= .
                                   1018 	.globl	C$Scroll.c$189$1_1$216
                                   1019 ;C:/ZGB-2023.0/common/src/Scroll.c:189: if(bg_or_win == 0)
      00030E 79               [ 4] 1020 	ld	a, c
      00030F B7               [ 4] 1021 	or	a, a
      000310 20 11            [12] 1022 	jr	NZ, 00102$
                           000312  1023 	C$Scroll.c$190$1_1$216	= .
                                   1024 	.globl	C$Scroll.c$190$1_1$216
                                   1025 ;C:/ZGB-2023.0/common/src/Scroll.c:190: set_bkg_tile_xy(x, y, data);
      000312 7E               [ 8] 1026 	ld	a, (hl)
      000313 F5               [16] 1027 	push	af
      000314 33               [ 8] 1028 	inc	sp
      000315 F8 03            [12] 1029 	ldhl	sp,	#3
      000317 7E               [ 8] 1030 	ld	a, (hl)
      000318 F5               [16] 1031 	push	af
      000319 33               [ 8] 1032 	inc	sp
      00031A C5               [16] 1033 	push	bc
      00031B 33               [ 8] 1034 	inc	sp
      00031C CDr00r00         [24] 1035 	call	_set_bkg_tile_xy
      00031F E8 03            [16] 1036 	add	sp, #3
      000321 18 11            [12] 1037 	jr	00103$
      000323                       1038 00102$:
                           000323  1039 	C$Scroll.c$192$1_1$216	= .
                                   1040 	.globl	C$Scroll.c$192$1_1$216
                                   1041 ;C:/ZGB-2023.0/common/src/Scroll.c:192: set_win_tile_xy(x, y, data);
      000323 F8 05            [12] 1042 	ldhl	sp,	#5
      000325 7E               [ 8] 1043 	ld	a, (hl)
      000326 F5               [16] 1044 	push	af
      000327 33               [ 8] 1045 	inc	sp
      000328 F8 03            [12] 1046 	ldhl	sp,	#3
      00032A 7E               [ 8] 1047 	ld	a, (hl)
      00032B F5               [16] 1048 	push	af
      00032C 33               [ 8] 1049 	inc	sp
      00032D C5               [16] 1050 	push	bc
      00032E 33               [ 8] 1051 	inc	sp
      00032F CDr00r00         [24] 1052 	call	_set_win_tile_xy
      000332 E8 03            [16] 1053 	add	sp, #3
      000334                       1054 00103$:
                           000334  1055 	C$Scroll.c$195$1_1$216	= .
                                   1056 	.globl	C$Scroll.c$195$1_1$216
                                   1057 ;C:/ZGB-2023.0/common/src/Scroll.c:195: if (_cpu == CGB_TYPE) {
      000334 FAr00r00         [16] 1058 	ld	a, (#__cpu)
      000337 D6 11            [ 8] 1059 	sub	a, #0x11
      000339 20 49            [12] 1060 	jr	NZ, 00109$
                           00033B  1061 	C$Scroll.c$196$2_1$217	= .
                                   1062 	.globl	C$Scroll.c$196$2_1$217
                                   1063 ;C:/ZGB-2023.0/common/src/Scroll.c:196: VBK_REG = 1;
      00033B 3E 01            [ 8] 1064 	ld	a, #0x01
      00033D E0r00            [12] 1065 	ldh	(_VBK_REG + 0), a
                           00033F  1066 	C$Scroll.c$198$2_2$218	= .
                                   1067 	.globl	C$Scroll.c$198$2_2$218
                                   1068 ;C:/ZGB-2023.0/common/src/Scroll.c:198: UINT8 c = attr ? *attr : scroll_tile_info[data];
      00033F F8 07            [12] 1069 	ldhl	sp,	#7
      000341 3A               [ 8] 1070 	ld	a, (hl-)
      000342 B6               [ 8] 1071 	or	a, (hl)
      000343 28 06            [12] 1072 	jr	Z, 00111$
      000345 2A               [ 8] 1073 	ld	a, (hl+)
      000346 5F               [ 4] 1074 	ld	e, a
      000347 56               [ 8] 1075 	ld	d, (hl)
      000348 1A               [ 8] 1076 	ld	a, (de)
      000349 18 0C            [12] 1077 	jr	00112$
      00034B                       1078 00111$:
      00034B 11r08r02         [12] 1079 	ld	de, #_scroll_tile_info+0
      00034E F8 05            [12] 1080 	ldhl	sp,	#5
      000350 6E               [ 8] 1081 	ld	l, (hl)
      000351 26 00            [ 8] 1082 	ld	h, #0x00
      000353 19               [ 8] 1083 	add	hl, de
      000354 5D               [ 4] 1084 	ld	e, l
      000355 54               [ 4] 1085 	ld	d, h
      000356 1A               [ 8] 1086 	ld	a, (de)
      000357                       1087 00112$:
                           000357  1088 	C$Scroll.c$199$2_2$218	= .
                                   1089 	.globl	C$Scroll.c$199$2_2$218
                                   1090 ;C:/ZGB-2023.0/common/src/Scroll.c:199: c += offsetts[1];
      000357 21 04 00         [12] 1091 	ld	hl,#0x4
      00035A 39               [ 8] 1092 	add	hl,sp
      00035B 5E               [ 8] 1093 	ld	e, (hl)
      00035C 83               [ 4] 1094 	add	a, e
      00035D 57               [ 4] 1095 	ld	d, a
                           00035E  1096 	C$Scroll.c$201$2_2$218	= .
                                   1097 	.globl	C$Scroll.c$201$2_2$218
                                   1098 ;C:/ZGB-2023.0/common/src/Scroll.c:201: if (bg_or_win == 0)
      00035E 79               [ 4] 1099 	ld	a, c
      00035F B7               [ 4] 1100 	or	a, a
      000360 20 10            [12] 1101 	jr	NZ, 00105$
                           000362  1102 	C$Scroll.c$202$2_2$218	= .
                                   1103 	.globl	C$Scroll.c$202$2_2$218
                                   1104 ;C:/ZGB-2023.0/common/src/Scroll.c:202: set_bkg_tile_xy(x, y, c);
      000362 D5               [16] 1105 	push	de
      000363 33               [ 8] 1106 	inc	sp
      000364 F8 03            [12] 1107 	ldhl	sp,	#3
      000366 7E               [ 8] 1108 	ld	a, (hl)
      000367 F5               [16] 1109 	push	af
      000368 33               [ 8] 1110 	inc	sp
      000369 C5               [16] 1111 	push	bc
      00036A 33               [ 8] 1112 	inc	sp
      00036B CDr00r00         [24] 1113 	call	_set_bkg_tile_xy
      00036E E8 03            [16] 1114 	add	sp, #3
      000370 18 0E            [12] 1115 	jr	00106$
      000372                       1116 00105$:
                           000372  1117 	C$Scroll.c$204$2_2$218	= .
                                   1118 	.globl	C$Scroll.c$204$2_2$218
                                   1119 ;C:/ZGB-2023.0/common/src/Scroll.c:204: set_win_tile_xy(x, y, c);
      000372 D5               [16] 1120 	push	de
      000373 33               [ 8] 1121 	inc	sp
      000374 F8 03            [12] 1122 	ldhl	sp,	#3
      000376 7E               [ 8] 1123 	ld	a, (hl)
      000377 F5               [16] 1124 	push	af
      000378 33               [ 8] 1125 	inc	sp
      000379 C5               [16] 1126 	push	bc
      00037A 33               [ 8] 1127 	inc	sp
      00037B CDr00r00         [24] 1128 	call	_set_win_tile_xy
      00037E E8 03            [16] 1129 	add	sp, #3
      000380                       1130 00106$:
                           000380  1131 	C$Scroll.c$205$2_2$218	= .
                                   1132 	.globl	C$Scroll.c$205$2_2$218
                                   1133 ;C:/ZGB-2023.0/common/src/Scroll.c:205: VBK_REG = 0;
      000380 3E 00            [ 8] 1134 	ld	a, #0x00
      000382 E0r00            [12] 1135 	ldh	(_VBK_REG + 0), a
      000384                       1136 00109$:
                           000384  1137 	C$Scroll.c$208$1_1$215	= .
                                   1138 	.globl	C$Scroll.c$208$1_1$215
                                   1139 ;C:/ZGB-2023.0/common/src/Scroll.c:208: }
      000384 E1               [12] 1140 	pop	hl
      000385 E8 06            [16] 1141 	add	sp, #6
      000387 E9               [ 4] 1142 	jp	(hl)
                           000388  1143 	G$LoadMap$0$0	= .
                                   1144 	.globl	G$LoadMap$0$0
                           000388  1145 	C$Scroll.c$210$1_1$220	= .
                                   1146 	.globl	C$Scroll.c$210$1_1$220
                                   1147 ;C:/ZGB-2023.0/common/src/Scroll.c:210: UINT16 LoadMap(UINT8 bg_or_win, UINT8 x, UINT8 y, UINT8 map_bank, struct MapInfo* map) {
                                   1148 ;	---------------------------------
                                   1149 ; Function LoadMap
                                   1150 ; ---------------------------------
      000388                       1151 _LoadMap::
      000388 E8 EF            [16] 1152 	add	sp, #-17
      00038A F8 0A            [12] 1153 	ldhl	sp,	#10
      00038C 32               [ 8] 1154 	ld	(hl-), a
      00038D 73               [ 8] 1155 	ld	(hl), e
                           00038E  1156 	C$Scroll.c$211$1_0$220	= .
                                   1157 	.globl	C$Scroll.c$211$1_0$220
                                   1158 ;C:/ZGB-2023.0/common/src/Scroll.c:211: PUSH_BANK(map_bank);
      00038E F8 14            [12] 1159 	ldhl	sp,	#20
      000390 7E               [ 8] 1160 	ld	a, (hl)
      000391 F5               [16] 1161 	push	af
      000392 33               [ 8] 1162 	inc	sp
      000393 CDr00r00         [24] 1163 	call	_PushBank
      000396 33               [ 8] 1164 	inc	sp
                           000397  1165 	C$Scroll.c$214$1_1$221	= .
                                   1166 	.globl	C$Scroll.c$214$1_1$221
                                   1167 ;C:/ZGB-2023.0/common/src/Scroll.c:214: UINT8 load_tiles = tiles_bank_0 != map->tiles_bank || tiles_0 != map->tiles; //If the tile set is the same as the one used for the scroll or the bg (which is stored in tiles_bank_0 and tiles0) then do not load the tiles again
      000397 F8 15            [12] 1168 	ldhl	sp,	#21
      000399 2A               [ 8] 1169 	ld	a, (hl+)
      00039A 4F               [ 4] 1170 	ld	c, a
      00039B 46               [ 8] 1171 	ld	b, (hl)
      00039C 21 06 00         [12] 1172 	ld	hl, #0x0006
      00039F 09               [ 8] 1173 	add	hl, bc
      0003A0 7E               [ 8] 1174 	ld	a, (hl)
      0003A1 F8 0E            [12] 1175 	ldhl	sp,	#14
      0003A3 77               [ 8] 1176 	ld	(hl), a
      0003A4 21 07 00         [12] 1177 	ld	hl, #0x0007
      0003A7 09               [ 8] 1178 	add	hl, bc
      0003A8 E5               [16] 1179 	push	hl
      0003A9 7D               [ 4] 1180 	ld	a, l
      0003AA F8 11            [12] 1181 	ldhl	sp,	#17
      0003AC 77               [ 8] 1182 	ld	(hl), a
      0003AD E1               [12] 1183 	pop	hl
      0003AE 7C               [ 4] 1184 	ld	a, h
      0003AF F8 10            [12] 1185 	ldhl	sp,	#16
      0003B1 77               [ 8] 1186 	ld	(hl), a
      0003B2 FAr15r03         [16] 1187 	ld	a, (#_tiles_bank_0)
      0003B5 F8 0E            [12] 1188 	ldhl	sp,	#14
      0003B7 96               [ 8] 1189 	sub	a, (hl)
      0003B8 20 1F            [12] 1190 	jr	NZ, 00116$
      0003BA F8 0F            [12] 1191 	ldhl	sp,#15
      0003BC 2A               [ 8] 1192 	ld	a, (hl+)
      0003BD 5F               [ 4] 1193 	ld	e, a
      0003BE 56               [ 8] 1194 	ld	d, (hl)
      0003BF 1A               [ 8] 1195 	ld	a, (de)
      0003C0 F8 0C            [12] 1196 	ldhl	sp,	#12
      0003C2 22               [ 8] 1197 	ld	(hl+), a
      0003C3 13               [ 8] 1198 	inc	de
      0003C4 1A               [ 8] 1199 	ld	a, (de)
      0003C5 77               [ 8] 1200 	ld	(hl), a
      0003C6 FAr16r03         [16] 1201 	ld	a, (#_tiles_0)
      0003C9 F8 0C            [12] 1202 	ldhl	sp,	#12
      0003CB 96               [ 8] 1203 	sub	a, (hl)
      0003CC 20 0B            [12] 1204 	jr	NZ, 00116$
      0003CE FAr17r03         [16] 1205 	ld	a, (#_tiles_0 + 1)
      0003D1 F8 0D            [12] 1206 	ldhl	sp,	#13
      0003D3 96               [ 8] 1207 	sub	a, (hl)
      0003D4 20 03            [12] 1208 	jr	NZ, 00116$
      0003D6 AF               [ 4] 1209 	xor	a, a
      0003D7 18 02            [12] 1210 	jr	00117$
      0003D9                       1211 00116$:
      0003D9 3E 01            [ 8] 1212 	ld	a, #0x01
      0003DB                       1213 00117$:
                           0003DB  1214 	C$Scroll.c$215$1_1$221	= .
                                   1215 	.globl	C$Scroll.c$215$1_1$221
                                   1216 ;C:/ZGB-2023.0/common/src/Scroll.c:215: UINT16 map_offset = 0;
      0003DB F8 02            [12] 1217 	ldhl	sp,	#2
      0003DD 36 00            [12] 1218 	ld	(hl), #0x00
      0003DF 23               [ 8] 1219 	inc	hl
      0003E0 36 00            [12] 1220 	ld	(hl), #0x00
                           0003E2  1221 	C$Scroll.c$216$1_1$221	= .
                                   1222 	.globl	C$Scroll.c$216$1_1$221
                                   1223 ;C:/ZGB-2023.0/common/src/Scroll.c:216: if(load_tiles)
      0003E2 B7               [ 4] 1224 	or	a, a
      0003E3 28 1B            [12] 1225 	jr	Z, 00102$
                           0003E5  1226 	C$Scroll.c$217$1_1$221	= .
                                   1227 	.globl	C$Scroll.c$217$1_1$221
                                   1228 ;C:/ZGB-2023.0/common/src/Scroll.c:217: map_offset = ScrollSetTiles(last_tile_loaded, map->tiles_bank, map->tiles);
      0003E5 F8 0F            [12] 1229 	ldhl	sp,#15
      0003E7 2A               [ 8] 1230 	ld	a, (hl+)
      0003E8 5F               [ 4] 1231 	ld	e, a
      0003E9 56               [ 8] 1232 	ld	d, (hl)
      0003EA 1A               [ 8] 1233 	ld	a, (de)
      0003EB 6F               [ 4] 1234 	ld	l, a
                                   1235 ;	spillPairReg hl
                                   1236 ;	spillPairReg hl
      0003EC 13               [ 8] 1237 	inc	de
      0003ED 1A               [ 8] 1238 	ld	a, (de)
      0003EE 67               [ 4] 1239 	ld	h, a
                                   1240 ;	spillPairReg hl
                                   1241 ;	spillPairReg hl
      0003EF C5               [16] 1242 	push	bc
      0003F0 E5               [16] 1243 	push	hl
      0003F1 F8 12            [12] 1244 	ldhl	sp,	#18
      0003F3 5E               [ 8] 1245 	ld	e, (hl)
      0003F4 FAr18r00         [16] 1246 	ld	a, (#_last_tile_loaded)
      0003F7 CDr9Dr01         [24] 1247 	call	_ScrollSetTiles
      0003FA F8 04            [12] 1248 	ldhl	sp,	#4
      0003FC 79               [ 4] 1249 	ld	a, c
      0003FD 22               [ 8] 1250 	ld	(hl+), a
      0003FE 70               [ 8] 1251 	ld	(hl), b
      0003FF C1               [12] 1252 	pop	bc
      000400                       1253 00102$:
                           000400  1254 	C$Scroll.c$220$1_2$222	= .
                                   1255 	.globl	C$Scroll.c$220$1_2$222
                                   1256 ;C:/ZGB-2023.0/common/src/Scroll.c:220: UINT8* data = map->data;
      000400 59               [ 4] 1257 	ld	e, c
      000401 50               [ 4] 1258 	ld	d, b
      000402 1A               [ 8] 1259 	ld	a, (de)
      000403 F8 00            [12] 1260 	ldhl	sp,	#0
      000405 22               [ 8] 1261 	ld	(hl+), a
      000406 13               [ 8] 1262 	inc	de
      000407 1A               [ 8] 1263 	ld	a, (de)
      000408 77               [ 8] 1264 	ld	(hl), a
                           000409  1265 	C$Scroll.c$221$1_2$222	= .
                                   1266 	.globl	C$Scroll.c$221$1_2$222
                                   1267 ;C:/ZGB-2023.0/common/src/Scroll.c:221: UINT8* attrs = map->attributes;
      000409 21 04 00         [12] 1268 	ld	hl, #0x0004
      00040C 09               [ 8] 1269 	add	hl, bc
      00040D 5D               [ 4] 1270 	ld	e, l
      00040E 54               [ 4] 1271 	ld	d, h
      00040F 1A               [ 8] 1272 	ld	a, (de)
      000410 F8 0C            [12] 1273 	ldhl	sp,	#12
      000412 22               [ 8] 1274 	ld	(hl+), a
      000413 13               [ 8] 1275 	inc	de
      000414 1A               [ 8] 1276 	ld	a, (de)
      000415 77               [ 8] 1277 	ld	(hl), a
                           000416  1278 	C$Scroll.c$222$4_2$225	= .
                                   1279 	.globl	C$Scroll.c$222$4_2$225
                                   1280 ;C:/ZGB-2023.0/common/src/Scroll.c:222: for(UINT8 j = 0; j < map->height; ++j) {
      000416 21 02 00         [12] 1281 	ld	hl, #0x0002
      000419 09               [ 8] 1282 	add	hl, bc
      00041A E5               [16] 1283 	push	hl
      00041B 7D               [ 4] 1284 	ld	a, l
      00041C F8 06            [12] 1285 	ldhl	sp,	#6
      00041E 77               [ 8] 1286 	ld	(hl), a
      00041F E1               [12] 1287 	pop	hl
      000420 7C               [ 4] 1288 	ld	a, h
      000421 F8 05            [12] 1289 	ldhl	sp,	#5
      000423 22               [ 8] 1290 	ld	(hl+), a
      000424 03               [ 8] 1291 	inc	bc
      000425 03               [ 8] 1292 	inc	bc
      000426 03               [ 8] 1293 	inc	bc
      000427 79               [ 4] 1294 	ld	a, c
      000428 22               [ 8] 1295 	ld	(hl+), a
      000429 70               [ 8] 1296 	ld	(hl), b
      00042A F8 0B            [12] 1297 	ldhl	sp,	#11
      00042C 36 00            [12] 1298 	ld	(hl), #0x00
      00042E                       1299 00111$:
      00042E F8 06            [12] 1300 	ldhl	sp,#6
      000430 2A               [ 8] 1301 	ld	a, (hl+)
      000431 5F               [ 4] 1302 	ld	e, a
      000432 56               [ 8] 1303 	ld	d, (hl)
      000433 1A               [ 8] 1304 	ld	a, (de)
      000434 4F               [ 4] 1305 	ld	c, a
      000435 F8 0B            [12] 1306 	ldhl	sp,	#11
      000437 7E               [ 8] 1307 	ld	a, (hl)
      000438 91               [ 4] 1308 	sub	a, c
      000439 30 74            [12] 1309 	jr	NC, 00106$
                           00043B  1310 	C$Scroll.c$223$5_2$226	= .
                                   1311 	.globl	C$Scroll.c$223$5_2$226
                                   1312 ;C:/ZGB-2023.0/common/src/Scroll.c:223: for(UINT8 i = 0; i < map->width; ++i) {
      00043B F8 13            [12] 1313 	ldhl	sp,	#19
      00043D 7E               [ 8] 1314 	ld	a, (hl)
      00043E F8 0B            [12] 1315 	ldhl	sp,	#11
      000440 86               [ 8] 1316 	add	a, (hl)
      000441 F8 08            [12] 1317 	ldhl	sp,	#8
      000443 77               [ 8] 1318 	ld	(hl), a
      000444 F8 00            [12] 1319 	ldhl	sp,	#0
      000446 7E               [ 8] 1320 	ld	a, (hl)
      000447 F8 0E            [12] 1321 	ldhl	sp,	#14
      000449 77               [ 8] 1322 	ld	(hl), a
      00044A F8 01            [12] 1323 	ldhl	sp,	#1
      00044C 7E               [ 8] 1324 	ld	a, (hl)
      00044D F8 0F            [12] 1325 	ldhl	sp,	#15
      00044F 22               [ 8] 1326 	ld	(hl+), a
      000450 36 00            [12] 1327 	ld	(hl), #0x00
      000452                       1328 00108$:
      000452 F8 04            [12] 1329 	ldhl	sp,#4
      000454 2A               [ 8] 1330 	ld	a, (hl+)
      000455 5F               [ 4] 1331 	ld	e, a
      000456 56               [ 8] 1332 	ld	d, (hl)
      000457 1A               [ 8] 1333 	ld	a, (de)
      000458 4F               [ 4] 1334 	ld	c, a
      000459 F8 10            [12] 1335 	ldhl	sp,	#16
      00045B 7E               [ 8] 1336 	ld	a, (hl)
      00045C 91               [ 4] 1337 	sub	a, c
      00045D 30 3E            [12] 1338 	jr	NC, 00126$
                           00045F  1339 	C$Scroll.c$224$5_2$226	= .
                                   1340 	.globl	C$Scroll.c$224$5_2$226
                                   1341 ;C:/ZGB-2023.0/common/src/Scroll.c:224: UpdateMapTile(bg_or_win, x + i, y + j, map_offset, *data, attrs);
      00045F 2B               [ 8] 1342 	dec	hl
      000460 2B               [ 8] 1343 	dec	hl
      000461 2A               [ 8] 1344 	ld	a, (hl+)
      000462 5F               [ 4] 1345 	ld	e, a
      000463 56               [ 8] 1346 	ld	d, (hl)
      000464 1A               [ 8] 1347 	ld	a, (de)
      000465 47               [ 4] 1348 	ld	b, a
      000466 F8 09            [12] 1349 	ldhl	sp,	#9
      000468 7E               [ 8] 1350 	ld	a, (hl)
      000469 F8 10            [12] 1351 	ldhl	sp,	#16
      00046B 86               [ 8] 1352 	add	a, (hl)
      00046C 4F               [ 4] 1353 	ld	c, a
      00046D F8 0C            [12] 1354 	ldhl	sp,	#12
      00046F 2A               [ 8] 1355 	ld	a, (hl+)
      000470 5F               [ 4] 1356 	ld	e, a
      000471 56               [ 8] 1357 	ld	d, (hl)
      000472 D5               [16] 1358 	push	de
      000473 C5               [16] 1359 	push	bc
      000474 33               [ 8] 1360 	inc	sp
      000475 F8 05            [12] 1361 	ldhl	sp,	#5
      000477 2A               [ 8] 1362 	ld	a, (hl+)
      000478 5F               [ 4] 1363 	ld	e, a
      000479 56               [ 8] 1364 	ld	d, (hl)
      00047A D5               [16] 1365 	push	de
      00047B F8 0D            [12] 1366 	ldhl	sp,	#13
      00047D 2A               [ 8] 1367 	ld	a, (hl+)
      00047E 23               [ 8] 1368 	inc	hl
      00047F F5               [16] 1369 	push	af
      000480 33               [ 8] 1370 	inc	sp
      000481 59               [ 4] 1371 	ld	e, c
      000482 7E               [ 8] 1372 	ld	a, (hl)
      000483 CDr06r03         [24] 1373 	call	_UpdateMapTile
                           000486  1374 	C$Scroll.c$226$5_2$226	= .
                                   1375 	.globl	C$Scroll.c$226$5_2$226
                                   1376 ;C:/ZGB-2023.0/common/src/Scroll.c:226: ++ data;
      000486 F8 0E            [12] 1377 	ldhl	sp,	#14
      000488 34               [12] 1378 	inc	(hl)
      000489 20 02            [12] 1379 	jr	NZ, 00180$
      00048B 23               [ 8] 1380 	inc	hl
      00048C 34               [12] 1381 	inc	(hl)
      00048D                       1382 00180$:
                           00048D  1383 	C$Scroll.c$227$5_2$226	= .
                                   1384 	.globl	C$Scroll.c$227$5_2$226
                                   1385 ;C:/ZGB-2023.0/common/src/Scroll.c:227: if(attrs)
      00048D F8 0D            [12] 1386 	ldhl	sp,	#13
      00048F 3A               [ 8] 1387 	ld	a, (hl-)
      000490 B6               [ 8] 1388 	or	a, (hl)
      000491 28 05            [12] 1389 	jr	Z, 00109$
                           000493  1390 	C$Scroll.c$228$5_2$226	= .
                                   1391 	.globl	C$Scroll.c$228$5_2$226
                                   1392 ;C:/ZGB-2023.0/common/src/Scroll.c:228: ++ attrs;
      000493 34               [12] 1393 	inc	(hl)
      000494 20 02            [12] 1394 	jr	NZ, 00181$
      000496 23               [ 8] 1395 	inc	hl
      000497 34               [12] 1396 	inc	(hl)
      000498                       1397 00181$:
      000498                       1398 00109$:
                           000498  1399 	C$Scroll.c$223$4_2$225	= .
                                   1400 	.globl	C$Scroll.c$223$4_2$225
                                   1401 ;C:/ZGB-2023.0/common/src/Scroll.c:223: for(UINT8 i = 0; i < map->width; ++i) {
      000498 F8 10            [12] 1402 	ldhl	sp,	#16
      00049A 34               [12] 1403 	inc	(hl)
      00049B 18 B5            [12] 1404 	jr	00108$
      00049D                       1405 00126$:
      00049D F8 0E            [12] 1406 	ldhl	sp,	#14
      00049F 7E               [ 8] 1407 	ld	a, (hl)
      0004A0 F8 00            [12] 1408 	ldhl	sp,	#0
      0004A2 77               [ 8] 1409 	ld	(hl), a
      0004A3 F8 0F            [12] 1410 	ldhl	sp,	#15
      0004A5 7E               [ 8] 1411 	ld	a, (hl)
      0004A6 F8 01            [12] 1412 	ldhl	sp,	#1
      0004A8 77               [ 8] 1413 	ld	(hl), a
                           0004A9  1414 	C$Scroll.c$222$2_2$223	= .
                                   1415 	.globl	C$Scroll.c$222$2_2$223
                                   1416 ;C:/ZGB-2023.0/common/src/Scroll.c:222: for(UINT8 j = 0; j < map->height; ++j) {
      0004A9 F8 0B            [12] 1417 	ldhl	sp,	#11
      0004AB 34               [12] 1418 	inc	(hl)
      0004AC C3r2Er04         [16] 1419 	jp	00111$
      0004AF                       1420 00106$:
                           0004AF  1421 	C$Scroll.c$232$1_2$222	= .
                                   1422 	.globl	C$Scroll.c$232$1_2$222
                                   1423 ;C:/ZGB-2023.0/common/src/Scroll.c:232: POP_BANK;
      0004AF CDr00r00         [24] 1424 	call	_PopBank
                           0004B2  1425 	C$Scroll.c$235$1_2$222	= .
                                   1426 	.globl	C$Scroll.c$235$1_2$222
                                   1427 ;C:/ZGB-2023.0/common/src/Scroll.c:235: return map_offset;
      0004B2 F8 02            [12] 1428 	ldhl	sp,	#2
      0004B4 4E               [ 8] 1429 	ld	c, (hl)
      0004B5 23               [ 8] 1430 	inc	hl
      0004B6 46               [ 8] 1431 	ld	b, (hl)
                           0004B7  1432 	C$Scroll.c$236$1_2$220	= .
                                   1433 	.globl	C$Scroll.c$236$1_2$220
                                   1434 ;C:/ZGB-2023.0/common/src/Scroll.c:236: }
      0004B7 E8 11            [16] 1435 	add	sp, #17
      0004B9 E1               [12] 1436 	pop	hl
      0004BA E8 04            [16] 1437 	add	sp, #4
      0004BC E9               [ 4] 1438 	jp	(hl)
                           0004BD  1439 	G$ClampScrollLimits$0$0	= .
                                   1440 	.globl	G$ClampScrollLimits$0$0
                           0004BD  1441 	C$Scroll.c$240$1_2$227	= .
                                   1442 	.globl	C$Scroll.c$240$1_2$227
                                   1443 ;C:/ZGB-2023.0/common/src/Scroll.c:240: void ClampScrollLimits() {
                                   1444 ;	---------------------------------
                                   1445 ; Function ClampScrollLimits
                                   1446 ; ---------------------------------
      0004BD                       1447 _ClampScrollLimits::
                           0004BD  1448 	C$Scroll.c$241$1_0$227	= .
                                   1449 	.globl	C$Scroll.c$241$1_0$227
                                   1450 ;C:/ZGB-2023.0/common/src/Scroll.c:241: if(clamp_enabled) {
      0004BD FAr1Br00         [16] 1451 	ld	a, (#_clamp_enabled)
      0004C0 B7               [ 4] 1452 	or	a, a
      0004C1 C8               [20] 1453 	ret	Z
                           0004C2  1454 	C$Scroll.c$242$2_0$228	= .
                                   1455 	.globl	C$Scroll.c$242$2_0$228
                                   1456 ;C:/ZGB-2023.0/common/src/Scroll.c:242: if(U_LESS_THAN(scroll_x, 0u)) {
      0004C2 21r06r00         [12] 1457 	ld	hl, #_scroll_x
      0004C5 2A               [ 8] 1458 	ld	a, (hl+)
      0004C6 66               [ 8] 1459 	ld	h, (hl)
                                   1460 ;	spillPairReg hl
                                   1461 ;	spillPairReg hl
      0004C7 29               [ 8] 1462 	add	hl, hl
      0004C8 30 06            [12] 1463 	jr	NC, 00102$
                           0004CA  1464 	C$Scroll.c$243$3_0$229	= .
                                   1465 	.globl	C$Scroll.c$243$3_0$229
                                   1466 ;C:/ZGB-2023.0/common/src/Scroll.c:243: scroll_x = 0u;		
      0004CA AF               [ 4] 1467 	xor	a, a
      0004CB 21r06r00         [12] 1468 	ld	hl, #_scroll_x
      0004CE 22               [ 8] 1469 	ld	(hl+), a
      0004CF 77               [ 8] 1470 	ld	(hl), a
      0004D0                       1471 00102$:
                           0004D0  1472 	C$Scroll.c$245$2_0$228	= .
                                   1473 	.globl	C$Scroll.c$245$2_0$228
                                   1474 ;C:/ZGB-2023.0/common/src/Scroll.c:245: if(scroll_x > (scroll_w - SCREENWIDTH)) {
      0004D0 21r00r00         [12] 1475 	ld	hl, #_scroll_w
      0004D3 2A               [ 8] 1476 	ld	a, (hl+)
      0004D4 C6 60            [ 8] 1477 	add	a, #0x60
      0004D6 4F               [ 4] 1478 	ld	c, a
      0004D7 7E               [ 8] 1479 	ld	a, (hl)
      0004D8 CE FF            [ 8] 1480 	adc	a, #0xff
      0004DA 47               [ 4] 1481 	ld	b, a
      0004DB 21r06r00         [12] 1482 	ld	hl, #_scroll_x
      0004DE 2A               [ 8] 1483 	ld	a, (hl+)
      0004DF 5F               [ 4] 1484 	ld	e, a
      0004E0 56               [ 8] 1485 	ld	d, (hl)
      0004E1 79               [ 4] 1486 	ld	a, c
      0004E2 93               [ 4] 1487 	sub	a, e
      0004E3 78               [ 4] 1488 	ld	a, b
      0004E4 9A               [ 4] 1489 	sbc	a, d
      0004E5 30 04            [12] 1490 	jr	NC, 00104$
                           0004E7  1491 	C$Scroll.c$246$3_0$230	= .
                                   1492 	.globl	C$Scroll.c$246$3_0$230
                                   1493 ;C:/ZGB-2023.0/common/src/Scroll.c:246: scroll_x = (scroll_w - SCREENWIDTH);
      0004E7 2B               [ 8] 1494 	dec	hl
      0004E8 79               [ 4] 1495 	ld	a, c
      0004E9 22               [ 8] 1496 	ld	(hl+), a
      0004EA 70               [ 8] 1497 	ld	(hl), b
      0004EB                       1498 00104$:
                           0004EB  1499 	C$Scroll.c$248$2_0$228	= .
                                   1500 	.globl	C$Scroll.c$248$2_0$228
                                   1501 ;C:/ZGB-2023.0/common/src/Scroll.c:248: if(U_LESS_THAN(scroll_y, 0u)) {
      0004EB 21r08r00         [12] 1502 	ld	hl, #_scroll_y
      0004EE 2A               [ 8] 1503 	ld	a, (hl+)
      0004EF 66               [ 8] 1504 	ld	h, (hl)
                                   1505 ;	spillPairReg hl
                                   1506 ;	spillPairReg hl
      0004F0 29               [ 8] 1507 	add	hl, hl
      0004F1 30 06            [12] 1508 	jr	NC, 00106$
                           0004F3  1509 	C$Scroll.c$249$3_0$231	= .
                                   1510 	.globl	C$Scroll.c$249$3_0$231
                                   1511 ;C:/ZGB-2023.0/common/src/Scroll.c:249: scroll_y = 0u;		
      0004F3 AF               [ 4] 1512 	xor	a, a
      0004F4 21r08r00         [12] 1513 	ld	hl, #_scroll_y
      0004F7 22               [ 8] 1514 	ld	(hl+), a
      0004F8 77               [ 8] 1515 	ld	(hl), a
      0004F9                       1516 00106$:
                           0004F9  1517 	C$Scroll.c$251$2_0$228	= .
                                   1518 	.globl	C$Scroll.c$251$2_0$228
                                   1519 ;C:/ZGB-2023.0/common/src/Scroll.c:251: if(scroll_y > (scroll_h - SCREENHEIGHT + scroll_h_border)) {
      0004F9 21r02r00         [12] 1520 	ld	hl, #_scroll_h
      0004FC 2A               [ 8] 1521 	ld	a, (hl+)
      0004FD C6 70            [ 8] 1522 	add	a, #0x70
      0004FF 4F               [ 4] 1523 	ld	c, a
      000500 7E               [ 8] 1524 	ld	a, (hl)
      000501 CE FF            [ 8] 1525 	adc	a, #0xff
      000503 47               [ 4] 1526 	ld	b, a
      000504 FAr1Ar00         [16] 1527 	ld	a, (#_scroll_h_border)
      000507 5F               [ 4] 1528 	ld	e, a
      000508 07               [ 4] 1529 	rlca
      000509 9F               [ 4] 1530 	sbc	a, a
      00050A 6B               [ 4] 1531 	ld	l, e
                                   1532 ;	spillPairReg hl
                                   1533 ;	spillPairReg hl
      00050B 67               [ 4] 1534 	ld	h, a
                                   1535 ;	spillPairReg hl
                                   1536 ;	spillPairReg hl
      00050C 09               [ 8] 1537 	add	hl, bc
      00050D 4D               [ 4] 1538 	ld	c, l
      00050E 44               [ 4] 1539 	ld	b, h
      00050F 21r08r00         [12] 1540 	ld	hl, #_scroll_y
      000512 2A               [ 8] 1541 	ld	a, (hl+)
      000513 5F               [ 4] 1542 	ld	e, a
      000514 56               [ 8] 1543 	ld	d, (hl)
      000515 79               [ 4] 1544 	ld	a, c
      000516 93               [ 4] 1545 	sub	a, e
      000517 78               [ 4] 1546 	ld	a, b
      000518 9A               [ 4] 1547 	sbc	a, d
      000519 D0               [20] 1548 	ret	NC
                           00051A  1549 	C$Scroll.c$252$3_0$232	= .
                                   1550 	.globl	C$Scroll.c$252$3_0$232
                                   1551 ;C:/ZGB-2023.0/common/src/Scroll.c:252: scroll_y = (scroll_h - SCREENHEIGHT + scroll_h_border);
      00051A 2B               [ 8] 1552 	dec	hl
      00051B 79               [ 4] 1553 	ld	a, c
      00051C 22               [ 8] 1554 	ld	(hl+), a
      00051D 70               [ 8] 1555 	ld	(hl), b
                           00051E  1556 	C$Scroll.c$255$1_0$227	= .
                                   1557 	.globl	C$Scroll.c$255$1_0$227
                                   1558 ;C:/ZGB-2023.0/common/src/Scroll.c:255: }
                           00051E  1559 	C$Scroll.c$255$1_0$227	= .
                                   1560 	.globl	C$Scroll.c$255$1_0$227
                           00051E  1561 	XG$ClampScrollLimits$0$0	= .
                                   1562 	.globl	XG$ClampScrollLimits$0$0
      00051E C9               [16] 1563 	ret
                           00051F  1564 	G$ScrollSetMap$0$0	= .
                                   1565 	.globl	G$ScrollSetMap$0$0
                           00051F  1566 	C$Scroll.c$257$1_0$234	= .
                                   1567 	.globl	C$Scroll.c$257$1_0$234
                                   1568 ;C:/ZGB-2023.0/common/src/Scroll.c:257: void ScrollSetMap(UINT8 map_bank, const struct MapInfo* map) {
                                   1569 ;	---------------------------------
                                   1570 ; Function ScrollSetMap
                                   1571 ; ---------------------------------
      00051F                       1572 _ScrollSetMap::
      00051F E8 FD            [16] 1573 	add	sp, #-3
      000521 F8 02            [12] 1574 	ldhl	sp,	#2
      000523 77               [ 8] 1575 	ld	(hl), a
                           000524  1576 	C$Scroll.c$258$1_0$234	= .
                                   1577 	.globl	C$Scroll.c$258$1_0$234
                                   1578 ;C:/ZGB-2023.0/common/src/Scroll.c:258: PUSH_BANK(map_bank);
      000524 D5               [16] 1579 	push	de
      000525 7E               [ 8] 1580 	ld	a, (hl)
      000526 F5               [16] 1581 	push	af
      000527 33               [ 8] 1582 	inc	sp
      000528 CDr00r00         [24] 1583 	call	_PushBank
      00052B 33               [ 8] 1584 	inc	sp
      00052C C1               [12] 1585 	pop	bc
                           00052D  1586 	C$Scroll.c$259$1_0$234	= .
                                   1587 	.globl	C$Scroll.c$259$1_0$234
                                   1588 ;C:/ZGB-2023.0/common/src/Scroll.c:259: scroll_tiles_w = map->width;
      00052D 59               [ 4] 1589 	ld	e, c
      00052E 50               [ 4] 1590 	ld	d, b
      00052F 13               [ 8] 1591 	inc	de
      000530 13               [ 8] 1592 	inc	de
      000531 1A               [ 8] 1593 	ld	a, (de)
      000532 21r04r00         [12] 1594 	ld	hl, #_scroll_tiles_w
      000535 22               [ 8] 1595 	ld	(hl+), a
      000536 36 00            [12] 1596 	ld	(hl), #0x00
                           000538  1597 	C$Scroll.c$260$1_0$234	= .
                                   1598 	.globl	C$Scroll.c$260$1_0$234
                                   1599 ;C:/ZGB-2023.0/common/src/Scroll.c:260: scroll_tiles_h = map->height;
      000538 59               [ 4] 1600 	ld	e, c
      000539 50               [ 4] 1601 	ld	d, b
      00053A 13               [ 8] 1602 	inc	de
      00053B 13               [ 8] 1603 	inc	de
      00053C 13               [ 8] 1604 	inc	de
      00053D 1A               [ 8] 1605 	ld	a, (de)
      00053E 21r06r00         [12] 1606 	ld	hl, #_scroll_tiles_h
      000541 22               [ 8] 1607 	ld	(hl+), a
      000542 36 00            [12] 1608 	ld	(hl), #0x00
                           000544  1609 	C$Scroll.c$261$1_0$234	= .
                                   1610 	.globl	C$Scroll.c$261$1_0$234
                                   1611 ;C:/ZGB-2023.0/common/src/Scroll.c:261: scroll_map = map->data;
      000544 59               [ 4] 1612 	ld	e, c
      000545 50               [ 4] 1613 	ld	d, b
      000546 1A               [ 8] 1614 	ld	a, (de)
      000547 21r02r00         [12] 1615 	ld	hl, #_scroll_map
      00054A 22               [ 8] 1616 	ld	(hl+), a
      00054B 13               [ 8] 1617 	inc	de
      00054C 1A               [ 8] 1618 	ld	a, (de)
      00054D 77               [ 8] 1619 	ld	(hl), a
                           00054E  1620 	C$Scroll.c$262$1_0$234	= .
                                   1621 	.globl	C$Scroll.c$262$1_0$234
                                   1622 ;C:/ZGB-2023.0/common/src/Scroll.c:262: scroll_cmap = map->attributes;
      00054E 03               [ 8] 1623 	inc	bc
      00054F 03               [ 8] 1624 	inc	bc
      000550 03               [ 8] 1625 	inc	bc
      000551 03               [ 8] 1626 	inc	bc
      000552 59               [ 4] 1627 	ld	e, c
      000553 50               [ 4] 1628 	ld	d, b
      000554 1A               [ 8] 1629 	ld	a, (de)
      000555 21r04r00         [12] 1630 	ld	hl, #_scroll_cmap
      000558 22               [ 8] 1631 	ld	(hl+), a
      000559 13               [ 8] 1632 	inc	de
      00055A 1A               [ 8] 1633 	ld	a, (de)
      00055B 77               [ 8] 1634 	ld	(hl), a
                           00055C  1635 	C$Scroll.c$263$1_0$234	= .
                                   1636 	.globl	C$Scroll.c$263$1_0$234
                                   1637 ;C:/ZGB-2023.0/common/src/Scroll.c:263: scroll_x = 0;
      00055C AF               [ 4] 1638 	xor	a, a
      00055D 21r06r00         [12] 1639 	ld	hl, #_scroll_x
      000560 22               [ 8] 1640 	ld	(hl+), a
      000561 77               [ 8] 1641 	ld	(hl), a
                           000562  1642 	C$Scroll.c$264$1_0$234	= .
                                   1643 	.globl	C$Scroll.c$264$1_0$234
                                   1644 ;C:/ZGB-2023.0/common/src/Scroll.c:264: scroll_y = 0;
      000562 AF               [ 4] 1645 	xor	a, a
      000563 21r08r00         [12] 1646 	ld	hl, #_scroll_y
      000566 22               [ 8] 1647 	ld	(hl+), a
      000567 77               [ 8] 1648 	ld	(hl), a
                           000568  1649 	C$Scroll.c$265$1_0$234	= .
                                   1650 	.globl	C$Scroll.c$265$1_0$234
                                   1651 ;C:/ZGB-2023.0/common/src/Scroll.c:265: scroll_w = scroll_tiles_w << 3;
      000568 FAr04r00         [16] 1652 	ld	a, (#_scroll_tiles_w)
      00056B EAr00r00         [16] 1653 	ld	(#_scroll_w),a
      00056E FAr05r00         [16] 1654 	ld	a, (#_scroll_tiles_w + 1)
      000571 EAr01r00         [16] 1655 	ld	(#_scroll_w + 1),a
      000574 3E 03            [ 8] 1656 	ld	a, #0x03
      000576                       1657 00112$:
      000576 21r00r00         [12] 1658 	ld	hl, #_scroll_w
      000579 CB 26            [16] 1659 	sla	(hl)
      00057B 23               [ 8] 1660 	inc	hl
      00057C CB 16            [16] 1661 	rl	(hl)
      00057E 3D               [ 4] 1662 	dec	a
      00057F 20 F5            [12] 1663 	jr	NZ, 00112$
                           000581  1664 	C$Scroll.c$266$1_0$234	= .
                                   1665 	.globl	C$Scroll.c$266$1_0$234
                                   1666 ;C:/ZGB-2023.0/common/src/Scroll.c:266: scroll_h = scroll_tiles_h << 3;
      000581 FAr06r00         [16] 1667 	ld	a, (#_scroll_tiles_h)
      000584 EAr02r00         [16] 1668 	ld	(#_scroll_h),a
      000587 FAr07r00         [16] 1669 	ld	a, (#_scroll_tiles_h + 1)
      00058A EAr03r00         [16] 1670 	ld	(#_scroll_h + 1),a
      00058D 3E 03            [ 8] 1671 	ld	a, #0x03
      00058F                       1672 00113$:
      00058F 21r02r00         [12] 1673 	ld	hl, #_scroll_h
      000592 CB 26            [16] 1674 	sla	(hl)
      000594 23               [ 8] 1675 	inc	hl
      000595 CB 16            [16] 1676 	rl	(hl)
      000597 3D               [ 4] 1677 	dec	a
      000598 20 F5            [12] 1678 	jr	NZ, 00113$
                           00059A  1679 	C$Scroll.c$267$1_0$234	= .
                                   1680 	.globl	C$Scroll.c$267$1_0$234
                                   1681 ;C:/ZGB-2023.0/common/src/Scroll.c:267: scroll_bank = map_bank;
      00059A F8 02            [12] 1682 	ldhl	sp,	#2
      00059C 7E               [ 8] 1683 	ld	a, (hl)
      00059D EAr08r03         [16] 1684 	ld	(#_scroll_bank),a
                           0005A0  1685 	C$Scroll.c$268$1_0$234	= .
                                   1686 	.globl	C$Scroll.c$268$1_0$234
                                   1687 ;C:/ZGB-2023.0/common/src/Scroll.c:268: if(scroll_target) {
      0005A0 21r0Dr00         [12] 1688 	ld	hl, #_scroll_target + 1
      0005A3 3A               [ 8] 1689 	ld	a, (hl-)
      0005A4 B6               [ 8] 1690 	or	a, (hl)
      0005A5 28 38            [12] 1691 	jr	Z, 00102$
                           0005A7  1692 	C$Scroll.c$269$1_0$234	= .
                                   1693 	.globl	C$Scroll.c$269$1_0$234
                                   1694 ;C:/ZGB-2023.0/common/src/Scroll.c:269: scroll_x = scroll_target->x - (SCREENWIDTH >> 1);
      0005A7 2A               [ 8] 1695 	ld	a, (hl+)
      0005A8 4F               [ 4] 1696 	ld	c, a
      0005A9 46               [ 8] 1697 	ld	b, (hl)
      0005AA 21 0C 00         [12] 1698 	ld	hl, #0x000c
      0005AD 09               [ 8] 1699 	add	hl, bc
      0005AE 5D               [ 4] 1700 	ld	e, l
      0005AF 54               [ 4] 1701 	ld	d, h
      0005B0 1A               [ 8] 1702 	ld	a, (de)
      0005B1 F8 00            [12] 1703 	ldhl	sp,	#0
      0005B3 22               [ 8] 1704 	ld	(hl+), a
      0005B4 13               [ 8] 1705 	inc	de
      0005B5 1A               [ 8] 1706 	ld	a, (de)
      0005B6 77               [ 8] 1707 	ld	(hl), a
      0005B7 D1               [12] 1708 	pop	de
      0005B8 D5               [16] 1709 	push	de
      0005B9 21 50 00         [12] 1710 	ld	hl, #0x0050
      0005BC 7B               [ 4] 1711 	ld	a, e
      0005BD 95               [ 4] 1712 	sub	a, l
      0005BE 5F               [ 4] 1713 	ld	e, a
      0005BF 7A               [ 4] 1714 	ld	a, d
      0005C0 9C               [ 4] 1715 	sbc	a, h
      0005C1 21r07r00         [12] 1716 	ld	hl, #_scroll_x + 1
      0005C4 32               [ 8] 1717 	ld	(hl-), a
      0005C5 73               [ 8] 1718 	ld	(hl), e
                           0005C6  1719 	C$Scroll.c$270$2_0$235	= .
                                   1720 	.globl	C$Scroll.c$270$2_0$235
                                   1721 ;C:/ZGB-2023.0/common/src/Scroll.c:270: scroll_y = scroll_target->y - scroll_bottom_movement_limit; //Move the camera to its bottom limit
      0005C6 21 0E 00         [12] 1722 	ld	hl, #0x000e
      0005C9 09               [ 8] 1723 	add	hl, bc
      0005CA 2A               [ 8] 1724 	ld	a, (hl+)
      0005CB 4F               [ 4] 1725 	ld	c, a
      0005CC 46               [ 8] 1726 	ld	b, (hl)
      0005CD 21r01r00         [12] 1727 	ld	hl, #_scroll_bottom_movement_limit
      0005D0 5E               [ 8] 1728 	ld	e, (hl)
      0005D1 16 00            [ 8] 1729 	ld	d, #0x00
      0005D3 79               [ 4] 1730 	ld	a, c
      0005D4 93               [ 4] 1731 	sub	a, e
      0005D5 21r08r00         [12] 1732 	ld	hl, #_scroll_y
      0005D8 22               [ 8] 1733 	ld	(hl+), a
      0005D9 78               [ 4] 1734 	ld	a, b
      0005DA 9A               [ 4] 1735 	sbc	a, d
      0005DB 77               [ 8] 1736 	ld	(hl), a
                           0005DC  1737 	C$Scroll.c$271$2_0$235	= .
                                   1738 	.globl	C$Scroll.c$271$2_0$235
                                   1739 ;C:/ZGB-2023.0/common/src/Scroll.c:271: ClampScrollLimits();
      0005DC CDrBDr04         [24] 1740 	call	_ClampScrollLimits
      0005DF                       1741 00102$:
                           0005DF  1742 	C$Scroll.c$273$1_0$234	= .
                                   1743 	.globl	C$Scroll.c$273$1_0$234
                                   1744 ;C:/ZGB-2023.0/common/src/Scroll.c:273: pending_h_i = 0;
      0005DF 21r0Dr03         [12] 1745 	ld	hl, #_pending_h_i
      0005E2 36 00            [12] 1746 	ld	(hl), #0x00
                           0005E4  1747 	C$Scroll.c$274$1_0$234	= .
                                   1748 	.globl	C$Scroll.c$274$1_0$234
                                   1749 ;C:/ZGB-2023.0/common/src/Scroll.c:274: pending_w_i = 0;
      0005E4 21r12r03         [12] 1750 	ld	hl, #_pending_w_i
      0005E7 36 00            [12] 1751 	ld	(hl), #0x00
                           0005E9  1752 	C$Scroll.c$275$1_0$234	= .
                                   1753 	.globl	C$Scroll.c$275$1_0$234
                                   1754 ;C:/ZGB-2023.0/common/src/Scroll.c:275: POP_BANK;
      0005E9 CDr00r00         [24] 1755 	call	_PopBank
                           0005EC  1756 	C$Scroll.c$276$1_0$234	= .
                                   1757 	.globl	C$Scroll.c$276$1_0$234
                                   1758 ;C:/ZGB-2023.0/common/src/Scroll.c:276: }
      0005EC E8 03            [16] 1759 	add	sp, #3
                           0005EE  1760 	C$Scroll.c$276$1_0$234	= .
                                   1761 	.globl	C$Scroll.c$276$1_0$234
                           0005EE  1762 	XG$ScrollSetMap$0$0	= .
                                   1763 	.globl	XG$ScrollSetMap$0$0
      0005EE C9               [16] 1764 	ret
                           0005EF  1765 	G$InitScroll$0$0	= .
                                   1766 	.globl	G$InitScroll$0$0
                           0005EF  1767 	C$Scroll.c$278$1_0$237	= .
                                   1768 	.globl	C$Scroll.c$278$1_0$237
                                   1769 ;C:/ZGB-2023.0/common/src/Scroll.c:278: void InitScroll(UINT8 map_bank, const struct MapInfo* map, const UINT8* coll_list, const UINT8* coll_list_down) {
                                   1770 ;	---------------------------------
                                   1771 ; Function InitScroll
                                   1772 ; ---------------------------------
      0005EF                       1773 _InitScroll::
      0005EF E8 FC            [16] 1774 	add	sp, #-4
      0005F1 F8 03            [12] 1775 	ldhl	sp,	#3
      0005F3 77               [ 8] 1776 	ld	(hl), a
                           0005F4  1777 	C$Scroll.c$283$1_0$237	= .
                                   1778 	.globl	C$Scroll.c$283$1_0$237
                                   1779 ;C:/ZGB-2023.0/common/src/Scroll.c:283: PUSH_BANK(map_bank)
      0005F4 D5               [16] 1780 	push	de
      0005F5 7E               [ 8] 1781 	ld	a, (hl)
      0005F6 F5               [16] 1782 	push	af
      0005F7 33               [ 8] 1783 	inc	sp
      0005F8 CDr00r00         [24] 1784 	call	_PushBank
      0005FB 33               [ 8] 1785 	inc	sp
      0005FC C1               [12] 1786 	pop	bc
                           0005FD  1787 	C$Scroll.c$284$1_0$237	= .
                                   1788 	.globl	C$Scroll.c$284$1_0$237
                                   1789 ;C:/ZGB-2023.0/common/src/Scroll.c:284: tiles_bank = map->tiles_bank;
      0005FD 21 06 00         [12] 1790 	ld	hl, #0x0006
      000600 09               [ 8] 1791 	add	hl, bc
      000601 7E               [ 8] 1792 	ld	a, (hl)
      000602 F8 00            [12] 1793 	ldhl	sp,	#0
      000604 77               [ 8] 1794 	ld	(hl), a
                           000605  1795 	C$Scroll.c$285$1_0$237	= .
                                   1796 	.globl	C$Scroll.c$285$1_0$237
                                   1797 ;C:/ZGB-2023.0/common/src/Scroll.c:285: tiles = map->tiles;
      000605 21 07 00         [12] 1798 	ld	hl, #0x0007
      000608 09               [ 8] 1799 	add	hl, bc
      000609 5D               [ 4] 1800 	ld	e, l
      00060A 54               [ 4] 1801 	ld	d, h
      00060B 1A               [ 8] 1802 	ld	a, (de)
      00060C F8 01            [12] 1803 	ldhl	sp,	#1
      00060E 22               [ 8] 1804 	ld	(hl+), a
      00060F 13               [ 8] 1805 	inc	de
      000610 1A               [ 8] 1806 	ld	a, (de)
      000611 77               [ 8] 1807 	ld	(hl), a
                           000612  1808 	C$Scroll.c$286$1_0$237	= .
                                   1809 	.globl	C$Scroll.c$286$1_0$237
                                   1810 ;C:/ZGB-2023.0/common/src/Scroll.c:286: POP_BANK;
      000612 C5               [16] 1811 	push	bc
      000613 CDr00r00         [24] 1812 	call	_PopBank
      000616 C1               [12] 1813 	pop	bc
                           000617  1814 	C$Scroll.c$288$1_0$237	= .
                                   1815 	.globl	C$Scroll.c$288$1_0$237
                                   1816 ;C:/ZGB-2023.0/common/src/Scroll.c:288: InitScrollWithTiles(map_bank, map, tiles_bank, tiles, coll_list, coll_list_down);
      000617 F8 08            [12] 1817 	ldhl	sp,	#8
      000619 2A               [ 8] 1818 	ld	a, (hl+)
      00061A 5F               [ 4] 1819 	ld	e, a
      00061B 56               [ 8] 1820 	ld	d, (hl)
      00061C D5               [16] 1821 	push	de
      00061D F8 08            [12] 1822 	ldhl	sp,	#8
      00061F 2A               [ 8] 1823 	ld	a, (hl+)
      000620 5F               [ 4] 1824 	ld	e, a
      000621 56               [ 8] 1825 	ld	d, (hl)
      000622 D5               [16] 1826 	push	de
      000623 F8 05            [12] 1827 	ldhl	sp,	#5
      000625 2A               [ 8] 1828 	ld	a, (hl+)
      000626 5F               [ 4] 1829 	ld	e, a
      000627 3A               [ 8] 1830 	ld	a, (hl-)
      000628 2B               [ 8] 1831 	dec	hl
      000629 57               [ 4] 1832 	ld	d, a
      00062A D5               [16] 1833 	push	de
      00062B 7E               [ 8] 1834 	ld	a, (hl)
      00062C F5               [16] 1835 	push	af
      00062D 33               [ 8] 1836 	inc	sp
      00062E 59               [ 4] 1837 	ld	e, c
      00062F 50               [ 4] 1838 	ld	d, b
      000630 F8 0A            [12] 1839 	ldhl	sp,	#10
      000632 7E               [ 8] 1840 	ld	a, (hl)
      000633 CDr3Cr06         [24] 1841 	call	_InitScrollWithTiles
                           000636  1842 	C$Scroll.c$289$1_0$237	= .
                                   1843 	.globl	C$Scroll.c$289$1_0$237
                                   1844 ;C:/ZGB-2023.0/common/src/Scroll.c:289: }
      000636 E8 04            [16] 1845 	add	sp, #4
      000638 E1               [12] 1846 	pop	hl
      000639 E8 04            [16] 1847 	add	sp, #4
      00063B E9               [ 4] 1848 	jp	(hl)
                           00063C  1849 	G$InitScrollWithTiles$0$0	= .
                                   1850 	.globl	G$InitScrollWithTiles$0$0
                           00063C  1851 	C$Scroll.c$291$1_0$239	= .
                                   1852 	.globl	C$Scroll.c$291$1_0$239
                                   1853 ;C:/ZGB-2023.0/common/src/Scroll.c:291: void InitScrollWithTiles(UINT8 map_bank, const struct MapInfo* map, UINT8 tiles_info_bank, const struct TilesInfo* tiles_info, const UINT8* coll_list, const UINT8* coll_list_down)
                                   1854 ;	---------------------------------
                                   1855 ; Function InitScrollWithTiles
                                   1856 ; ---------------------------------
      00063C                       1857 _InitScrollWithTiles::
      00063C E8 FC            [16] 1858 	add	sp, #-4
      00063E F8 00            [12] 1859 	ldhl	sp,	#0
      000640 77               [ 8] 1860 	ld	(hl), a
                           000641  1861 	C$Scroll.c$296$1_0$239	= .
                                   1862 	.globl	C$Scroll.c$296$1_0$239
                                   1863 ;C:/ZGB-2023.0/common/src/Scroll.c:296: ScrollSetTiles(0, tiles_info_bank, tiles_info);
      000641 D5               [16] 1864 	push	de
      000642 F8 09            [12] 1865 	ldhl	sp,	#9
      000644 2A               [ 8] 1866 	ld	a, (hl+)
      000645 4F               [ 4] 1867 	ld	c, a
      000646 3A               [ 8] 1868 	ld	a, (hl-)
      000647 2B               [ 8] 1869 	dec	hl
      000648 47               [ 4] 1870 	ld	b, a
      000649 C5               [16] 1871 	push	bc
      00064A 5E               [ 8] 1872 	ld	e, (hl)
      00064B AF               [ 4] 1873 	xor	a, a
      00064C CDr9Dr01         [24] 1874 	call	_ScrollSetTiles
      00064F D1               [12] 1875 	pop	de
                           000650  1876 	C$Scroll.c$298$1_0$239	= .
                                   1877 	.globl	C$Scroll.c$298$1_0$239
                                   1878 ;C:/ZGB-2023.0/common/src/Scroll.c:298: ScrollSetMap(map_bank, map);
      000650 F8 00            [12] 1879 	ldhl	sp,	#0
      000652 7E               [ 8] 1880 	ld	a, (hl)
      000653 CDr1Fr05         [24] 1881 	call	_ScrollSetMap
                           000656  1882 	C$Scroll.c$300$1_0$239	= .
                                   1883 	.globl	C$Scroll.c$300$1_0$239
                                   1884 ;C:/ZGB-2023.0/common/src/Scroll.c:300: memset(scroll_collisions, 0, sizeof(scroll_collisions));
      000656 AF               [ 4] 1885 	xor	a, a
      000657 3C               [ 4] 1886 	inc	a
      000658 F5               [16] 1887 	push	af
      000659 11 00 00         [12] 1888 	ld	de, #0x0000
      00065C D5               [16] 1889 	push	de
      00065D 11r08r00         [12] 1890 	ld	de, #_scroll_collisions
      000660 D5               [16] 1891 	push	de
      000661 CDr00r00         [24] 1892 	call	_memset
      000664 E8 06            [16] 1893 	add	sp, #6
                           000666  1894 	C$Scroll.c$301$1_0$239	= .
                                   1895 	.globl	C$Scroll.c$301$1_0$239
                                   1896 ;C:/ZGB-2023.0/common/src/Scroll.c:301: memset(scroll_collisions_down, 0, sizeof(scroll_collisions_down));
      000666 AF               [ 4] 1897 	xor	a, a
      000667 3C               [ 4] 1898 	inc	a
      000668 F5               [16] 1899 	push	af
      000669 11 00 00         [12] 1900 	ld	de, #0x0000
      00066C D5               [16] 1901 	push	de
      00066D 11r08r01         [12] 1902 	ld	de, #_scroll_collisions_down
      000670 D5               [16] 1903 	push	de
      000671 CDr00r00         [24] 1904 	call	_memset
      000674 E8 06            [16] 1905 	add	sp, #6
                           000676  1906 	C$Scroll.c$303$1_0$239	= .
                                   1907 	.globl	C$Scroll.c$303$1_0$239
                                   1908 ;C:/ZGB-2023.0/common/src/Scroll.c:303: if(coll_list) {
      000676 F8 0A            [12] 1909 	ldhl	sp,	#10
      000678 3A               [ 8] 1910 	ld	a, (hl-)
      000679 B6               [ 8] 1911 	or	a, (hl)
      00067A 28 29            [12] 1912 	jr	Z, 00103$
                           00067C  1913 	C$Scroll.c$304$1_0$239	= .
                                   1914 	.globl	C$Scroll.c$304$1_0$239
                                   1915 ;C:/ZGB-2023.0/common/src/Scroll.c:304: for(i = 0u; coll_list[i] != 0u; ++i) {
      00067C 1E 00            [ 8] 1916 	ld	e, #0x00
      00067E                       1917 00109$:
      00067E D5               [16] 1918 	push	de
      00067F 16 00            [ 8] 1919 	ld	d, #0x00
      000681 F8 0B            [12] 1920 	ldhl	sp,	#11
      000683 2A               [ 8] 1921 	ld	a,	(hl+)
      000684 66               [ 8] 1922 	ld	h, (hl)
      000685 6F               [ 4] 1923 	ld	l, a
      000686 19               [ 8] 1924 	add	hl, de
      000687 D1               [12] 1925 	pop	de
      000688 4D               [ 4] 1926 	ld	c, l
      000689 44               [ 4] 1927 	ld	b, h
      00068A 0A               [ 8] 1928 	ld	a, (bc)
      00068B B7               [ 4] 1929 	or	a, a
      00068C 28 17            [12] 1930 	jr	Z, 00103$
                           00068E  1931 	C$Scroll.c$305$4_0$242	= .
                                   1932 	.globl	C$Scroll.c$305$4_0$242
                                   1933 ;C:/ZGB-2023.0/common/src/Scroll.c:305: scroll_collisions[coll_list[i]] = 1u;
      00068E C6r08            [ 8] 1934 	add	a, #<(_scroll_collisions)
      000690 6F               [ 4] 1935 	ld	l, a
                                   1936 ;	spillPairReg hl
                                   1937 ;	spillPairReg hl
      000691 3E 00            [ 8] 1938 	ld	a, #0x00
      000693 CEs00            [ 8] 1939 	adc	a, #>(_scroll_collisions)
      000695 67               [ 4] 1940 	ld	h, a
                                   1941 ;	spillPairReg hl
                                   1942 ;	spillPairReg hl
      000696 36 01            [12] 1943 	ld	(hl), #0x01
                           000698  1944 	C$Scroll.c$306$4_0$242	= .
                                   1945 	.globl	C$Scroll.c$306$4_0$242
                                   1946 ;C:/ZGB-2023.0/common/src/Scroll.c:306: scroll_collisions_down[coll_list[i]] = 1u;
      000698 0A               [ 8] 1947 	ld	a, (bc)
      000699 4F               [ 4] 1948 	ld	c, a
      00069A 21r08r01         [12] 1949 	ld	hl, #_scroll_collisions_down
      00069D 06 00            [ 8] 1950 	ld	b, #0x00
      00069F 09               [ 8] 1951 	add	hl, bc
      0006A0 36 01            [12] 1952 	ld	(hl), #0x01
                           0006A2  1953 	C$Scroll.c$304$3_0$241	= .
                                   1954 	.globl	C$Scroll.c$304$3_0$241
                                   1955 ;C:/ZGB-2023.0/common/src/Scroll.c:304: for(i = 0u; coll_list[i] != 0u; ++i) {
      0006A2 1C               [ 4] 1956 	inc	e
      0006A3 18 D9            [12] 1957 	jr	00109$
      0006A5                       1958 00103$:
                           0006A5  1959 	C$Scroll.c$309$1_0$239	= .
                                   1960 	.globl	C$Scroll.c$309$1_0$239
                                   1961 ;C:/ZGB-2023.0/common/src/Scroll.c:309: if(coll_list_down) {
      0006A5 F8 0C            [12] 1962 	ldhl	sp,	#12
      0006A7 3A               [ 8] 1963 	ld	a, (hl-)
      0006A8 B6               [ 8] 1964 	or	a, (hl)
      0006A9 28 1F            [12] 1965 	jr	Z, 00106$
                           0006AB  1966 	C$Scroll.c$310$1_0$239	= .
                                   1967 	.globl	C$Scroll.c$310$1_0$239
                                   1968 ;C:/ZGB-2023.0/common/src/Scroll.c:310: for(i = 0u; coll_list_down[i] != 0u; ++i) {
      0006AB 1E 00            [ 8] 1969 	ld	e, #0x00
      0006AD                       1970 00112$:
      0006AD D5               [16] 1971 	push	de
      0006AE 16 00            [ 8] 1972 	ld	d, #0x00
      0006B0 F8 0D            [12] 1973 	ldhl	sp,	#13
      0006B2 2A               [ 8] 1974 	ld	a,	(hl+)
      0006B3 66               [ 8] 1975 	ld	h, (hl)
      0006B4 6F               [ 4] 1976 	ld	l, a
      0006B5 19               [ 8] 1977 	add	hl, de
      0006B6 D1               [12] 1978 	pop	de
      0006B7 4D               [ 4] 1979 	ld	c, l
      0006B8 44               [ 4] 1980 	ld	b, h
      0006B9 0A               [ 8] 1981 	ld	a, (bc)
      0006BA B7               [ 4] 1982 	or	a, a
      0006BB 28 0D            [12] 1983 	jr	Z, 00106$
                           0006BD  1984 	C$Scroll.c$311$4_0$245	= .
                                   1985 	.globl	C$Scroll.c$311$4_0$245
                                   1986 ;C:/ZGB-2023.0/common/src/Scroll.c:311: scroll_collisions_down[coll_list_down[i]] = 1u;
      0006BD C6r08            [ 8] 1987 	add	a, #<(_scroll_collisions_down)
      0006BF 6F               [ 4] 1988 	ld	l, a
                                   1989 ;	spillPairReg hl
                                   1990 ;	spillPairReg hl
      0006C0 3E 00            [ 8] 1991 	ld	a, #0x00
      0006C2 CEs01            [ 8] 1992 	adc	a, #>(_scroll_collisions_down)
      0006C4 67               [ 4] 1993 	ld	h, a
                                   1994 ;	spillPairReg hl
                                   1995 ;	spillPairReg hl
      0006C5 36 01            [12] 1996 	ld	(hl), #0x01
                           0006C7  1997 	C$Scroll.c$310$3_0$244	= .
                                   1998 	.globl	C$Scroll.c$310$3_0$244
                                   1999 ;C:/ZGB-2023.0/common/src/Scroll.c:310: for(i = 0u; coll_list_down[i] != 0u; ++i) {
      0006C7 1C               [ 4] 2000 	inc	e
      0006C8 18 E3            [12] 2001 	jr	00112$
      0006CA                       2002 00106$:
                           0006CA  2003 	C$Scroll.c$316$1_0$239	= .
                                   2004 	.globl	C$Scroll.c$316$1_0$239
                                   2005 ;C:/ZGB-2023.0/common/src/Scroll.c:316: PUSH_BANK(map_bank);
      0006CA F8 00            [12] 2006 	ldhl	sp,	#0
      0006CC 7E               [ 8] 2007 	ld	a, (hl)
      0006CD F5               [16] 2008 	push	af
      0006CE 33               [ 8] 2009 	inc	sp
      0006CF CDr00r00         [24] 2010 	call	_PushBank
      0006D2 33               [ 8] 2011 	inc	sp
                           0006D3  2012 	C$Scroll.c$317$1_0$239	= .
                                   2013 	.globl	C$Scroll.c$317$1_0$239
                                   2014 ;C:/ZGB-2023.0/common/src/Scroll.c:317: y = scroll_y >> 3;
      0006D3 FAr08r00         [16] 2015 	ld	a, (#_scroll_y)
      0006D6 F8 01            [12] 2016 	ldhl	sp,	#1
      0006D8 77               [ 8] 2017 	ld	(hl), a
      0006D9 FAr09r00         [16] 2018 	ld	a, (#_scroll_y + 1)
      0006DC F8 02            [12] 2019 	ldhl	sp,	#2
      0006DE 77               [ 8] 2020 	ld	(hl), a
      0006DF CB 2E            [16] 2021 	sra	(hl)
      0006E1 2B               [ 8] 2022 	dec	hl
      0006E2 CB 1E            [16] 2023 	rr	(hl)
      0006E4 23               [ 8] 2024 	inc	hl
      0006E5 CB 2E            [16] 2025 	sra	(hl)
      0006E7 2B               [ 8] 2026 	dec	hl
      0006E8 CB 1E            [16] 2027 	rr	(hl)
      0006EA 23               [ 8] 2028 	inc	hl
      0006EB CB 2E            [16] 2029 	sra	(hl)
      0006ED 2B               [ 8] 2030 	dec	hl
      0006EE CB 1E            [16] 2031 	rr	(hl)
                           0006F0  2032 	C$Scroll.c$318$1_0$239	= .
                                   2033 	.globl	C$Scroll.c$318$1_0$239
                                   2034 ;C:/ZGB-2023.0/common/src/Scroll.c:318: for(i = 0u; i != (SCREEN_TILE_REFRES_H) && y != scroll_h; ++i, y ++) {
      0006F0 23               [ 8] 2035 	inc	hl
      0006F1 23               [ 8] 2036 	inc	hl
      0006F2 36 00            [12] 2037 	ld	(hl), #0x00
      0006F4                       2038 00116$:
      0006F4 F8 03            [12] 2039 	ldhl	sp,	#3
      0006F6 7E               [ 8] 2040 	ld	a, (hl)
      0006F7 D6 15            [ 8] 2041 	sub	a, #0x15
      0006F9 28 39            [12] 2042 	jr	Z, 00107$
      0006FB F8 01            [12] 2043 	ldhl	sp,	#1
      0006FD 2A               [ 8] 2044 	ld	a, (hl+)
      0006FE 4F               [ 4] 2045 	ld	c, a
      0006FF 46               [ 8] 2046 	ld	b, (hl)
      000700 21r02r00         [12] 2047 	ld	hl, #_scroll_h
      000703 7E               [ 8] 2048 	ld	a, (hl)
      000704 91               [ 4] 2049 	sub	a, c
      000705 20 05            [12] 2050 	jr	NZ, 00187$
      000707 23               [ 8] 2051 	inc	hl
      000708 7E               [ 8] 2052 	ld	a, (hl)
      000709 90               [ 4] 2053 	sub	a, b
      00070A 28 28            [12] 2054 	jr	Z, 00107$
      00070C                       2055 00187$:
                           00070C  2056 	C$Scroll.c$319$3_0$247	= .
                                   2057 	.globl	C$Scroll.c$319$3_0$247
                                   2058 ;C:/ZGB-2023.0/common/src/Scroll.c:319: ScrollUpdateRow((scroll_x >> 3) - SCREEN_PAD_LEFT,  y - SCREEN_PAD_TOP);
      00070C F8 01            [12] 2059 	ldhl	sp,#1
      00070E 2A               [ 8] 2060 	ld	a, (hl+)
      00070F 4F               [ 4] 2061 	ld	c, a
      000710 46               [ 8] 2062 	ld	b, (hl)
      000711 0B               [ 8] 2063 	dec	bc
      000712 21r06r00         [12] 2064 	ld	hl, #_scroll_x
      000715 2A               [ 8] 2065 	ld	a, (hl+)
      000716 5F               [ 4] 2066 	ld	e, a
      000717 56               [ 8] 2067 	ld	d, (hl)
      000718 CB 2A            [ 8] 2068 	sra	d
      00071A CB 1B            [ 8] 2069 	rr	e
      00071C CB 2A            [ 8] 2070 	sra	d
      00071E CB 1B            [ 8] 2071 	rr	e
      000720 CB 2A            [ 8] 2072 	sra	d
      000722 CB 1B            [ 8] 2073 	rr	e
      000724 1B               [ 8] 2074 	dec	de
      000725 CDrF5r07         [24] 2075 	call	_ScrollUpdateRow
                           000728  2076 	C$Scroll.c$318$2_0$246	= .
                                   2077 	.globl	C$Scroll.c$318$2_0$246
                                   2078 ;C:/ZGB-2023.0/common/src/Scroll.c:318: for(i = 0u; i != (SCREEN_TILE_REFRES_H) && y != scroll_h; ++i, y ++) {
      000728 F8 03            [12] 2079 	ldhl	sp,	#3
      00072A 34               [12] 2080 	inc	(hl)
      00072B 2B               [ 8] 2081 	dec	hl
      00072C 2B               [ 8] 2082 	dec	hl
      00072D 34               [12] 2083 	inc	(hl)
      00072E 20 C4            [12] 2084 	jr	NZ, 00116$
      000730 23               [ 8] 2085 	inc	hl
      000731 34               [12] 2086 	inc	(hl)
      000732 18 C0            [12] 2087 	jr	00116$
      000734                       2088 00107$:
                           000734  2089 	C$Scroll.c$321$1_0$239	= .
                                   2090 	.globl	C$Scroll.c$321$1_0$239
                                   2091 ;C:/ZGB-2023.0/common/src/Scroll.c:321: POP_BANK;
      000734 CDr00r00         [24] 2092 	call	_PopBank
                           000737  2093 	C$Scroll.c$322$1_0$239	= .
                                   2094 	.globl	C$Scroll.c$322$1_0$239
                                   2095 ;C:/ZGB-2023.0/common/src/Scroll.c:322: }
      000737 E8 04            [16] 2096 	add	sp, #4
      000739 E1               [12] 2097 	pop	hl
      00073A E8 07            [16] 2098 	add	sp, #7
      00073C E9               [ 4] 2099 	jp	(hl)
                           00073D  2100 	G$ScrollUpdateRowR$0$0	= .
                                   2101 	.globl	G$ScrollUpdateRowR$0$0
                           00073D  2102 	C$Scroll.c$324$1_0$249	= .
                                   2103 	.globl	C$Scroll.c$324$1_0$249
                                   2104 ;C:/ZGB-2023.0/common/src/Scroll.c:324: void ScrollUpdateRowR() {
                                   2105 ;	---------------------------------
                                   2106 ; Function ScrollUpdateRowR
                                   2107 ; ---------------------------------
      00073D                       2108 _ScrollUpdateRowR::
      00073D E8 FD            [16] 2109 	add	sp, #-3
                           00073F  2110 	C$Scroll.c$327$2_0$249	= .
                                   2111 	.globl	C$Scroll.c$327$2_0$249
                                   2112 ;C:/ZGB-2023.0/common/src/Scroll.c:327: for(i = 0u; i != 5 && pending_w_i != 0; ++i, -- pending_w_i)  {
      00073F F8 02            [12] 2113 	ldhl	sp,	#2
      000741 36 00            [12] 2114 	ld	(hl), #0x00
      000743                       2115 00104$:
      000743 F8 02            [12] 2116 	ldhl	sp,	#2
      000745 7E               [ 8] 2117 	ld	a, (hl)
      000746 D6 05            [ 8] 2118 	sub	a, #0x05
      000748 28 4B            [12] 2119 	jr	Z, 00106$
      00074A FAr12r03         [16] 2120 	ld	a, (#_pending_w_i)
      00074D B7               [ 4] 2121 	or	a, a
      00074E 28 45            [12] 2122 	jr	Z, 00106$
                           000750  2123 	C$Scroll.c$329$3_0$250	= .
                                   2124 	.globl	C$Scroll.c$329$3_0$250
                                   2125 ;C:/ZGB-2023.0/common/src/Scroll.c:329: UPDATE_TILE(pending_w_x ++, pending_w_y, pending_w_map ++, pending_w_cmap++);
      000750 21r16r00         [12] 2126 	ld	hl, #_pending_w_cmap
      000753 2A               [ 8] 2127 	ld	a, (hl+)
      000754 4F               [ 4] 2128 	ld	c, a
      000755 3A               [ 8] 2129 	ld	a, (hl-)
      000756 47               [ 4] 2130 	ld	b, a
      000757 34               [12] 2131 	inc	(hl)
      000758 20 02            [12] 2132 	jr	NZ, 00131$
      00075A 23               [ 8] 2133 	inc	hl
      00075B 34               [12] 2134 	inc	(hl)
      00075C                       2135 00131$:
      00075C FAr12r00         [16] 2136 	ld	a, (#_pending_w_map)
      00075F F8 00            [12] 2137 	ldhl	sp,	#0
      000761 77               [ 8] 2138 	ld	(hl), a
      000762 FAr13r00         [16] 2139 	ld	a, (#_pending_w_map + 1)
      000765 F8 01            [12] 2140 	ldhl	sp,	#1
      000767 77               [ 8] 2141 	ld	(hl), a
      000768 21r12r00         [12] 2142 	ld	hl, #_pending_w_map
      00076B 34               [12] 2143 	inc	(hl)
      00076C 20 02            [12] 2144 	jr	NZ, 00132$
      00076E 23               [ 8] 2145 	inc	hl
      00076F 34               [12] 2146 	inc	(hl)
      000770                       2147 00132$:
      000770 21r0Er03         [12] 2148 	ld	hl, #_pending_w_x
      000773 2A               [ 8] 2149 	ld	a, (hl+)
      000774 5F               [ 4] 2150 	ld	e, a
      000775 3A               [ 8] 2151 	ld	a, (hl-)
      000776 57               [ 4] 2152 	ld	d, a
      000777 34               [12] 2153 	inc	(hl)
      000778 20 02            [12] 2154 	jr	NZ, 00133$
      00077A 23               [ 8] 2155 	inc	hl
      00077B 34               [12] 2156 	inc	(hl)
      00077C                       2157 00133$:
      00077C C5               [16] 2158 	push	bc
      00077D F8 02            [12] 2159 	ldhl	sp,	#2
      00077F 2A               [ 8] 2160 	ld	a, (hl+)
      000780 4F               [ 4] 2161 	ld	c, a
      000781 46               [ 8] 2162 	ld	b, (hl)
      000782 C5               [16] 2163 	push	bc
      000783 21r10r03         [12] 2164 	ld	hl, #_pending_w_y
      000786 2A               [ 8] 2165 	ld	a, (hl+)
      000787 4F               [ 4] 2166 	ld	c, a
      000788 46               [ 8] 2167 	ld	b, (hl)
      000789 CDr12r00         [24] 2168 	call	_UPDATE_TILE
                           00078C  2169 	C$Scroll.c$327$2_0$249	= .
                                   2170 	.globl	C$Scroll.c$327$2_0$249
                                   2171 ;C:/ZGB-2023.0/common/src/Scroll.c:327: for(i = 0u; i != 5 && pending_w_i != 0; ++i, -- pending_w_i)  {
      00078C F8 02            [12] 2172 	ldhl	sp,	#2
      00078E 34               [12] 2173 	inc	(hl)
      00078F 21r12r03         [12] 2174 	ld	hl, #_pending_w_i
      000792 35               [12] 2175 	dec	(hl)
      000793 18 AE            [12] 2176 	jr	00104$
      000795                       2177 00106$:
                           000795  2178 	C$Scroll.c$334$2_0$249	= .
                                   2179 	.globl	C$Scroll.c$334$2_0$249
                                   2180 ;C:/ZGB-2023.0/common/src/Scroll.c:334: }
      000795 E8 03            [16] 2181 	add	sp, #3
                           000797  2182 	C$Scroll.c$334$2_0$249	= .
                                   2183 	.globl	C$Scroll.c$334$2_0$249
                           000797  2184 	XG$ScrollUpdateRowR$0$0	= .
                                   2185 	.globl	XG$ScrollUpdateRowR$0$0
      000797 C9               [16] 2186 	ret
                           000798  2187 	G$ScrollUpdateRowWithDelay$0$0	= .
                                   2188 	.globl	G$ScrollUpdateRowWithDelay$0$0
                           000798  2189 	C$Scroll.c$336$2_0$252	= .
                                   2190 	.globl	C$Scroll.c$336$2_0$252
                                   2191 ;C:/ZGB-2023.0/common/src/Scroll.c:336: void ScrollUpdateRowWithDelay(INT16 x, INT16 y) {
                                   2192 ;	---------------------------------
                                   2193 ; Function ScrollUpdateRowWithDelay
                                   2194 ; ---------------------------------
      000798                       2195 _ScrollUpdateRowWithDelay::
      000798 3B               [ 8] 2196 	dec	sp
      000799 3B               [ 8] 2197 	dec	sp
                           00079A  2198 	C$Scroll.c$337$1_0$252	= .
                                   2199 	.globl	C$Scroll.c$337$1_0$252
                                   2200 ;C:/ZGB-2023.0/common/src/Scroll.c:337: while(pending_w_i) {
      00079A                       2201 00101$:
      00079A FAr12r03         [16] 2202 	ld	a, (#_pending_w_i)
      00079D B7               [ 4] 2203 	or	a, a
      00079E 28 09            [12] 2204 	jr	Z, 00103$
                           0007A0  2205 	C$Scroll.c$338$2_0$253	= .
                                   2206 	.globl	C$Scroll.c$338$2_0$253
                                   2207 ;C:/ZGB-2023.0/common/src/Scroll.c:338: ScrollUpdateRowR();
      0007A0 C5               [16] 2208 	push	bc
      0007A1 D5               [16] 2209 	push	de
      0007A2 CDr3Dr07         [24] 2210 	call	_ScrollUpdateRowR
      0007A5 D1               [12] 2211 	pop	de
      0007A6 C1               [12] 2212 	pop	bc
      0007A7 18 F1            [12] 2213 	jr	00101$
      0007A9                       2214 00103$:
                           0007A9  2215 	C$Scroll.c$341$1_0$252	= .
                                   2216 	.globl	C$Scroll.c$341$1_0$252
                                   2217 ;C:/ZGB-2023.0/common/src/Scroll.c:341: pending_w_x = x;
      0007A9 21r0Er03         [12] 2218 	ld	hl, #_pending_w_x
      0007AC 7B               [ 4] 2219 	ld	a, e
      0007AD 22               [ 8] 2220 	ld	(hl+), a
      0007AE 72               [ 8] 2221 	ld	(hl), d
                           0007AF  2222 	C$Scroll.c$342$1_0$252	= .
                                   2223 	.globl	C$Scroll.c$342$1_0$252
                                   2224 ;C:/ZGB-2023.0/common/src/Scroll.c:342: pending_w_y = y;
      0007AF 21r10r03         [12] 2225 	ld	hl, #_pending_w_y
      0007B2 79               [ 4] 2226 	ld	a, c
      0007B3 22               [ 8] 2227 	ld	(hl+), a
      0007B4 70               [ 8] 2228 	ld	(hl), b
                           0007B5  2229 	C$Scroll.c$343$1_0$252	= .
                                   2230 	.globl	C$Scroll.c$343$1_0$252
                                   2231 ;C:/ZGB-2023.0/common/src/Scroll.c:343: pending_w_i = SCREEN_TILE_REFRES_W;
      0007B5 21r12r03         [12] 2232 	ld	hl, #_pending_w_i
      0007B8 36 17            [12] 2233 	ld	(hl), #0x17
                           0007BA  2234 	C$Scroll.c$344$1_0$252	= .
                                   2235 	.globl	C$Scroll.c$344$1_0$252
                                   2236 ;C:/ZGB-2023.0/common/src/Scroll.c:344: pending_w_map = scroll_map + scroll_tiles_w * y + x;
      0007BA D5               [16] 2237 	push	de
      0007BB 21r04r00         [12] 2238 	ld	hl, #_scroll_tiles_w
      0007BE 2A               [ 8] 2239 	ld	a, (hl+)
      0007BF 5F               [ 4] 2240 	ld	e, a
      0007C0 56               [ 8] 2241 	ld	d, (hl)
      0007C1 CDr00r00         [24] 2242 	call	__mulint
      0007C4 D1               [12] 2243 	pop	de
      0007C5 21r02r00         [12] 2244 	ld	hl, #_scroll_map
      0007C8 2A               [ 8] 2245 	ld	a,	(hl+)
      0007C9 66               [ 8] 2246 	ld	h, (hl)
      0007CA 6F               [ 4] 2247 	ld	l, a
      0007CB 09               [ 8] 2248 	add	hl, bc
      0007CC 33               [ 8] 2249 	inc	sp
      0007CD 33               [ 8] 2250 	inc	sp
      0007CE E5               [16] 2251 	push	hl
      0007CF D5               [16] 2252 	push	de
      0007D0 F8 02            [12] 2253 	ldhl	sp,	#2
      0007D2 2A               [ 8] 2254 	ld	a,	(hl+)
      0007D3 66               [ 8] 2255 	ld	h, (hl)
      0007D4 6F               [ 4] 2256 	ld	l, a
      0007D5 19               [ 8] 2257 	add	hl, de
      0007D6 D1               [12] 2258 	pop	de
      0007D7 7D               [ 4] 2259 	ld	a, l
      0007D8 EAr12r00         [16] 2260 	ld	(_pending_w_map), a
      0007DB 7C               [ 4] 2261 	ld	a, h
      0007DC EAr13r00         [16] 2262 	ld	(_pending_w_map + 1), a
                           0007DF  2263 	C$Scroll.c$347$1_0$252	= .
                                   2264 	.globl	C$Scroll.c$347$1_0$252
                                   2265 ;C:/ZGB-2023.0/common/src/Scroll.c:347: pending_w_cmap = scroll_cmap + scroll_tiles_w * y + x;
      0007DF 79               [ 4] 2266 	ld	a, c
      0007E0 21r04r00         [12] 2267 	ld	hl, #_scroll_cmap
      0007E3 86               [ 8] 2268 	add	a, (hl)
      0007E4 23               [ 8] 2269 	inc	hl
      0007E5 4F               [ 4] 2270 	ld	c, a
      0007E6 78               [ 4] 2271 	ld	a, b
      0007E7 8E               [ 8] 2272 	adc	a, (hl)
      0007E8 47               [ 4] 2273 	ld	b, a
      0007E9 79               [ 4] 2274 	ld	a, c
      0007EA 83               [ 4] 2275 	add	a, e
      0007EB 21r16r00         [12] 2276 	ld	hl, #_pending_w_cmap
      0007EE 22               [ 8] 2277 	ld	(hl+), a
      0007EF 78               [ 4] 2278 	ld	a, b
      0007F0 8A               [ 4] 2279 	adc	a, d
      0007F1 77               [ 8] 2280 	ld	(hl), a
                           0007F2  2281 	C$Scroll.c$349$1_0$252	= .
                                   2282 	.globl	C$Scroll.c$349$1_0$252
                                   2283 ;C:/ZGB-2023.0/common/src/Scroll.c:349: }
      0007F2 33               [ 8] 2284 	inc	sp
      0007F3 33               [ 8] 2285 	inc	sp
                           0007F4  2286 	C$Scroll.c$349$1_0$252	= .
                                   2287 	.globl	C$Scroll.c$349$1_0$252
                           0007F4  2288 	XG$ScrollUpdateRowWithDelay$0$0	= .
                                   2289 	.globl	XG$ScrollUpdateRowWithDelay$0$0
      0007F4 C9               [16] 2290 	ret
                           0007F5  2291 	G$ScrollUpdateRow$0$0	= .
                                   2292 	.globl	G$ScrollUpdateRow$0$0
                           0007F5  2293 	C$Scroll.c$351$1_0$255	= .
                                   2294 	.globl	C$Scroll.c$351$1_0$255
                                   2295 ;C:/ZGB-2023.0/common/src/Scroll.c:351: void ScrollUpdateRow(INT16 x, INT16 y) {
                                   2296 ;	---------------------------------
                                   2297 ; Function ScrollUpdateRow
                                   2298 ; ---------------------------------
      0007F5                       2299 _ScrollUpdateRow::
      0007F5 E8 F5            [16] 2300 	add	sp, #-11
      0007F7 F8 04            [12] 2301 	ldhl	sp,	#4
      0007F9 7B               [ 4] 2302 	ld	a, e
      0007FA 22               [ 8] 2303 	ld	(hl+), a
      0007FB 72               [ 8] 2304 	ld	(hl), d
      0007FC F8 02            [12] 2305 	ldhl	sp,	#2
      0007FE 79               [ 4] 2306 	ld	a, c
      0007FF 22               [ 8] 2307 	ld	(hl+), a
                           000800  2308 	C$Scroll.c$353$1_0$255	= .
                                   2309 	.globl	C$Scroll.c$353$1_0$255
                                   2310 ;C:/ZGB-2023.0/common/src/Scroll.c:353: unsigned char* map = scroll_map + scroll_tiles_w * y + x;
      000800 78               [ 4] 2311 	ld	a, b
      000801 32               [ 8] 2312 	ld	(hl-), a
      000802 2A               [ 8] 2313 	ld	a, (hl+)
      000803 4F               [ 4] 2314 	ld	c, a
      000804 46               [ 8] 2315 	ld	b, (hl)
      000805 21r04r00         [12] 2316 	ld	hl, #_scroll_tiles_w
      000808 2A               [ 8] 2317 	ld	a, (hl+)
      000809 5F               [ 4] 2318 	ld	e, a
      00080A 56               [ 8] 2319 	ld	d, (hl)
      00080B CDr00r00         [24] 2320 	call	__mulint
      00080E 79               [ 4] 2321 	ld	a, c
      00080F 21r02r00         [12] 2322 	ld	hl, #_scroll_map
      000812 86               [ 8] 2323 	add	a, (hl)
      000813 23               [ 8] 2324 	inc	hl
      000814 5F               [ 4] 2325 	ld	e, a
      000815 78               [ 4] 2326 	ld	a, b
      000816 8E               [ 8] 2327 	adc	a, (hl)
      000817 57               [ 4] 2328 	ld	d, a
      000818 F8 04            [12] 2329 	ldhl	sp,	#4
      00081A 2A               [ 8] 2330 	ld	a,	(hl+)
      00081B 66               [ 8] 2331 	ld	h, (hl)
      00081C 6F               [ 4] 2332 	ld	l, a
      00081D 19               [ 8] 2333 	add	hl, de
      00081E 5D               [ 4] 2334 	ld	e, l
      00081F 54               [ 4] 2335 	ld	d, h
                           000820  2336 	C$Scroll.c$356$1_0$255	= .
                                   2337 	.globl	C$Scroll.c$356$1_0$255
                                   2338 ;C:/ZGB-2023.0/common/src/Scroll.c:356: unsigned char* cmap = scroll_cmap + scroll_tiles_w * y + x;
      000820 79               [ 4] 2339 	ld	a, c
      000821 21r04r00         [12] 2340 	ld	hl, #_scroll_cmap
      000824 86               [ 8] 2341 	add	a, (hl)
      000825 23               [ 8] 2342 	inc	hl
      000826 4F               [ 4] 2343 	ld	c, a
      000827 78               [ 4] 2344 	ld	a, b
      000828 8E               [ 8] 2345 	adc	a, (hl)
      000829 47               [ 4] 2346 	ld	b, a
      00082A F8 04            [12] 2347 	ldhl	sp,	#4
      00082C 2A               [ 8] 2348 	ld	a,	(hl+)
      00082D 66               [ 8] 2349 	ld	h, (hl)
      00082E 6F               [ 4] 2350 	ld	l, a
      00082F 09               [ 8] 2351 	add	hl, bc
                           000830  2352 	C$Scroll.c$359$1_0$255	= .
                                   2353 	.globl	C$Scroll.c$359$1_0$255
                                   2354 ;C:/ZGB-2023.0/common/src/Scroll.c:359: PUSH_BANK(scroll_bank);
      000830 E5               [16] 2355 	push	hl
      000831 D5               [16] 2356 	push	de
      000832 FAr08r03         [16] 2357 	ld	a, (#_scroll_bank)
      000835 F5               [16] 2358 	push	af
      000836 33               [ 8] 2359 	inc	sp
      000837 CDr00r00         [24] 2360 	call	_PushBank
      00083A 33               [ 8] 2361 	inc	sp
      00083B D1               [12] 2362 	pop	de
      00083C C1               [12] 2363 	pop	bc
                           00083D  2364 	C$Scroll.c$360$1_0$255	= .
                                   2365 	.globl	C$Scroll.c$360$1_0$255
                                   2366 ;C:/ZGB-2023.0/common/src/Scroll.c:360: for(i = 0u; i != SCREEN_TILE_REFRES_W; ++i) {
      00083D F8 06            [12] 2367 	ldhl	sp,	#6
      00083F 79               [ 4] 2368 	ld	a, c
      000840 22               [ 8] 2369 	ld	(hl+), a
      000841 78               [ 4] 2370 	ld	a, b
      000842 22               [ 8] 2371 	ld	(hl+), a
      000843 7B               [ 4] 2372 	ld	a, e
      000844 22               [ 8] 2373 	ld	(hl+), a
      000845 7A               [ 4] 2374 	ld	a, d
      000846 22               [ 8] 2375 	ld	(hl+), a
      000847 36 00            [12] 2376 	ld	(hl), #0x00
      000849                       2377 00102$:
                           000849  2378 	C$Scroll.c$362$3_0$257	= .
                                   2379 	.globl	C$Scroll.c$362$3_0$257
                                   2380 ;C:/ZGB-2023.0/common/src/Scroll.c:362: UPDATE_TILE(x + i, y, map ++, cmap ++);
      000849 F8 06            [12] 2381 	ldhl	sp,	#6
      00084B 2A               [ 8] 2382 	ld	a, (hl+)
      00084C 4F               [ 4] 2383 	ld	c, a
      00084D 3A               [ 8] 2384 	ld	a, (hl-)
      00084E 47               [ 4] 2385 	ld	b, a
      00084F 34               [12] 2386 	inc	(hl)
      000850 20 02            [12] 2387 	jr	NZ, 00121$
      000852 23               [ 8] 2388 	inc	hl
      000853 34               [12] 2389 	inc	(hl)
      000854                       2390 00121$:
      000854 F8 08            [12] 2391 	ldhl	sp,	#8
      000856 7E               [ 8] 2392 	ld	a, (hl)
      000857 F8 00            [12] 2393 	ldhl	sp,	#0
      000859 77               [ 8] 2394 	ld	(hl), a
      00085A F8 09            [12] 2395 	ldhl	sp,	#9
      00085C 7E               [ 8] 2396 	ld	a, (hl)
      00085D F8 01            [12] 2397 	ldhl	sp,	#1
      00085F 77               [ 8] 2398 	ld	(hl), a
      000860 F8 08            [12] 2399 	ldhl	sp,	#8
      000862 34               [12] 2400 	inc	(hl)
      000863 20 02            [12] 2401 	jr	NZ, 00122$
      000865 23               [ 8] 2402 	inc	hl
      000866 34               [12] 2403 	inc	(hl)
      000867                       2404 00122$:
      000867 F8 0A            [12] 2405 	ldhl	sp,	#10
      000869 5E               [ 8] 2406 	ld	e, (hl)
      00086A 16 00            [ 8] 2407 	ld	d, #0x00
      00086C F8 04            [12] 2408 	ldhl	sp,	#4
      00086E 2A               [ 8] 2409 	ld	a,	(hl+)
      00086F 66               [ 8] 2410 	ld	h, (hl)
      000870 6F               [ 4] 2411 	ld	l, a
      000871 19               [ 8] 2412 	add	hl, de
      000872 5D               [ 4] 2413 	ld	e, l
      000873 54               [ 4] 2414 	ld	d, h
      000874 C5               [16] 2415 	push	bc
      000875 F8 02            [12] 2416 	ldhl	sp,	#2
      000877 2A               [ 8] 2417 	ld	a, (hl+)
      000878 4F               [ 4] 2418 	ld	c, a
      000879 2A               [ 8] 2419 	ld	a, (hl+)
      00087A 47               [ 4] 2420 	ld	b, a
      00087B C5               [16] 2421 	push	bc
      00087C 2A               [ 8] 2422 	ld	a, (hl+)
      00087D 4F               [ 4] 2423 	ld	c, a
      00087E 46               [ 8] 2424 	ld	b, (hl)
      00087F CDr12r00         [24] 2425 	call	_UPDATE_TILE
                           000882  2426 	C$Scroll.c$360$2_0$256	= .
                                   2427 	.globl	C$Scroll.c$360$2_0$256
                                   2428 ;C:/ZGB-2023.0/common/src/Scroll.c:360: for(i = 0u; i != SCREEN_TILE_REFRES_W; ++i) {
      000882 F8 0A            [12] 2429 	ldhl	sp,	#10
      000884 34               [12] 2430 	inc	(hl)
      000885 7E               [ 8] 2431 	ld	a, (hl)
      000886 D6 17            [ 8] 2432 	sub	a, #0x17
      000888 20 BF            [12] 2433 	jr	NZ, 00102$
                           00088A  2434 	C$Scroll.c$367$1_0$255	= .
                                   2435 	.globl	C$Scroll.c$367$1_0$255
                                   2436 ;C:/ZGB-2023.0/common/src/Scroll.c:367: POP_BANK;
      00088A CDr00r00         [24] 2437 	call	_PopBank
                           00088D  2438 	C$Scroll.c$368$1_0$255	= .
                                   2439 	.globl	C$Scroll.c$368$1_0$255
                                   2440 ;C:/ZGB-2023.0/common/src/Scroll.c:368: }
      00088D E8 0B            [16] 2441 	add	sp, #11
                           00088F  2442 	C$Scroll.c$368$1_0$255	= .
                                   2443 	.globl	C$Scroll.c$368$1_0$255
                           00088F  2444 	XG$ScrollUpdateRow$0$0	= .
                                   2445 	.globl	XG$ScrollUpdateRow$0$0
      00088F C9               [16] 2446 	ret
                           000890  2447 	G$ScrollUpdateColumnR$0$0	= .
                                   2448 	.globl	G$ScrollUpdateColumnR$0$0
                           000890  2449 	C$Scroll.c$370$1_0$259	= .
                                   2450 	.globl	C$Scroll.c$370$1_0$259
                                   2451 ;C:/ZGB-2023.0/common/src/Scroll.c:370: void ScrollUpdateColumnR() {
                                   2452 ;	---------------------------------
                                   2453 ; Function ScrollUpdateColumnR
                                   2454 ; ---------------------------------
      000890                       2455 _ScrollUpdateColumnR::
                           000890  2456 	C$Scroll.c$373$2_0$259	= .
                                   2457 	.globl	C$Scroll.c$373$2_0$259
                                   2458 ;C:/ZGB-2023.0/common/src/Scroll.c:373: for(i = 0u; i != 5 && pending_h_i != 0; ++i, pending_h_i --) {
      000890 1E 00            [ 8] 2459 	ld	e, #0x00
      000892                       2460 00104$:
      000892 7B               [ 4] 2461 	ld	a, e
      000893 D6 05            [ 8] 2462 	sub	a, #0x05
      000895 C8               [20] 2463 	ret	Z
      000896 FAr0Dr03         [16] 2464 	ld	a, (#_pending_h_i)
      000899 B7               [ 4] 2465 	or	a, a
      00089A C8               [20] 2466 	ret	Z
                           00089B  2467 	C$Scroll.c$375$3_0$260	= .
                                   2468 	.globl	C$Scroll.c$375$3_0$260
                                   2469 ;C:/ZGB-2023.0/common/src/Scroll.c:375: UPDATE_TILE(pending_h_x, pending_h_y ++, pending_h_map, pending_h_cmap);
      00089B 21r0Br03         [12] 2470 	ld	hl, #_pending_h_y
      00089E 2A               [ 8] 2471 	ld	a, (hl+)
      00089F 4F               [ 4] 2472 	ld	c, a
      0008A0 3A               [ 8] 2473 	ld	a, (hl-)
      0008A1 47               [ 4] 2474 	ld	b, a
      0008A2 34               [12] 2475 	inc	(hl)
      0008A3 20 02            [12] 2476 	jr	NZ, 00131$
      0008A5 23               [ 8] 2477 	inc	hl
      0008A6 34               [12] 2478 	inc	(hl)
      0008A7                       2479 00131$:
      0008A7 D5               [16] 2480 	push	de
      0008A8 21r14r00         [12] 2481 	ld	hl, #_pending_h_cmap
      0008AB 6E               [ 8] 2482 	ld	l, (hl)
                                   2483 ;	spillPairReg hl
                                   2484 ;	spillPairReg hl
      0008AC FAr15r00         [16] 2485 	ld	a, (_pending_h_cmap + 1)
      0008AF 67               [ 4] 2486 	ld	h, a
                                   2487 ;	spillPairReg hl
                                   2488 ;	spillPairReg hl
      0008B0 E5               [16] 2489 	push	hl
      0008B1 21r10r00         [12] 2490 	ld	hl, #_pending_h_map
      0008B4 6E               [ 8] 2491 	ld	l, (hl)
                                   2492 ;	spillPairReg hl
                                   2493 ;	spillPairReg hl
      0008B5 FAr11r00         [16] 2494 	ld	a, (_pending_h_map + 1)
      0008B8 67               [ 4] 2495 	ld	h, a
                                   2496 ;	spillPairReg hl
                                   2497 ;	spillPairReg hl
      0008B9 E5               [16] 2498 	push	hl
      0008BA 21r09r03         [12] 2499 	ld	hl, #_pending_h_x
      0008BD 2A               [ 8] 2500 	ld	a, (hl+)
      0008BE 5F               [ 4] 2501 	ld	e, a
      0008BF 56               [ 8] 2502 	ld	d, (hl)
      0008C0 CDr12r00         [24] 2503 	call	_UPDATE_TILE
      0008C3 D1               [12] 2504 	pop	de
                           0008C4  2505 	C$Scroll.c$376$3_0$260	= .
                                   2506 	.globl	C$Scroll.c$376$3_0$260
                                   2507 ;C:/ZGB-2023.0/common/src/Scroll.c:376: pending_h_map += scroll_tiles_w;
      0008C4 FAr10r00         [16] 2508 	ld	a, (#_pending_h_map)
      0008C7 21r04r00         [12] 2509 	ld	hl, #_scroll_tiles_w
      0008CA 86               [ 8] 2510 	add	a, (hl)
      0008CB 21r10r00         [12] 2511 	ld	hl, #_pending_h_map
      0008CE 22               [ 8] 2512 	ld	(hl+), a
      0008CF 7E               [ 8] 2513 	ld	a, (hl)
      0008D0 21r05r00         [12] 2514 	ld	hl, #_scroll_tiles_w + 1
      0008D3 8E               [ 8] 2515 	adc	a, (hl)
      0008D4 EAr11r00         [16] 2516 	ld	(#_pending_h_map + 1),a
                           0008D7  2517 	C$Scroll.c$377$3_0$260	= .
                                   2518 	.globl	C$Scroll.c$377$3_0$260
                                   2519 ;C:/ZGB-2023.0/common/src/Scroll.c:377: pending_h_cmap += scroll_tiles_w;
      0008D7 FAr14r00         [16] 2520 	ld	a, (#_pending_h_cmap)
      0008DA 21r04r00         [12] 2521 	ld	hl, #_scroll_tiles_w
      0008DD 86               [ 8] 2522 	add	a, (hl)
      0008DE 21r14r00         [12] 2523 	ld	hl, #_pending_h_cmap
      0008E1 22               [ 8] 2524 	ld	(hl+), a
      0008E2 7E               [ 8] 2525 	ld	a, (hl)
      0008E3 21r05r00         [12] 2526 	ld	hl, #_scroll_tiles_w + 1
      0008E6 8E               [ 8] 2527 	adc	a, (hl)
      0008E7 EAr15r00         [16] 2528 	ld	(#_pending_h_cmap + 1),a
                           0008EA  2529 	C$Scroll.c$373$2_0$259	= .
                                   2530 	.globl	C$Scroll.c$373$2_0$259
                                   2531 ;C:/ZGB-2023.0/common/src/Scroll.c:373: for(i = 0u; i != 5 && pending_h_i != 0; ++i, pending_h_i --) {
      0008EA 1C               [ 4] 2532 	inc	e
      0008EB 21r0Dr03         [12] 2533 	ld	hl, #_pending_h_i
      0008EE 35               [12] 2534 	dec	(hl)
                           0008EF  2535 	C$Scroll.c$383$2_0$259	= .
                                   2536 	.globl	C$Scroll.c$383$2_0$259
                                   2537 ;C:/ZGB-2023.0/common/src/Scroll.c:383: }
                           0008EF  2538 	C$Scroll.c$383$2_0$259	= .
                                   2539 	.globl	C$Scroll.c$383$2_0$259
                           0008EF  2540 	XG$ScrollUpdateColumnR$0$0	= .
                                   2541 	.globl	XG$ScrollUpdateColumnR$0$0
      0008EF 18 A1            [12] 2542 	jr	00104$
                           0008F1  2543 	G$ScrollUpdateColumnWithDelay$0$0	= .
                                   2544 	.globl	G$ScrollUpdateColumnWithDelay$0$0
                           0008F1  2545 	C$Scroll.c$385$2_0$262	= .
                                   2546 	.globl	C$Scroll.c$385$2_0$262
                                   2547 ;C:/ZGB-2023.0/common/src/Scroll.c:385: void ScrollUpdateColumnWithDelay(INT16 x, INT16 y) {
                                   2548 ;	---------------------------------
                                   2549 ; Function ScrollUpdateColumnWithDelay
                                   2550 ; ---------------------------------
      0008F1                       2551 _ScrollUpdateColumnWithDelay::
      0008F1 3B               [ 8] 2552 	dec	sp
      0008F2 3B               [ 8] 2553 	dec	sp
                           0008F3  2554 	C$Scroll.c$386$1_0$262	= .
                                   2555 	.globl	C$Scroll.c$386$1_0$262
                                   2556 ;C:/ZGB-2023.0/common/src/Scroll.c:386: while(pending_h_i) {
      0008F3                       2557 00101$:
      0008F3 FAr0Dr03         [16] 2558 	ld	a, (#_pending_h_i)
      0008F6 B7               [ 4] 2559 	or	a, a
      0008F7 28 09            [12] 2560 	jr	Z, 00103$
                           0008F9  2561 	C$Scroll.c$387$2_0$263	= .
                                   2562 	.globl	C$Scroll.c$387$2_0$263
                                   2563 ;C:/ZGB-2023.0/common/src/Scroll.c:387: ScrollUpdateColumnR();
      0008F9 C5               [16] 2564 	push	bc
      0008FA D5               [16] 2565 	push	de
      0008FB CDr90r08         [24] 2566 	call	_ScrollUpdateColumnR
      0008FE D1               [12] 2567 	pop	de
      0008FF C1               [12] 2568 	pop	bc
      000900 18 F1            [12] 2569 	jr	00101$
      000902                       2570 00103$:
                           000902  2571 	C$Scroll.c$390$1_0$262	= .
                                   2572 	.globl	C$Scroll.c$390$1_0$262
                                   2573 ;C:/ZGB-2023.0/common/src/Scroll.c:390: pending_h_x = x;
      000902 21r09r03         [12] 2574 	ld	hl, #_pending_h_x
      000905 7B               [ 4] 2575 	ld	a, e
      000906 22               [ 8] 2576 	ld	(hl+), a
      000907 72               [ 8] 2577 	ld	(hl), d
                           000908  2578 	C$Scroll.c$391$1_0$262	= .
                                   2579 	.globl	C$Scroll.c$391$1_0$262
                                   2580 ;C:/ZGB-2023.0/common/src/Scroll.c:391: pending_h_y = y;
      000908 21r0Br03         [12] 2581 	ld	hl, #_pending_h_y
      00090B 79               [ 4] 2582 	ld	a, c
      00090C 22               [ 8] 2583 	ld	(hl+), a
      00090D 70               [ 8] 2584 	ld	(hl), b
                           00090E  2585 	C$Scroll.c$392$1_0$262	= .
                                   2586 	.globl	C$Scroll.c$392$1_0$262
                                   2587 ;C:/ZGB-2023.0/common/src/Scroll.c:392: pending_h_i = SCREEN_TILE_REFRES_H;
      00090E 21r0Dr03         [12] 2588 	ld	hl, #_pending_h_i
      000911 36 15            [12] 2589 	ld	(hl), #0x15
                           000913  2590 	C$Scroll.c$393$1_0$262	= .
                                   2591 	.globl	C$Scroll.c$393$1_0$262
                                   2592 ;C:/ZGB-2023.0/common/src/Scroll.c:393: pending_h_map = scroll_map + scroll_tiles_w * y + x;
      000913 D5               [16] 2593 	push	de
      000914 21r04r00         [12] 2594 	ld	hl, #_scroll_tiles_w
      000917 2A               [ 8] 2595 	ld	a, (hl+)
      000918 5F               [ 4] 2596 	ld	e, a
      000919 56               [ 8] 2597 	ld	d, (hl)
      00091A CDr00r00         [24] 2598 	call	__mulint
      00091D D1               [12] 2599 	pop	de
      00091E 21r02r00         [12] 2600 	ld	hl, #_scroll_map
      000921 2A               [ 8] 2601 	ld	a,	(hl+)
      000922 66               [ 8] 2602 	ld	h, (hl)
      000923 6F               [ 4] 2603 	ld	l, a
      000924 09               [ 8] 2604 	add	hl, bc
      000925 33               [ 8] 2605 	inc	sp
      000926 33               [ 8] 2606 	inc	sp
      000927 E5               [16] 2607 	push	hl
      000928 D5               [16] 2608 	push	de
      000929 F8 02            [12] 2609 	ldhl	sp,	#2
      00092B 2A               [ 8] 2610 	ld	a,	(hl+)
      00092C 66               [ 8] 2611 	ld	h, (hl)
      00092D 6F               [ 4] 2612 	ld	l, a
      00092E 19               [ 8] 2613 	add	hl, de
      00092F D1               [12] 2614 	pop	de
      000930 7D               [ 4] 2615 	ld	a, l
      000931 EAr10r00         [16] 2616 	ld	(_pending_h_map), a
      000934 7C               [ 4] 2617 	ld	a, h
      000935 EAr11r00         [16] 2618 	ld	(_pending_h_map + 1), a
                           000938  2619 	C$Scroll.c$396$1_0$262	= .
                                   2620 	.globl	C$Scroll.c$396$1_0$262
                                   2621 ;C:/ZGB-2023.0/common/src/Scroll.c:396: pending_h_cmap = scroll_cmap + scroll_tiles_w * y + x;
      000938 79               [ 4] 2622 	ld	a, c
      000939 21r04r00         [12] 2623 	ld	hl, #_scroll_cmap
      00093C 86               [ 8] 2624 	add	a, (hl)
      00093D 23               [ 8] 2625 	inc	hl
      00093E 4F               [ 4] 2626 	ld	c, a
      00093F 78               [ 4] 2627 	ld	a, b
      000940 8E               [ 8] 2628 	adc	a, (hl)
      000941 47               [ 4] 2629 	ld	b, a
      000942 79               [ 4] 2630 	ld	a, c
      000943 83               [ 4] 2631 	add	a, e
      000944 21r14r00         [12] 2632 	ld	hl, #_pending_h_cmap
      000947 22               [ 8] 2633 	ld	(hl+), a
      000948 78               [ 4] 2634 	ld	a, b
      000949 8A               [ 4] 2635 	adc	a, d
      00094A 77               [ 8] 2636 	ld	(hl), a
                           00094B  2637 	C$Scroll.c$398$1_0$262	= .
                                   2638 	.globl	C$Scroll.c$398$1_0$262
                                   2639 ;C:/ZGB-2023.0/common/src/Scroll.c:398: }
      00094B 33               [ 8] 2640 	inc	sp
      00094C 33               [ 8] 2641 	inc	sp
                           00094D  2642 	C$Scroll.c$398$1_0$262	= .
                                   2643 	.globl	C$Scroll.c$398$1_0$262
                           00094D  2644 	XG$ScrollUpdateColumnWithDelay$0$0	= .
                                   2645 	.globl	XG$ScrollUpdateColumnWithDelay$0$0
      00094D C9               [16] 2646 	ret
                           00094E  2647 	G$ScrollUpdateColumn$0$0	= .
                                   2648 	.globl	G$ScrollUpdateColumn$0$0
                           00094E  2649 	C$Scroll.c$400$1_0$265	= .
                                   2650 	.globl	C$Scroll.c$400$1_0$265
                                   2651 ;C:/ZGB-2023.0/common/src/Scroll.c:400: void ScrollUpdateColumn(INT16 x, INT16 y) {
                                   2652 ;	---------------------------------
                                   2653 ; Function ScrollUpdateColumn
                                   2654 ; ---------------------------------
      00094E                       2655 _ScrollUpdateColumn::
      00094E E8 F9            [16] 2656 	add	sp, #-7
      000950 F8 02            [12] 2657 	ldhl	sp,	#2
      000952 7B               [ 4] 2658 	ld	a, e
      000953 22               [ 8] 2659 	ld	(hl+), a
      000954 72               [ 8] 2660 	ld	(hl), d
      000955 33               [ 8] 2661 	inc	sp
      000956 33               [ 8] 2662 	inc	sp
      000957 C5               [16] 2663 	push	bc
      000958 21r04r00         [12] 2664 	ld	hl, #_scroll_tiles_w
      00095B 2A               [ 8] 2665 	ld	a, (hl+)
      00095C 5F               [ 4] 2666 	ld	e, a
      00095D 56               [ 8] 2667 	ld	d, (hl)
      00095E CDr00r00         [24] 2668 	call	__mulint
      000961 F8 02            [12] 2669 	ldhl	sp,	#2
      000963 2A               [ 8] 2670 	ld	a, (hl+)
      000964 5E               [ 8] 2671 	ld	e, (hl)
      000965 81               [ 4] 2672 	add	a, c
      000966 4F               [ 4] 2673 	ld	c, a
      000967 7B               [ 4] 2674 	ld	a, e
      000968 88               [ 4] 2675 	adc	a, b
      000969 47               [ 4] 2676 	ld	b, a
      00096A 79               [ 4] 2677 	ld	a, c
      00096B 21r02r00         [12] 2678 	ld	hl, #_scroll_map
      00096E 86               [ 8] 2679 	add	a, (hl)
      00096F 23               [ 8] 2680 	inc	hl
      000970 5F               [ 4] 2681 	ld	e, a
      000971 78               [ 4] 2682 	ld	a, b
      000972 8E               [ 8] 2683 	adc	a, (hl)
      000973 57               [ 4] 2684 	ld	d, a
                           000974  2685 	C$Scroll.c$404$1_0$265	= .
                                   2686 	.globl	C$Scroll.c$404$1_0$265
                                   2687 ;C:/ZGB-2023.0/common/src/Scroll.c:404: unsigned char* cmap = &scroll_cmap[scroll_tiles_w * y + x];
      000974 21r04r00         [12] 2688 	ld	hl, #_scroll_cmap
      000977 2A               [ 8] 2689 	ld	a,	(hl+)
      000978 66               [ 8] 2690 	ld	h, (hl)
      000979 6F               [ 4] 2691 	ld	l, a
      00097A 09               [ 8] 2692 	add	hl, bc
      00097B E5               [16] 2693 	push	hl
      00097C 7D               [ 4] 2694 	ld	a, l
      00097D F8 06            [12] 2695 	ldhl	sp,	#6
      00097F 77               [ 8] 2696 	ld	(hl), a
      000980 E1               [12] 2697 	pop	hl
      000981 7C               [ 4] 2698 	ld	a, h
      000982 F8 05            [12] 2699 	ldhl	sp,	#5
      000984 77               [ 8] 2700 	ld	(hl), a
                           000985  2701 	C$Scroll.c$407$1_0$265	= .
                                   2702 	.globl	C$Scroll.c$407$1_0$265
                                   2703 ;C:/ZGB-2023.0/common/src/Scroll.c:407: PUSH_BANK(scroll_bank);
      000985 D5               [16] 2704 	push	de
      000986 FAr08r03         [16] 2705 	ld	a, (#_scroll_bank)
      000989 F5               [16] 2706 	push	af
      00098A 33               [ 8] 2707 	inc	sp
      00098B CDr00r00         [24] 2708 	call	_PushBank
      00098E 33               [ 8] 2709 	inc	sp
      00098F D1               [12] 2710 	pop	de
                           000990  2711 	C$Scroll.c$408$1_0$265	= .
                                   2712 	.globl	C$Scroll.c$408$1_0$265
                                   2713 ;C:/ZGB-2023.0/common/src/Scroll.c:408: for(i = 0u; i != SCREEN_TILE_REFRES_H; ++i) {
      000990 F8 06            [12] 2714 	ldhl	sp,	#6
      000992 36 00            [12] 2715 	ld	(hl), #0x00
      000994                       2716 00102$:
                           000994  2717 	C$Scroll.c$410$3_0$267	= .
                                   2718 	.globl	C$Scroll.c$410$3_0$267
                                   2719 ;C:/ZGB-2023.0/common/src/Scroll.c:410: UPDATE_TILE(x, y + i, map, cmap);
      000994 F8 06            [12] 2720 	ldhl	sp,	#6
      000996 4E               [ 8] 2721 	ld	c, (hl)
      000997 06 00            [ 8] 2722 	ld	b, #0x00
      000999 E1               [12] 2723 	pop	hl
      00099A E5               [16] 2724 	push	hl
      00099B 09               [ 8] 2725 	add	hl, bc
      00099C 4D               [ 4] 2726 	ld	c, l
      00099D 44               [ 4] 2727 	ld	b, h
      00099E D5               [16] 2728 	push	de
      00099F F8 06            [12] 2729 	ldhl	sp,	#6
      0009A1 2A               [ 8] 2730 	ld	a, (hl+)
      0009A2 66               [ 8] 2731 	ld	h, (hl)
                                   2732 ;	spillPairReg hl
                                   2733 ;	spillPairReg hl
      0009A3 6F               [ 4] 2734 	ld	l, a
                                   2735 ;	spillPairReg hl
                                   2736 ;	spillPairReg hl
      0009A4 E5               [16] 2737 	push	hl
      0009A5 D5               [16] 2738 	push	de
      0009A6 F8 08            [12] 2739 	ldhl	sp,	#8
      0009A8 2A               [ 8] 2740 	ld	a, (hl+)
      0009A9 5F               [ 4] 2741 	ld	e, a
      0009AA 56               [ 8] 2742 	ld	d, (hl)
      0009AB CDr12r00         [24] 2743 	call	_UPDATE_TILE
      0009AE D1               [12] 2744 	pop	de
                           0009AF  2745 	C$Scroll.c$411$3_0$267	= .
                                   2746 	.globl	C$Scroll.c$411$3_0$267
                                   2747 ;C:/ZGB-2023.0/common/src/Scroll.c:411: map += scroll_tiles_w;
      0009AF 7B               [ 4] 2748 	ld	a, e
      0009B0 21r04r00         [12] 2749 	ld	hl, #_scroll_tiles_w
      0009B3 86               [ 8] 2750 	add	a, (hl)
      0009B4 23               [ 8] 2751 	inc	hl
      0009B5 5F               [ 4] 2752 	ld	e, a
      0009B6 7A               [ 4] 2753 	ld	a, d
      0009B7 8E               [ 8] 2754 	adc	a, (hl)
      0009B8 57               [ 4] 2755 	ld	d, a
                           0009B9  2756 	C$Scroll.c$412$3_0$267	= .
                                   2757 	.globl	C$Scroll.c$412$3_0$267
                                   2758 ;C:/ZGB-2023.0/common/src/Scroll.c:412: cmap += scroll_tiles_w;
      0009B9 D5               [16] 2759 	push	de
      0009BA F8 06            [12] 2760 	ldhl	sp,#6
      0009BC 2A               [ 8] 2761 	ld	a, (hl+)
      0009BD 5F               [ 4] 2762 	ld	e, a
      0009BE 56               [ 8] 2763 	ld	d, (hl)
      0009BF 21r04r00         [12] 2764 	ld	hl, #_scroll_tiles_w
      0009C2 2A               [ 8] 2765 	ld	a,	(hl+)
      0009C3 66               [ 8] 2766 	ld	h, (hl)
      0009C4 6F               [ 4] 2767 	ld	l, a
      0009C5 19               [ 8] 2768 	add	hl, de
      0009C6 D1               [12] 2769 	pop	de
      0009C7 E5               [16] 2770 	push	hl
      0009C8 7D               [ 4] 2771 	ld	a, l
      0009C9 F8 06            [12] 2772 	ldhl	sp,	#6
      0009CB 77               [ 8] 2773 	ld	(hl), a
      0009CC E1               [12] 2774 	pop	hl
      0009CD 7C               [ 4] 2775 	ld	a, h
      0009CE F8 05            [12] 2776 	ldhl	sp,	#5
                           0009D0  2777 	C$Scroll.c$408$2_0$266	= .
                                   2778 	.globl	C$Scroll.c$408$2_0$266
                                   2779 ;C:/ZGB-2023.0/common/src/Scroll.c:408: for(i = 0u; i != SCREEN_TILE_REFRES_H; ++i) {
      0009D0 22               [ 8] 2780 	ld	(hl+), a
      0009D1 34               [12] 2781 	inc	(hl)
      0009D2 7E               [ 8] 2782 	ld	a, (hl)
      0009D3 D6 15            [ 8] 2783 	sub	a, #0x15
      0009D5 20 BD            [12] 2784 	jr	NZ, 00102$
                           0009D7  2785 	C$Scroll.c$418$1_0$265	= .
                                   2786 	.globl	C$Scroll.c$418$1_0$265
                                   2787 ;C:/ZGB-2023.0/common/src/Scroll.c:418: POP_BANK;
      0009D7 CDr00r00         [24] 2788 	call	_PopBank
                           0009DA  2789 	C$Scroll.c$419$1_0$265	= .
                                   2790 	.globl	C$Scroll.c$419$1_0$265
                                   2791 ;C:/ZGB-2023.0/common/src/Scroll.c:419: }
      0009DA E8 07            [16] 2792 	add	sp, #7
                           0009DC  2793 	C$Scroll.c$419$1_0$265	= .
                                   2794 	.globl	C$Scroll.c$419$1_0$265
                           0009DC  2795 	XG$ScrollUpdateColumn$0$0	= .
                                   2796 	.globl	XG$ScrollUpdateColumn$0$0
      0009DC C9               [16] 2797 	ret
                           0009DD  2798 	G$RefreshScroll$0$0	= .
                                   2799 	.globl	G$RefreshScroll$0$0
                           0009DD  2800 	C$Scroll.c$421$1_0$268	= .
                                   2801 	.globl	C$Scroll.c$421$1_0$268
                                   2802 ;C:/ZGB-2023.0/common/src/Scroll.c:421: void RefreshScroll() {
                                   2803 ;	---------------------------------
                                   2804 ; Function RefreshScroll
                                   2805 ; ---------------------------------
      0009DD                       2806 _RefreshScroll::
      0009DD E8 F6            [16] 2807 	add	sp, #-10
                           0009DF  2808 	C$Scroll.c$422$2_0$268	= .
                                   2809 	.globl	C$Scroll.c$422$2_0$268
                                   2810 ;C:/ZGB-2023.0/common/src/Scroll.c:422: UINT16 ny = scroll_y;
      0009DF FAr08r00         [16] 2811 	ld	a, (#_scroll_y)
      0009E2 F8 00            [12] 2812 	ldhl	sp,	#0
      0009E4 77               [ 8] 2813 	ld	(hl), a
      0009E5 FAr09r00         [16] 2814 	ld	a, (#_scroll_y + 1)
      0009E8 F8 01            [12] 2815 	ldhl	sp,	#1
      0009EA 77               [ 8] 2816 	ld	(hl), a
                           0009EB  2817 	C$Scroll.c$424$1_0$268	= .
                                   2818 	.globl	C$Scroll.c$424$1_0$268
                                   2819 ;C:/ZGB-2023.0/common/src/Scroll.c:424: if(scroll_target) {
      0009EB 21r0Dr00         [12] 2820 	ld	hl, #_scroll_target + 1
      0009EE 3A               [ 8] 2821 	ld	a, (hl-)
      0009EF B6               [ 8] 2822 	or	a, (hl)
      0009F0 CAr98r0A         [16] 2823 	jp	Z, 00108$
                           0009F3  2824 	C$Scroll.c$425$2_0$269	= .
                                   2825 	.globl	C$Scroll.c$425$2_0$269
                                   2826 ;C:/ZGB-2023.0/common/src/Scroll.c:425: if(U_LESS_THAN(scroll_bottom_movement_limit, scroll_target->y - scroll_y)) {
      0009F3 FAr01r00         [16] 2827 	ld	a, (#_scroll_bottom_movement_limit)
      0009F6 F8 09            [12] 2828 	ldhl	sp,	#9
      0009F8 77               [ 8] 2829 	ld	(hl), a
      0009F9 FAr0Cr00         [16] 2830 	ld	a, (#_scroll_target)
      0009FC F8 02            [12] 2831 	ldhl	sp,	#2
      0009FE 77               [ 8] 2832 	ld	(hl), a
      0009FF FAr0Dr00         [16] 2833 	ld	a, (#_scroll_target + 1)
      000A02 F8 03            [12] 2834 	ldhl	sp,	#3
      000A04 32               [ 8] 2835 	ld	(hl-), a
      000A05 2A               [ 8] 2836 	ld	a, (hl+)
      000A06 5F               [ 4] 2837 	ld	e, a
      000A07 56               [ 8] 2838 	ld	d, (hl)
      000A08 21 0E 00         [12] 2839 	ld	hl, #0x000e
      000A0B 19               [ 8] 2840 	add	hl, de
      000A0C 4D               [ 4] 2841 	ld	c, l
      000A0D 44               [ 4] 2842 	ld	b, h
      000A0E 59               [ 4] 2843 	ld	e, c
      000A0F 50               [ 4] 2844 	ld	d, b
      000A10 1A               [ 8] 2845 	ld	a, (de)
      000A11 F8 04            [12] 2846 	ldhl	sp,	#4
      000A13 22               [ 8] 2847 	ld	(hl+), a
      000A14 13               [ 8] 2848 	inc	de
      000A15 1A               [ 8] 2849 	ld	a, (de)
      000A16 77               [ 8] 2850 	ld	(hl), a
      000A17 21r08r00         [12] 2851 	ld	hl, #_scroll_y
      000A1A 2A               [ 8] 2852 	ld	a, (hl+)
      000A1B 4F               [ 4] 2853 	ld	c, a
      000A1C 46               [ 8] 2854 	ld	b, (hl)
      000A1D F8 04            [12] 2855 	ldhl	sp,#4
      000A1F 2A               [ 8] 2856 	ld	a, (hl+)
      000A20 5F               [ 4] 2857 	ld	e, a
      000A21 2A               [ 8] 2858 	ld	a, (hl+)
      000A22 23               [ 8] 2859 	inc	hl
      000A23 57               [ 4] 2860 	ld	d, a
      000A24 7B               [ 4] 2861 	ld	a, e
      000A25 91               [ 4] 2862 	sub	a, c
      000A26 5F               [ 4] 2863 	ld	e, a
      000A27 7A               [ 4] 2864 	ld	a, d
      000A28 98               [ 4] 2865 	sbc	a, b
      000A29 32               [ 8] 2866 	ld	(hl-), a
      000A2A 73               [ 8] 2867 	ld	(hl), e
      000A2B F8 09            [12] 2868 	ldhl	sp,	#9
      000A2D 3A               [ 8] 2869 	ld	a, (hl-)
      000A2E 2B               [ 8] 2870 	dec	hl
      000A2F 2B               [ 8] 2871 	dec	hl
      000A30 4F               [ 4] 2872 	ld	c, a
      000A31 06 00            [ 8] 2873 	ld	b, #0x00
      000A33 2A               [ 8] 2874 	ld	a, (hl+)
      000A34 5F               [ 4] 2875 	ld	e, a
      000A35 2A               [ 8] 2876 	ld	a, (hl+)
      000A36 23               [ 8] 2877 	inc	hl
      000A37 57               [ 4] 2878 	ld	d, a
      000A38 79               [ 4] 2879 	ld	a, c
      000A39 93               [ 4] 2880 	sub	a, e
      000A3A 5F               [ 4] 2881 	ld	e, a
      000A3B 78               [ 4] 2882 	ld	a, b
      000A3C 9A               [ 4] 2883 	sbc	a, d
      000A3D 32               [ 8] 2884 	ld	(hl-), a
      000A3E 73               [ 8] 2885 	ld	(hl), e
      000A3F E5               [16] 2886 	push	hl
      000A40 23               [ 8] 2887 	inc	hl
      000A41 CB 7E            [12] 2888 	bit	7, (hl)
      000A43 E1               [12] 2889 	pop	hl
      000A44 28 10            [12] 2890 	jr	Z, 00104$
                           000A46  2891 	C$Scroll.c$426$3_0$270	= .
                                   2892 	.globl	C$Scroll.c$426$3_0$270
                                   2893 ;C:/ZGB-2023.0/common/src/Scroll.c:426: ny = scroll_target->y - scroll_bottom_movement_limit;
      000A46 F8 04            [12] 2894 	ldhl	sp,#4
      000A48 2A               [ 8] 2895 	ld	a, (hl+)
      000A49 5F               [ 4] 2896 	ld	e, a
      000A4A 56               [ 8] 2897 	ld	d, (hl)
      000A4B 7B               [ 4] 2898 	ld	a, e
      000A4C 91               [ 4] 2899 	sub	a, c
      000A4D 5F               [ 4] 2900 	ld	e, a
      000A4E 7A               [ 4] 2901 	ld	a, d
      000A4F 98               [ 4] 2902 	sbc	a, b
      000A50 F8 01            [12] 2903 	ldhl	sp,	#1
      000A52 32               [ 8] 2904 	ld	(hl-), a
      000A53 73               [ 8] 2905 	ld	(hl), e
      000A54 18 29            [12] 2906 	jr	00105$
      000A56                       2907 00104$:
                           000A56  2908 	C$Scroll.c$427$2_0$269	= .
                                   2909 	.globl	C$Scroll.c$427$2_0$269
                                   2910 ;C:/ZGB-2023.0/common/src/Scroll.c:427: } else if(U_LESS_THAN(scroll_target->y - scroll_y, scroll_top_movement_limit)) {
      000A56 21r00r00         [12] 2911 	ld	hl, #_scroll_top_movement_limit
      000A59 4E               [ 8] 2912 	ld	c, (hl)
      000A5A 06 00            [ 8] 2913 	ld	b, #0x00
      000A5C F8 06            [12] 2914 	ldhl	sp,#6
      000A5E 2A               [ 8] 2915 	ld	a, (hl+)
      000A5F 5F               [ 4] 2916 	ld	e, a
      000A60 2A               [ 8] 2917 	ld	a, (hl+)
      000A61 23               [ 8] 2918 	inc	hl
      000A62 57               [ 4] 2919 	ld	d, a
      000A63 7B               [ 4] 2920 	ld	a, e
      000A64 91               [ 4] 2921 	sub	a, c
      000A65 5F               [ 4] 2922 	ld	e, a
      000A66 7A               [ 4] 2923 	ld	a, d
      000A67 98               [ 4] 2924 	sbc	a, b
      000A68 32               [ 8] 2925 	ld	(hl-), a
      000A69 73               [ 8] 2926 	ld	(hl), e
      000A6A E5               [16] 2927 	push	hl
      000A6B 23               [ 8] 2928 	inc	hl
      000A6C CB 7E            [12] 2929 	bit	7, (hl)
      000A6E E1               [12] 2930 	pop	hl
      000A6F 28 0E            [12] 2931 	jr	Z, 00105$
                           000A71  2932 	C$Scroll.c$428$3_0$271	= .
                                   2933 	.globl	C$Scroll.c$428$3_0$271
                                   2934 ;C:/ZGB-2023.0/common/src/Scroll.c:428: ny = scroll_target->y - scroll_top_movement_limit;
      000A71 F8 04            [12] 2935 	ldhl	sp,#4
      000A73 2A               [ 8] 2936 	ld	a, (hl+)
      000A74 5F               [ 4] 2937 	ld	e, a
      000A75 56               [ 8] 2938 	ld	d, (hl)
      000A76 7B               [ 4] 2939 	ld	a, e
      000A77 91               [ 4] 2940 	sub	a, c
      000A78 5F               [ 4] 2941 	ld	e, a
      000A79 7A               [ 4] 2942 	ld	a, d
      000A7A 98               [ 4] 2943 	sbc	a, b
      000A7B F8 01            [12] 2944 	ldhl	sp,	#1
      000A7D 32               [ 8] 2945 	ld	(hl-), a
      000A7E 73               [ 8] 2946 	ld	(hl), e
      000A7F                       2947 00105$:
                           000A7F  2948 	C$Scroll.c$431$2_0$269	= .
                                   2949 	.globl	C$Scroll.c$431$2_0$269
                                   2950 ;C:/ZGB-2023.0/common/src/Scroll.c:431: MoveScroll(scroll_target->x - (SCREENWIDTH >> 1), ny);
      000A7F F8 02            [12] 2951 	ldhl	sp,#2
      000A81 2A               [ 8] 2952 	ld	a, (hl+)
      000A82 5F               [ 4] 2953 	ld	e, a
      000A83 56               [ 8] 2954 	ld	d, (hl)
      000A84 21 0C 00         [12] 2955 	ld	hl, #0x000c
      000A87 19               [ 8] 2956 	add	hl, de
      000A88 2A               [ 8] 2957 	ld	a, (hl+)
      000A89 4F               [ 4] 2958 	ld	c, a
      000A8A 46               [ 8] 2959 	ld	b, (hl)
      000A8B 79               [ 4] 2960 	ld	a, c
      000A8C C6 B0            [ 8] 2961 	add	a, #0xb0
      000A8E 5F               [ 4] 2962 	ld	e, a
      000A8F 78               [ 4] 2963 	ld	a, b
      000A90 CE FF            [ 8] 2964 	adc	a, #0xff
      000A92 57               [ 4] 2965 	ld	d, a
      000A93 C1               [12] 2966 	pop	bc
      000A94 C5               [16] 2967 	push	bc
      000A95 CDr9Br0A         [24] 2968 	call	_MoveScroll
      000A98                       2969 00108$:
                           000A98  2970 	C$Scroll.c$433$1_0$268	= .
                                   2971 	.globl	C$Scroll.c$433$1_0$268
                                   2972 ;C:/ZGB-2023.0/common/src/Scroll.c:433: }
      000A98 E8 0A            [16] 2973 	add	sp, #10
                           000A9A  2974 	C$Scroll.c$433$1_0$268	= .
                                   2975 	.globl	C$Scroll.c$433$1_0$268
                           000A9A  2976 	XG$RefreshScroll$0$0	= .
                                   2977 	.globl	XG$RefreshScroll$0$0
      000A9A C9               [16] 2978 	ret
                           000A9B  2979 	G$MoveScroll$0$0	= .
                                   2980 	.globl	G$MoveScroll$0$0
                           000A9B  2981 	C$Scroll.c$435$1_0$273	= .
                                   2982 	.globl	C$Scroll.c$435$1_0$273
                                   2983 ;C:/ZGB-2023.0/common/src/Scroll.c:435: void MoveScroll(INT16 x, INT16 y) {
                                   2984 ;	---------------------------------
                                   2985 ; Function MoveScroll
                                   2986 ; ---------------------------------
      000A9B                       2987 _MoveScroll::
      000A9B E8 F6            [16] 2988 	add	sp, #-10
                           000A9D  2989 	C$Scroll.c$438$1_0$273	= .
                                   2990 	.globl	C$Scroll.c$438$1_0$273
                                   2991 ;C:/ZGB-2023.0/common/src/Scroll.c:438: PUSH_BANK(scroll_bank);
      000A9D C5               [16] 2992 	push	bc
      000A9E D5               [16] 2993 	push	de
      000A9F FAr08r03         [16] 2994 	ld	a, (#_scroll_bank)
      000AA2 F5               [16] 2995 	push	af
      000AA3 33               [ 8] 2996 	inc	sp
      000AA4 CDr00r00         [24] 2997 	call	_PushBank
      000AA7 33               [ 8] 2998 	inc	sp
      000AA8 D1               [12] 2999 	pop	de
      000AA9 C1               [12] 3000 	pop	bc
                           000AAA  3001 	C$Scroll.c$440$1_0$273	= .
                                   3002 	.globl	C$Scroll.c$440$1_0$273
                                   3003 ;C:/ZGB-2023.0/common/src/Scroll.c:440: current_column = scroll_x >> 3;
      000AAA FAr06r00         [16] 3004 	ld	a, (#_scroll_x)
      000AAD F8 00            [12] 3005 	ldhl	sp,	#0
      000AAF 77               [ 8] 3006 	ld	(hl), a
      000AB0 FAr07r00         [16] 3007 	ld	a, (#_scroll_x + 1)
      000AB3 F8 01            [12] 3008 	ldhl	sp,	#1
      000AB5 77               [ 8] 3009 	ld	(hl), a
      000AB6 CB 2E            [16] 3010 	sra	(hl)
      000AB8 2B               [ 8] 3011 	dec	hl
      000AB9 CB 1E            [16] 3012 	rr	(hl)
      000ABB 23               [ 8] 3013 	inc	hl
      000ABC CB 2E            [16] 3014 	sra	(hl)
      000ABE 2B               [ 8] 3015 	dec	hl
      000ABF CB 1E            [16] 3016 	rr	(hl)
      000AC1 23               [ 8] 3017 	inc	hl
      000AC2 CB 2E            [16] 3018 	sra	(hl)
      000AC4 2B               [ 8] 3019 	dec	hl
      000AC5 CB 1E            [16] 3020 	rr	(hl)
                           000AC7  3021 	C$Scroll.c$441$1_0$273	= .
                                   3022 	.globl	C$Scroll.c$441$1_0$273
                                   3023 ;C:/ZGB-2023.0/common/src/Scroll.c:441: current_row    = scroll_y >> 3;
      000AC7 FAr08r00         [16] 3024 	ld	a, (#_scroll_y)
      000ACA F8 02            [12] 3025 	ldhl	sp,	#2
      000ACC 77               [ 8] 3026 	ld	(hl), a
      000ACD FAr09r00         [16] 3027 	ld	a, (#_scroll_y + 1)
      000AD0 F8 03            [12] 3028 	ldhl	sp,	#3
      000AD2 77               [ 8] 3029 	ld	(hl), a
      000AD3 CB 2E            [16] 3030 	sra	(hl)
      000AD5 2B               [ 8] 3031 	dec	hl
      000AD6 CB 1E            [16] 3032 	rr	(hl)
      000AD8 23               [ 8] 3033 	inc	hl
      000AD9 CB 2E            [16] 3034 	sra	(hl)
      000ADB 2B               [ 8] 3035 	dec	hl
      000ADC CB 1E            [16] 3036 	rr	(hl)
      000ADE 23               [ 8] 3037 	inc	hl
      000ADF CB 2E            [16] 3038 	sra	(hl)
      000AE1 2B               [ 8] 3039 	dec	hl
      000AE2 CB 1E            [16] 3040 	rr	(hl)
                           000AE4  3041 	C$Scroll.c$443$1_0$273	= .
                                   3042 	.globl	C$Scroll.c$443$1_0$273
                                   3043 ;C:/ZGB-2023.0/common/src/Scroll.c:443: scroll_x = x;
      000AE4 21r06r00         [12] 3044 	ld	hl, #_scroll_x
      000AE7 7B               [ 4] 3045 	ld	a, e
      000AE8 22               [ 8] 3046 	ld	(hl+), a
      000AE9 72               [ 8] 3047 	ld	(hl), d
                           000AEA  3048 	C$Scroll.c$444$1_0$273	= .
                                   3049 	.globl	C$Scroll.c$444$1_0$273
                                   3050 ;C:/ZGB-2023.0/common/src/Scroll.c:444: scroll_y = y;
      000AEA 21r08r00         [12] 3051 	ld	hl, #_scroll_y
      000AED 79               [ 4] 3052 	ld	a, c
      000AEE 22               [ 8] 3053 	ld	(hl+), a
      000AEF 70               [ 8] 3054 	ld	(hl), b
                           000AF0  3055 	C$Scroll.c$445$1_0$273	= .
                                   3056 	.globl	C$Scroll.c$445$1_0$273
                                   3057 ;C:/ZGB-2023.0/common/src/Scroll.c:445: ClampScrollLimits();
      000AF0 CDrBDr04         [24] 3058 	call	_ClampScrollLimits
                           000AF3  3059 	C$Scroll.c$447$1_0$273	= .
                                   3060 	.globl	C$Scroll.c$447$1_0$273
                                   3061 ;C:/ZGB-2023.0/common/src/Scroll.c:447: new_column     = scroll_x >> 3;
      000AF3 21r06r00         [12] 3062 	ld	hl, #_scroll_x
      000AF6 2A               [ 8] 3063 	ld	a, (hl+)
      000AF7 4F               [ 4] 3064 	ld	c, a
      000AF8 46               [ 8] 3065 	ld	b, (hl)
      000AF9 CB 28            [ 8] 3066 	sra	b
      000AFB CB 19            [ 8] 3067 	rr	c
      000AFD CB 28            [ 8] 3068 	sra	b
      000AFF CB 19            [ 8] 3069 	rr	c
      000B01 CB 28            [ 8] 3070 	sra	b
      000B03 CB 19            [ 8] 3071 	rr	c
                           000B05  3072 	C$Scroll.c$448$1_0$273	= .
                                   3073 	.globl	C$Scroll.c$448$1_0$273
                                   3074 ;C:/ZGB-2023.0/common/src/Scroll.c:448: new_row        = scroll_y >> 3;
      000B05 FAr08r00         [16] 3075 	ld	a, (#_scroll_y)
      000B08 F8 04            [12] 3076 	ldhl	sp,	#4
      000B0A 77               [ 8] 3077 	ld	(hl), a
      000B0B FAr09r00         [16] 3078 	ld	a, (#_scroll_y + 1)
      000B0E F8 05            [12] 3079 	ldhl	sp,	#5
      000B10 77               [ 8] 3080 	ld	(hl), a
      000B11 CB 2E            [16] 3081 	sra	(hl)
      000B13 2B               [ 8] 3082 	dec	hl
      000B14 CB 1E            [16] 3083 	rr	(hl)
      000B16 23               [ 8] 3084 	inc	hl
      000B17 CB 2E            [16] 3085 	sra	(hl)
      000B19 2B               [ 8] 3086 	dec	hl
      000B1A CB 1E            [16] 3087 	rr	(hl)
      000B1C 23               [ 8] 3088 	inc	hl
      000B1D CB 2E            [16] 3089 	sra	(hl)
      000B1F 2B               [ 8] 3090 	dec	hl
      000B20 CB 1E            [16] 3091 	rr	(hl)
                           000B22  3092 	C$Scroll.c$452$1_0$273	= .
                                   3093 	.globl	C$Scroll.c$452$1_0$273
                                   3094 ;C:/ZGB-2023.0/common/src/Scroll.c:452: ScrollUpdateColumnWithDelay(new_column - SCREEN_PAD_LEFT + SCREEN_TILE_REFRES_W - 1, new_row - SCREEN_PAD_TOP);
      000B22 2A               [ 8] 3095 	ld	a, (hl+)
      000B23 5F               [ 4] 3096 	ld	e, a
      000B24 56               [ 8] 3097 	ld	d, (hl)
      000B25 21 01 00         [12] 3098 	ld	hl, #0x0001
      000B28 7B               [ 4] 3099 	ld	a, e
      000B29 95               [ 4] 3100 	sub	a, l
      000B2A 5F               [ 4] 3101 	ld	e, a
      000B2B 7A               [ 4] 3102 	ld	a, d
      000B2C 9C               [ 4] 3103 	sbc	a, h
      000B2D F8 07            [12] 3104 	ldhl	sp,	#7
      000B2F 32               [ 8] 3105 	ld	(hl-), a
      000B30 73               [ 8] 3106 	ld	(hl), e
                           000B31  3107 	C$Scroll.c$454$1_0$273	= .
                                   3108 	.globl	C$Scroll.c$454$1_0$273
                                   3109 ;C:/ZGB-2023.0/common/src/Scroll.c:454: ScrollUpdateColumnWithDelay(new_column - SCREEN_PAD_LEFT, new_row - SCREEN_PAD_TOP);
      000B31 11 01 00         [12] 3110 	ld	de, #0x0001
      000B34 79               [ 4] 3111 	ld	a, c
      000B35 93               [ 4] 3112 	sub	a, e
      000B36 5F               [ 4] 3113 	ld	e, a
      000B37 78               [ 4] 3114 	ld	a, b
      000B38 9A               [ 4] 3115 	sbc	a, d
      000B39 F8 09            [12] 3116 	ldhl	sp,	#9
      000B3B 32               [ 8] 3117 	ld	(hl-), a
      000B3C 73               [ 8] 3118 	ld	(hl), e
                           000B3D  3119 	C$Scroll.c$450$1_0$273	= .
                                   3120 	.globl	C$Scroll.c$450$1_0$273
                                   3121 ;C:/ZGB-2023.0/common/src/Scroll.c:450: if(current_column != new_column) {
      000B3D F8 00            [12] 3122 	ldhl	sp,	#0
      000B3F 7E               [ 8] 3123 	ld	a, (hl)
      000B40 91               [ 4] 3124 	sub	a, c
      000B41 20 05            [12] 3125 	jr	NZ, 00159$
      000B43 23               [ 8] 3126 	inc	hl
      000B44 7E               [ 8] 3127 	ld	a, (hl)
      000B45 90               [ 4] 3128 	sub	a, b
      000B46 28 36            [12] 3129 	jr	Z, 00105$
      000B48                       3130 00159$:
                           000B48  3131 	C$Scroll.c$451$2_0$274	= .
                                   3132 	.globl	C$Scroll.c$451$2_0$274
                                   3133 ;C:/ZGB-2023.0/common/src/Scroll.c:451: if(new_column > current_column) {
      000B48 F8 00            [12] 3134 	ldhl	sp,	#0
      000B4A 2A               [ 8] 3135 	ld	a, (hl+)
      000B4B 91               [ 4] 3136 	sub	a, c
      000B4C 7E               [ 8] 3137 	ld	a, (hl)
      000B4D 98               [ 4] 3138 	sbc	a, b
      000B4E 56               [ 8] 3139 	ld	d, (hl)
      000B4F 78               [ 4] 3140 	ld	a, b
      000B50 CB 7F            [ 8] 3141 	bit	7,a
      000B52 28 07            [12] 3142 	jr	Z, 00160$
      000B54 CB 7A            [ 8] 3143 	bit	7, d
      000B56 20 08            [12] 3144 	jr	NZ, 00161$
      000B58 BF               [ 4] 3145 	cp	a, a
      000B59 18 05            [12] 3146 	jr	00161$
      000B5B                       3147 00160$:
      000B5B CB 7A            [ 8] 3148 	bit	7, d
      000B5D 28 01            [12] 3149 	jr	Z, 00161$
      000B5F 37               [ 4] 3150 	scf
      000B60                       3151 00161$:
      000B60 30 10            [12] 3152 	jr	NC, 00102$
                           000B62  3153 	C$Scroll.c$452$3_0$275	= .
                                   3154 	.globl	C$Scroll.c$452$3_0$275
                                   3155 ;C:/ZGB-2023.0/common/src/Scroll.c:452: ScrollUpdateColumnWithDelay(new_column - SCREEN_PAD_LEFT + SCREEN_TILE_REFRES_W - 1, new_row - SCREEN_PAD_TOP);
      000B62 21 15 00         [12] 3156 	ld	hl, #0x0015
      000B65 09               [ 8] 3157 	add	hl, bc
      000B66 5D               [ 4] 3158 	ld	e, l
      000B67 54               [ 4] 3159 	ld	d, h
      000B68 F8 06            [12] 3160 	ldhl	sp,	#6
      000B6A 2A               [ 8] 3161 	ld	a, (hl+)
      000B6B 4F               [ 4] 3162 	ld	c, a
      000B6C 46               [ 8] 3163 	ld	b, (hl)
      000B6D CDrF1r08         [24] 3164 	call	_ScrollUpdateColumnWithDelay
      000B70 18 0C            [12] 3165 	jr	00105$
      000B72                       3166 00102$:
                           000B72  3167 	C$Scroll.c$454$3_0$276	= .
                                   3168 	.globl	C$Scroll.c$454$3_0$276
                                   3169 ;C:/ZGB-2023.0/common/src/Scroll.c:454: ScrollUpdateColumnWithDelay(new_column - SCREEN_PAD_LEFT, new_row - SCREEN_PAD_TOP);
      000B72 F8 06            [12] 3170 	ldhl	sp,	#6
      000B74 2A               [ 8] 3171 	ld	a, (hl+)
      000B75 4F               [ 4] 3172 	ld	c, a
      000B76 2A               [ 8] 3173 	ld	a, (hl+)
      000B77 47               [ 4] 3174 	ld	b, a
      000B78 2A               [ 8] 3175 	ld	a, (hl+)
      000B79 5F               [ 4] 3176 	ld	e, a
      000B7A 56               [ 8] 3177 	ld	d, (hl)
      000B7B CDrF1r08         [24] 3178 	call	_ScrollUpdateColumnWithDelay
      000B7E                       3179 00105$:
                           000B7E  3180 	C$Scroll.c$458$1_0$273	= .
                                   3181 	.globl	C$Scroll.c$458$1_0$273
                                   3182 ;C:/ZGB-2023.0/common/src/Scroll.c:458: if(current_row != new_row) {
      000B7E F8 02            [12] 3183 	ldhl	sp,	#2
      000B80 2A               [ 8] 3184 	ld	a, (hl+)
      000B81 23               [ 8] 3185 	inc	hl
      000B82 96               [ 8] 3186 	sub	a, (hl)
      000B83 20 06            [12] 3187 	jr	NZ, 00162$
      000B85 2B               [ 8] 3188 	dec	hl
      000B86 2A               [ 8] 3189 	ld	a, (hl+)
      000B87 23               [ 8] 3190 	inc	hl
      000B88 96               [ 8] 3191 	sub	a, (hl)
      000B89 28 41            [12] 3192 	jr	Z, 00110$
      000B8B                       3193 00162$:
                           000B8B  3194 	C$Scroll.c$459$2_0$277	= .
                                   3195 	.globl	C$Scroll.c$459$2_0$277
                                   3196 ;C:/ZGB-2023.0/common/src/Scroll.c:459: if(new_row > current_row) {
      000B8B F8 02            [12] 3197 	ldhl	sp,	#2
      000B8D 5D               [ 4] 3198 	ld	e, l
      000B8E 54               [ 4] 3199 	ld	d, h
      000B8F F8 04            [12] 3200 	ldhl	sp,	#4
      000B91 1A               [ 8] 3201 	ld	a, (de)
      000B92 13               [ 8] 3202 	inc	de
      000B93 96               [ 8] 3203 	sub	a, (hl)
      000B94 23               [ 8] 3204 	inc	hl
      000B95 1A               [ 8] 3205 	ld	a, (de)
      000B96 9E               [ 8] 3206 	sbc	a, (hl)
      000B97 1A               [ 8] 3207 	ld	a, (de)
      000B98 57               [ 4] 3208 	ld	d, a
      000B99 CB 7E            [12] 3209 	bit	7, (hl)
      000B9B 28 07            [12] 3210 	jr	Z, 00163$
      000B9D CB 7A            [ 8] 3211 	bit	7, d
      000B9F 20 08            [12] 3212 	jr	NZ, 00164$
      000BA1 BF               [ 4] 3213 	cp	a, a
      000BA2 18 05            [12] 3214 	jr	00164$
      000BA4                       3215 00163$:
      000BA4 CB 7A            [ 8] 3216 	bit	7, d
      000BA6 28 01            [12] 3217 	jr	Z, 00164$
      000BA8 37               [ 4] 3218 	scf
      000BA9                       3219 00164$:
      000BA9 30 15            [12] 3220 	jr	NC, 00107$
                           000BAB  3221 	C$Scroll.c$460$3_0$278	= .
                                   3222 	.globl	C$Scroll.c$460$3_0$278
                                   3223 ;C:/ZGB-2023.0/common/src/Scroll.c:460: ScrollUpdateRowWithDelay(new_column - SCREEN_PAD_LEFT, new_row - SCREEN_PAD_TOP + SCREEN_TILE_REFRES_H - 1);
      000BAB F8 04            [12] 3224 	ldhl	sp,#4
      000BAD 2A               [ 8] 3225 	ld	a, (hl+)
      000BAE 5F               [ 4] 3226 	ld	e, a
      000BAF 56               [ 8] 3227 	ld	d, (hl)
      000BB0 21 13 00         [12] 3228 	ld	hl, #0x0013
      000BB3 19               [ 8] 3229 	add	hl, de
      000BB4 4D               [ 4] 3230 	ld	c, l
      000BB5 44               [ 4] 3231 	ld	b, h
      000BB6 F8 08            [12] 3232 	ldhl	sp,	#8
      000BB8 2A               [ 8] 3233 	ld	a, (hl+)
      000BB9 5F               [ 4] 3234 	ld	e, a
      000BBA 56               [ 8] 3235 	ld	d, (hl)
      000BBB CDr98r07         [24] 3236 	call	_ScrollUpdateRowWithDelay
      000BBE 18 0C            [12] 3237 	jr	00110$
      000BC0                       3238 00107$:
                           000BC0  3239 	C$Scroll.c$462$3_0$279	= .
                                   3240 	.globl	C$Scroll.c$462$3_0$279
                                   3241 ;C:/ZGB-2023.0/common/src/Scroll.c:462: ScrollUpdateRowWithDelay(new_column - SCREEN_PAD_LEFT, new_row - SCREEN_PAD_TOP);
      000BC0 F8 06            [12] 3242 	ldhl	sp,	#6
      000BC2 2A               [ 8] 3243 	ld	a, (hl+)
      000BC3 4F               [ 4] 3244 	ld	c, a
      000BC4 2A               [ 8] 3245 	ld	a, (hl+)
      000BC5 47               [ 4] 3246 	ld	b, a
      000BC6 2A               [ 8] 3247 	ld	a, (hl+)
      000BC7 5F               [ 4] 3248 	ld	e, a
      000BC8 56               [ 8] 3249 	ld	d, (hl)
      000BC9 CDr98r07         [24] 3250 	call	_ScrollUpdateRowWithDelay
      000BCC                       3251 00110$:
                           000BCC  3252 	C$Scroll.c$466$1_0$273	= .
                                   3253 	.globl	C$Scroll.c$466$1_0$273
                                   3254 ;C:/ZGB-2023.0/common/src/Scroll.c:466: if(pending_w_i) {
      000BCC FAr12r03         [16] 3255 	ld	a, (#_pending_w_i)
      000BCF B7               [ 4] 3256 	or	a, a
      000BD0 28 03            [12] 3257 	jr	Z, 00112$
                           000BD2  3258 	C$Scroll.c$467$2_0$280	= .
                                   3259 	.globl	C$Scroll.c$467$2_0$280
                                   3260 ;C:/ZGB-2023.0/common/src/Scroll.c:467: ScrollUpdateRowR();
      000BD2 CDr3Dr07         [24] 3261 	call	_ScrollUpdateRowR
      000BD5                       3262 00112$:
                           000BD5  3263 	C$Scroll.c$469$1_0$273	= .
                                   3264 	.globl	C$Scroll.c$469$1_0$273
                                   3265 ;C:/ZGB-2023.0/common/src/Scroll.c:469: if(pending_h_i) {
      000BD5 FAr0Dr03         [16] 3266 	ld	a, (#_pending_h_i)
      000BD8 B7               [ 4] 3267 	or	a, a
      000BD9 28 03            [12] 3268 	jr	Z, 00114$
                           000BDB  3269 	C$Scroll.c$470$2_0$281	= .
                                   3270 	.globl	C$Scroll.c$470$2_0$281
                                   3271 ;C:/ZGB-2023.0/common/src/Scroll.c:470: ScrollUpdateColumnR();
      000BDB CDr90r08         [24] 3272 	call	_ScrollUpdateColumnR
      000BDE                       3273 00114$:
                           000BDE  3274 	C$Scroll.c$472$1_0$273	= .
                                   3275 	.globl	C$Scroll.c$472$1_0$273
                                   3276 ;C:/ZGB-2023.0/common/src/Scroll.c:472: POP_BANK;
      000BDE CDr00r00         [24] 3277 	call	_PopBank
                           000BE1  3278 	C$Scroll.c$473$1_0$273	= .
                                   3279 	.globl	C$Scroll.c$473$1_0$273
                                   3280 ;C:/ZGB-2023.0/common/src/Scroll.c:473: }
      000BE1 E8 0A            [16] 3281 	add	sp, #10
                           000BE3  3282 	C$Scroll.c$473$1_0$273	= .
                                   3283 	.globl	C$Scroll.c$473$1_0$273
                           000BE3  3284 	XG$MoveScroll$0$0	= .
                                   3285 	.globl	XG$MoveScroll$0$0
      000BE3 C9               [16] 3286 	ret
                           000BE4  3287 	G$GetScrollTilePtr$0$0	= .
                                   3288 	.globl	G$GetScrollTilePtr$0$0
                           000BE4  3289 	C$Scroll.c$475$1_0$283	= .
                                   3290 	.globl	C$Scroll.c$475$1_0$283
                                   3291 ;C:/ZGB-2023.0/common/src/Scroll.c:475: UINT8* GetScrollTilePtr(UINT16 x, UINT16 y) {
                                   3292 ;	---------------------------------
                                   3293 ; Function GetScrollTilePtr
                                   3294 ; ---------------------------------
      000BE4                       3295 _GetScrollTilePtr::
                           000BE4  3296 	C$Scroll.c$479$1_0$283	= .
                                   3297 	.globl	C$Scroll.c$479$1_0$283
                                   3298 ;C:/ZGB-2023.0/common/src/Scroll.c:479: return scroll_map + (scroll_tiles_w * y + x); //TODO: fix this mult!!
      000BE4 D5               [16] 3299 	push	de
      000BE5 21r04r00         [12] 3300 	ld	hl, #_scroll_tiles_w
      000BE8 2A               [ 8] 3301 	ld	a, (hl+)
      000BE9 5F               [ 4] 3302 	ld	e, a
      000BEA 56               [ 8] 3303 	ld	d, (hl)
      000BEB CDr00r00         [24] 3304 	call	__mulint
      000BEE 69               [ 4] 3305 	ld	l, c
                                   3306 ;	spillPairReg hl
                                   3307 ;	spillPairReg hl
      000BEF 60               [ 4] 3308 	ld	h, b
                                   3309 ;	spillPairReg hl
                                   3310 ;	spillPairReg hl
      000BF0 D1               [12] 3311 	pop	de
      000BF1 19               [ 8] 3312 	add	hl, de
      000BF2 4D               [ 4] 3313 	ld	c, l
      000BF3 44               [ 4] 3314 	ld	b, h
      000BF4 79               [ 4] 3315 	ld	a, c
      000BF5 21r02r00         [12] 3316 	ld	hl, #_scroll_map
      000BF8 86               [ 8] 3317 	add	a, (hl)
      000BF9 23               [ 8] 3318 	inc	hl
      000BFA 4F               [ 4] 3319 	ld	c, a
      000BFB 78               [ 4] 3320 	ld	a, b
      000BFC 8E               [ 8] 3321 	adc	a, (hl)
      000BFD 47               [ 4] 3322 	ld	b, a
                           000BFE  3323 	C$Scroll.c$480$1_0$283	= .
                                   3324 	.globl	C$Scroll.c$480$1_0$283
                                   3325 ;C:/ZGB-2023.0/common/src/Scroll.c:480: }
                           000BFE  3326 	C$Scroll.c$480$1_0$283	= .
                                   3327 	.globl	C$Scroll.c$480$1_0$283
                           000BFE  3328 	XG$GetScrollTilePtr$0$0	= .
                                   3329 	.globl	XG$GetScrollTilePtr$0$0
      000BFE C9               [16] 3330 	ret
                           000BFF  3331 	G$GetScrollTile$0$0	= .
                                   3332 	.globl	G$GetScrollTile$0$0
                           000BFF  3333 	C$Scroll.c$482$1_0$285	= .
                                   3334 	.globl	C$Scroll.c$482$1_0$285
                                   3335 ;C:/ZGB-2023.0/common/src/Scroll.c:482: UINT8 GetScrollTile(UINT16 x, UINT16 y) {
                                   3336 ;	---------------------------------
                                   3337 ; Function GetScrollTile
                                   3338 ; ---------------------------------
      000BFF                       3339 _GetScrollTile::
                           000BFF  3340 	C$Scroll.c$484$1_0$285	= .
                                   3341 	.globl	C$Scroll.c$484$1_0$285
                                   3342 ;C:/ZGB-2023.0/common/src/Scroll.c:484: PUSH_BANK(scroll_bank);
      000BFF C5               [16] 3343 	push	bc
      000C00 D5               [16] 3344 	push	de
      000C01 FAr08r03         [16] 3345 	ld	a, (#_scroll_bank)
      000C04 F5               [16] 3346 	push	af
      000C05 33               [ 8] 3347 	inc	sp
      000C06 CDr00r00         [24] 3348 	call	_PushBank
      000C09 33               [ 8] 3349 	inc	sp
      000C0A D1               [12] 3350 	pop	de
      000C0B C1               [12] 3351 	pop	bc
                           000C0C  3352 	C$Scroll.c$485$1_0$285	= .
                                   3353 	.globl	C$Scroll.c$485$1_0$285
                                   3354 ;C:/ZGB-2023.0/common/src/Scroll.c:485: ret = *GetScrollTilePtr(x, y);
      000C0C CDrE4r0B         [24] 3355 	call	_GetScrollTilePtr
      000C0F 0A               [ 8] 3356 	ld	a, (bc)
      000C10 4F               [ 4] 3357 	ld	c, a
                           000C11  3358 	C$Scroll.c$486$1_0$285	= .
                                   3359 	.globl	C$Scroll.c$486$1_0$285
                                   3360 ;C:/ZGB-2023.0/common/src/Scroll.c:486: POP_BANK;
      000C11 C5               [16] 3361 	push	bc
      000C12 CDr00r00         [24] 3362 	call	_PopBank
      000C15 C1               [12] 3363 	pop	bc
                           000C16  3364 	C$Scroll.c$487$1_0$285	= .
                                   3365 	.globl	C$Scroll.c$487$1_0$285
                                   3366 ;C:/ZGB-2023.0/common/src/Scroll.c:487: return ret;
      000C16 79               [ 4] 3367 	ld	a, c
                           000C17  3368 	C$Scroll.c$488$1_0$285	= .
                                   3369 	.globl	C$Scroll.c$488$1_0$285
                                   3370 ;C:/ZGB-2023.0/common/src/Scroll.c:488: }
                           000C17  3371 	C$Scroll.c$488$1_0$285	= .
                                   3372 	.globl	C$Scroll.c$488$1_0$285
                           000C17  3373 	XG$GetScrollTile$0$0	= .
                                   3374 	.globl	XG$GetScrollTile$0$0
      000C17 C9               [16] 3375 	ret
                           000C18  3376 	G$GetMapSize$0$0	= .
                                   3377 	.globl	G$GetMapSize$0$0
                           000C18  3378 	C$Scroll.c$490$1_0$287	= .
                                   3379 	.globl	C$Scroll.c$490$1_0$287
                                   3380 ;C:/ZGB-2023.0/common/src/Scroll.c:490: void GetMapSize(UINT8 map_bank, const struct MapInfo* map, UINT8* tiles_w, UINT8* tiles_h)
                                   3381 ;	---------------------------------
                                   3382 ; Function GetMapSize
                                   3383 ; ---------------------------------
      000C18                       3384 _GetMapSize::
                           000C18  3385 	C$Scroll.c$492$1_0$287	= .
                                   3386 	.globl	C$Scroll.c$492$1_0$287
                                   3387 ;C:/ZGB-2023.0/common/src/Scroll.c:492: PUSH_BANK(map_bank);
      000C18 D5               [16] 3388 	push	de
      000C19 F5               [16] 3389 	push	af
      000C1A 33               [ 8] 3390 	inc	sp
      000C1B CDr00r00         [24] 3391 	call	_PushBank
      000C1E 33               [ 8] 3392 	inc	sp
      000C1F D1               [12] 3393 	pop	de
                           000C20  3394 	C$Scroll.c$493$1_0$287	= .
                                   3395 	.globl	C$Scroll.c$493$1_0$287
                                   3396 ;C:/ZGB-2023.0/common/src/Scroll.c:493: if(tiles_w) *tiles_w = map->width;
      000C20 F8 03            [12] 3397 	ldhl	sp,	#3
      000C22 3A               [ 8] 3398 	ld	a, (hl-)
      000C23 B6               [ 8] 3399 	or	a, (hl)
      000C24 28 09            [12] 3400 	jr	Z, 00102$
      000C26 2A               [ 8] 3401 	ld	a, (hl+)
      000C27 4F               [ 4] 3402 	ld	c, a
      000C28 46               [ 8] 3403 	ld	b, (hl)
      000C29 6B               [ 4] 3404 	ld	l, e
                                   3405 ;	spillPairReg hl
                                   3406 ;	spillPairReg hl
      000C2A 62               [ 4] 3407 	ld	h, d
                                   3408 ;	spillPairReg hl
                                   3409 ;	spillPairReg hl
      000C2B 23               [ 8] 3410 	inc	hl
      000C2C 23               [ 8] 3411 	inc	hl
      000C2D 7E               [ 8] 3412 	ld	a, (hl)
      000C2E 02               [ 8] 3413 	ld	(bc), a
      000C2F                       3414 00102$:
                           000C2F  3415 	C$Scroll.c$494$1_0$287	= .
                                   3416 	.globl	C$Scroll.c$494$1_0$287
                                   3417 ;C:/ZGB-2023.0/common/src/Scroll.c:494: if(tiles_h) *tiles_h = map->height;
      000C2F F8 05            [12] 3418 	ldhl	sp,	#5
      000C31 3A               [ 8] 3419 	ld	a, (hl-)
      000C32 B6               [ 8] 3420 	or	a, (hl)
      000C33 28 08            [12] 3421 	jr	Z, 00104$
      000C35 2A               [ 8] 3422 	ld	a, (hl+)
      000C36 4F               [ 4] 3423 	ld	c, a
      000C37 46               [ 8] 3424 	ld	b, (hl)
      000C38 13               [ 8] 3425 	inc	de
      000C39 13               [ 8] 3426 	inc	de
      000C3A 13               [ 8] 3427 	inc	de
      000C3B 1A               [ 8] 3428 	ld	a, (de)
      000C3C 02               [ 8] 3429 	ld	(bc), a
      000C3D                       3430 00104$:
                           000C3D  3431 	C$Scroll.c$495$1_0$287	= .
                                   3432 	.globl	C$Scroll.c$495$1_0$287
                                   3433 ;C:/ZGB-2023.0/common/src/Scroll.c:495: POP_BANK;
      000C3D CDr00r00         [24] 3434 	call	_PopBank
                           000C40  3435 	C$Scroll.c$496$1_0$287	= .
                                   3436 	.globl	C$Scroll.c$496$1_0$287
                                   3437 ;C:/ZGB-2023.0/common/src/Scroll.c:496: }
      000C40 E1               [12] 3438 	pop	hl
      000C41 E8 04            [16] 3439 	add	sp, #4
      000C43 E9               [ 4] 3440 	jp	(hl)
                           000C44  3441 	G$ScrollFindTile$0$0	= .
                                   3442 	.globl	G$ScrollFindTile$0$0
                           000C44  3443 	C$Scroll.c$498$1_0$289	= .
                                   3444 	.globl	C$Scroll.c$498$1_0$289
                                   3445 ;C:/ZGB-2023.0/common/src/Scroll.c:498: UINT8 ScrollFindTile(UINT8 map_bank, const struct MapInfo* map, UINT8 tile,
                                   3446 ;	---------------------------------
                                   3447 ; Function ScrollFindTile
                                   3448 ; ---------------------------------
      000C44                       3449 _ScrollFindTile::
      000C44 E8 F0            [16] 3450 	add	sp, #-16
      000C46 F8 0C            [12] 3451 	ldhl	sp,	#12
      000C48 73               [ 8] 3452 	ld	(hl), e
      000C49 23               [ 8] 3453 	inc	hl
      000C4A 72               [ 8] 3454 	ld	(hl), d
                           000C4B  3455 	C$Scroll.c$502$2_0$289	= .
                                   3456 	.globl	C$Scroll.c$502$2_0$289
                                   3457 ;C:/ZGB-2023.0/common/src/Scroll.c:502: UINT16 yt = 0;
      000C4B F8 00            [12] 3458 	ldhl	sp,	#0
      000C4D 36 00            [12] 3459 	ld	(hl), #0x00
      000C4F 23               [ 8] 3460 	inc	hl
      000C50 36 00            [12] 3461 	ld	(hl), #0x00
                           000C52  3462 	C$Scroll.c$503$2_0$289	= .
                                   3463 	.globl	C$Scroll.c$503$2_0$289
                                   3464 ;C:/ZGB-2023.0/common/src/Scroll.c:503: UINT8 found = 1;
      000C52 23               [ 8] 3465 	inc	hl
      000C53 36 01            [12] 3466 	ld	(hl), #0x01
                           000C55  3467 	C$Scroll.c$505$1_0$289	= .
                                   3468 	.globl	C$Scroll.c$505$1_0$289
                                   3469 ;C:/ZGB-2023.0/common/src/Scroll.c:505: PUSH_BANK(map_bank);
      000C55 F5               [16] 3470 	push	af
      000C56 33               [ 8] 3471 	inc	sp
      000C57 CDr00r00         [24] 3472 	call	_PushBank
      000C5A 33               [ 8] 3473 	inc	sp
                           000C5B  3474 	C$Scroll.c$506$2_0$290	= .
                                   3475 	.globl	C$Scroll.c$506$2_0$290
                                   3476 ;C:/ZGB-2023.0/common/src/Scroll.c:506: for(xt = start_x; xt != start_x + w; ++ xt) {
      000C5B F8 13            [12] 3477 	ldhl	sp,	#19
      000C5D 7E               [ 8] 3478 	ld	a, (hl)
      000C5E F8 03            [12] 3479 	ldhl	sp,	#3
      000C60 22               [ 8] 3480 	ld	(hl+), a
      000C61 36 00            [12] 3481 	ld	(hl), #0x00
      000C63 F8 0C            [12] 3482 	ldhl	sp,#12
      000C65 2A               [ 8] 3483 	ld	a, (hl+)
      000C66 5F               [ 4] 3484 	ld	e, a
      000C67 56               [ 8] 3485 	ld	d, (hl)
      000C68 21 02 00         [12] 3486 	ld	hl, #0x0002
      000C6B 19               [ 8] 3487 	add	hl, de
      000C6C E5               [16] 3488 	push	hl
      000C6D 7D               [ 4] 3489 	ld	a, l
      000C6E F8 07            [12] 3490 	ldhl	sp,	#7
      000C70 77               [ 8] 3491 	ld	(hl), a
      000C71 E1               [12] 3492 	pop	hl
      000C72 7C               [ 4] 3493 	ld	a, h
      000C73 F8 06            [12] 3494 	ldhl	sp,	#6
      000C75 77               [ 8] 3495 	ld	(hl), a
      000C76 F8 03            [12] 3496 	ldhl	sp,	#3
      000C78 7E               [ 8] 3497 	ld	a, (hl)
      000C79 F8 0E            [12] 3498 	ldhl	sp,	#14
      000C7B 22               [ 8] 3499 	ld	(hl+), a
      000C7C 36 00            [12] 3500 	ld	(hl), #0x00
      000C7E                       3501 00110$:
      000C7E F8 13            [12] 3502 	ldhl	sp,	#19
      000C80 2A               [ 8] 3503 	ld	a, (hl+)
      000C81 23               [ 8] 3504 	inc	hl
      000C82 06 00            [ 8] 3505 	ld	b, #0x00
      000C84 5E               [ 8] 3506 	ld	e, (hl)
      000C85 83               [ 4] 3507 	add	a, e
      000C86 4F               [ 4] 3508 	ld	c, a
      000C87 30 01            [12] 3509 	jr	NC, 00149$
      000C89 04               [ 4] 3510 	inc	b
      000C8A                       3511 00149$:
      000C8A F8 0E            [12] 3512 	ldhl	sp,	#14
      000C8C 7E               [ 8] 3513 	ld	a, (hl)
      000C8D 91               [ 4] 3514 	sub	a, c
      000C8E 20 06            [12] 3515 	jr	NZ, 00150$
      000C90 23               [ 8] 3516 	inc	hl
      000C91 7E               [ 8] 3517 	ld	a, (hl)
      000C92 90               [ 4] 3518 	sub	a, b
      000C93 CAr16r0D         [16] 3519 	jp	Z,00104$
      000C96                       3520 00150$:
                           000C96  3521 	C$Scroll.c$507$4_0$292	= .
                                   3522 	.globl	C$Scroll.c$507$4_0$292
                                   3523 ;C:/ZGB-2023.0/common/src/Scroll.c:507: for(yt = start_y; yt != start_y + h; ++ yt) {
      000C96 F8 14            [12] 3524 	ldhl	sp,	#20
      000C98 7E               [ 8] 3525 	ld	a, (hl)
      000C99 F8 00            [12] 3526 	ldhl	sp,	#0
      000C9B 22               [ 8] 3527 	ld	(hl+), a
      000C9C 36 00            [12] 3528 	ld	(hl), #0x00
      000C9E F8 0C            [12] 3529 	ldhl	sp,#12
      000CA0 2A               [ 8] 3530 	ld	a, (hl+)
      000CA1 5F               [ 4] 3531 	ld	e, a
      000CA2 56               [ 8] 3532 	ld	d, (hl)
      000CA3 1A               [ 8] 3533 	ld	a, (de)
      000CA4 F8 07            [12] 3534 	ldhl	sp,	#7
      000CA6 22               [ 8] 3535 	ld	(hl+), a
      000CA7 13               [ 8] 3536 	inc	de
      000CA8 1A               [ 8] 3537 	ld	a, (de)
      000CA9 32               [ 8] 3538 	ld	(hl-), a
      000CAA 2B               [ 8] 3539 	dec	hl
      000CAB 2B               [ 8] 3540 	dec	hl
      000CAC 2A               [ 8] 3541 	ld	a, (hl+)
      000CAD 5F               [ 4] 3542 	ld	e, a
      000CAE 56               [ 8] 3543 	ld	d, (hl)
      000CAF 1A               [ 8] 3544 	ld	a, (de)
      000CB0 F8 09            [12] 3545 	ldhl	sp,	#9
      000CB2 77               [ 8] 3546 	ld	(hl), a
      000CB3 D1               [12] 3547 	pop	de
      000CB4 D5               [16] 3548 	push	de
      000CB5                       3549 00107$:
      000CB5 F8 14            [12] 3550 	ldhl	sp,	#20
      000CB7 7E               [ 8] 3551 	ld	a, (hl)
      000CB8 F8 0A            [12] 3552 	ldhl	sp,	#10
      000CBA 22               [ 8] 3553 	ld	(hl+), a
      000CBB 36 00            [12] 3554 	ld	(hl), #0x00
      000CBD F8 16            [12] 3555 	ldhl	sp,	#22
      000CBF 4E               [ 8] 3556 	ld	c, (hl)
      000CC0 06 00            [ 8] 3557 	ld	b, #0x00
      000CC2 F8 0A            [12] 3558 	ldhl	sp,	#10
      000CC4 2A               [ 8] 3559 	ld	a,	(hl+)
      000CC5 66               [ 8] 3560 	ld	h, (hl)
      000CC6 6F               [ 4] 3561 	ld	l, a
      000CC7 09               [ 8] 3562 	add	hl, bc
      000CC8 4D               [ 4] 3563 	ld	c, l
      000CC9 44               [ 4] 3564 	ld	b, h
      000CCA 79               [ 4] 3565 	ld	a, c
      000CCB 93               [ 4] 3566 	sub	a, e
      000CCC 20 04            [12] 3567 	jr	NZ, 00151$
      000CCE 78               [ 4] 3568 	ld	a, b
      000CCF 92               [ 4] 3569 	sub	a, d
      000CD0 28 2E            [12] 3570 	jr	Z, 00111$
      000CD2                       3571 00151$:
                           000CD2  3572 	C$Scroll.c$508$5_0$293	= .
                                   3573 	.globl	C$Scroll.c$508$5_0$293
                                   3574 ;C:/ZGB-2023.0/common/src/Scroll.c:508: if(map->data[map->width * yt + xt] == (UINT16)tile) { //That cast over there is mandatory and gave me a lot of headaches
      000CD2 F8 09            [12] 3575 	ldhl	sp,	#9
      000CD4 2A               [ 8] 3576 	ld	a, (hl+)
      000CD5 22               [ 8] 3577 	ld	(hl+), a
      000CD6 AF               [ 4] 3578 	xor	a, a
      000CD7 32               [ 8] 3579 	ld	(hl-), a
      000CD8 D5               [16] 3580 	push	de
      000CD9 4B               [ 4] 3581 	ld	c, e
      000CDA 42               [ 4] 3582 	ld	b, d
      000CDB 5E               [ 8] 3583 	ld	e, (hl)
      000CDC 16 00            [ 8] 3584 	ld	d, #0x00
      000CDE CDr00r00         [24] 3585 	call	__mulint
      000CE1 D1               [12] 3586 	pop	de
      000CE2 F8 0E            [12] 3587 	ldhl	sp,	#14
      000CE4 2A               [ 8] 3588 	ld	a,	(hl+)
      000CE5 66               [ 8] 3589 	ld	h, (hl)
      000CE6 6F               [ 4] 3590 	ld	l, a
      000CE7 09               [ 8] 3591 	add	hl, bc
      000CE8 4D               [ 4] 3592 	ld	c, l
      000CE9 44               [ 4] 3593 	ld	b, h
      000CEA F8 07            [12] 3594 	ldhl	sp,	#7
      000CEC 2A               [ 8] 3595 	ld	a,	(hl+)
      000CED 66               [ 8] 3596 	ld	h, (hl)
      000CEE 6F               [ 4] 3597 	ld	l, a
      000CEF 09               [ 8] 3598 	add	hl, bc
      000CF0 4D               [ 4] 3599 	ld	c, l
      000CF1 44               [ 4] 3600 	ld	b, h
      000CF2 0A               [ 8] 3601 	ld	a, (bc)
      000CF3 4F               [ 4] 3602 	ld	c, a
      000CF4 F8 12            [12] 3603 	ldhl	sp,	#18
      000CF6 7E               [ 8] 3604 	ld	a, (hl)
      000CF7 91               [ 4] 3605 	sub	a, c
      000CF8 28 20            [12] 3606 	jr	Z, 00105$
                           000CFA  3607 	C$Scroll.c$507$4_0$292	= .
                                   3608 	.globl	C$Scroll.c$507$4_0$292
                                   3609 ;C:/ZGB-2023.0/common/src/Scroll.c:507: for(yt = start_y; yt != start_y + h; ++ yt) {
      000CFA 13               [ 8] 3610 	inc	de
      000CFB 33               [ 8] 3611 	inc	sp
      000CFC 33               [ 8] 3612 	inc	sp
      000CFD D5               [16] 3613 	push	de
      000CFE 18 B5            [12] 3614 	jr	00107$
      000D00                       3615 00111$:
                           000D00  3616 	C$Scroll.c$506$2_0$290	= .
                                   3617 	.globl	C$Scroll.c$506$2_0$290
                                   3618 ;C:/ZGB-2023.0/common/src/Scroll.c:506: for(xt = start_x; xt != start_x + w; ++ xt) {
      000D00 F8 0E            [12] 3619 	ldhl	sp,	#14
      000D02 34               [12] 3620 	inc	(hl)
      000D03 20 02            [12] 3621 	jr	NZ, 00153$
      000D05 23               [ 8] 3622 	inc	hl
      000D06 34               [12] 3623 	inc	(hl)
      000D07                       3624 00153$:
      000D07 F8 0E            [12] 3625 	ldhl	sp,	#14
      000D09 7E               [ 8] 3626 	ld	a, (hl)
      000D0A F8 03            [12] 3627 	ldhl	sp,	#3
      000D0C 77               [ 8] 3628 	ld	(hl), a
      000D0D F8 0F            [12] 3629 	ldhl	sp,	#15
      000D0F 7E               [ 8] 3630 	ld	a, (hl)
      000D10 F8 04            [12] 3631 	ldhl	sp,	#4
      000D12 77               [ 8] 3632 	ld	(hl), a
      000D13 C3r7Er0C         [16] 3633 	jp	00110$
      000D16                       3634 00104$:
                           000D16  3635 	C$Scroll.c$513$1_0$289	= .
                                   3636 	.globl	C$Scroll.c$513$1_0$289
                                   3637 ;C:/ZGB-2023.0/common/src/Scroll.c:513: found = 0;
      000D16 F8 02            [12] 3638 	ldhl	sp,	#2
      000D18 36 00            [12] 3639 	ld	(hl), #0x00
                           000D1A  3640 	C$Scroll.c$515$1_0$289	= .
                                   3641 	.globl	C$Scroll.c$515$1_0$289
                                   3642 ;C:/ZGB-2023.0/common/src/Scroll.c:515: done:
      000D1A                       3643 00105$:
                           000D1A  3644 	C$Scroll.c$516$1_0$289	= .
                                   3645 	.globl	C$Scroll.c$516$1_0$289
                                   3646 ;C:/ZGB-2023.0/common/src/Scroll.c:516: POP_BANK;
      000D1A CDr00r00         [24] 3647 	call	_PopBank
                           000D1D  3648 	C$Scroll.c$517$1_0$289	= .
                                   3649 	.globl	C$Scroll.c$517$1_0$289
                                   3650 ;C:/ZGB-2023.0/common/src/Scroll.c:517: *x = xt;
      000D1D F8 17            [12] 3651 	ldhl	sp,	#23
      000D1F 2A               [ 8] 3652 	ld	a, (hl+)
      000D20 4F               [ 4] 3653 	ld	c, a
      000D21 46               [ 8] 3654 	ld	b, (hl)
      000D22 F8 03            [12] 3655 	ldhl	sp,	#3
      000D24 2A               [ 8] 3656 	ld	a, (hl+)
      000D25 02               [ 8] 3657 	ld	(bc), a
      000D26 03               [ 8] 3658 	inc	bc
      000D27 7E               [ 8] 3659 	ld	a, (hl)
      000D28 02               [ 8] 3660 	ld	(bc), a
                           000D29  3661 	C$Scroll.c$518$1_0$289	= .
                                   3662 	.globl	C$Scroll.c$518$1_0$289
                                   3663 ;C:/ZGB-2023.0/common/src/Scroll.c:518: *y = yt;
      000D29 F8 19            [12] 3664 	ldhl	sp,	#25
      000D2B 7E               [ 8] 3665 	ld	a, (hl)
      000D2C F8 0E            [12] 3666 	ldhl	sp,	#14
      000D2E 77               [ 8] 3667 	ld	(hl), a
      000D2F F8 1A            [12] 3668 	ldhl	sp,	#26
      000D31 7E               [ 8] 3669 	ld	a, (hl)
      000D32 F8 0F            [12] 3670 	ldhl	sp,	#15
      000D34 32               [ 8] 3671 	ld	(hl-), a
      000D35 2A               [ 8] 3672 	ld	a, (hl+)
      000D36 5F               [ 4] 3673 	ld	e, a
      000D37 56               [ 8] 3674 	ld	d, (hl)
      000D38 F8 00            [12] 3675 	ldhl	sp,	#0
      000D3A 2A               [ 8] 3676 	ld	a, (hl+)
      000D3B 12               [ 8] 3677 	ld	(de), a
      000D3C 13               [ 8] 3678 	inc	de
                           000D3D  3679 	C$Scroll.c$520$1_0$289	= .
                                   3680 	.globl	C$Scroll.c$520$1_0$289
                                   3681 ;C:/ZGB-2023.0/common/src/Scroll.c:520: return found;
      000D3D 2A               [ 8] 3682 	ld	a, (hl+)
      000D3E 12               [ 8] 3683 	ld	(de), a
      000D3F 7E               [ 8] 3684 	ld	a, (hl)
                           000D40  3685 	C$Scroll.c$521$1_0$289	= .
                                   3686 	.globl	C$Scroll.c$521$1_0$289
                                   3687 ;C:/ZGB-2023.0/common/src/Scroll.c:521: }
      000D40 E8 10            [16] 3688 	add	sp, #16
      000D42 E1               [12] 3689 	pop	hl
      000D43 E8 09            [16] 3690 	add	sp, #9
      000D45 E9               [ 4] 3691 	jp	(hl)
                                   3692 	.area _CODE
                                   3693 	.area _INITIALIZER
                           000000  3694 FScroll$__xinit_scroll_top_movement_limit$0_0$0 == .
      000000                       3695 __xinit__scroll_top_movement_limit:
      000000 1E                    3696 	.db #0x1e	; 30
                           000001  3697 FScroll$__xinit_scroll_bottom_movement_limit$0_0$0 == .
      000001                       3698 __xinit__scroll_bottom_movement_limit:
      000001 64                    3699 	.db #0x64	; 100	'd'
                           000002  3700 FScroll$__xinit_scroll_map$0_0$0 == .
      000002                       3701 __xinit__scroll_map:
      000002 00 00                 3702 	.dw #0x0000
                           000004  3703 FScroll$__xinit_scroll_cmap$0_0$0 == .
      000004                       3704 __xinit__scroll_cmap:
      000004 00 00                 3705 	.dw #0x0000
                           000006  3706 FScroll$__xinit_scroll_x$0_0$0 == .
      000006                       3707 __xinit__scroll_x:
      000006 00 00                 3708 	.dw #0x0000
                           000008  3709 FScroll$__xinit_scroll_y$0_0$0 == .
      000008                       3710 __xinit__scroll_y:
      000008 00 00                 3711 	.dw #0x0000
                           00000A  3712 FScroll$__xinit_scroll_x_vblank$0_0$0 == .
      00000A                       3713 __xinit__scroll_x_vblank:
      00000A 00                    3714 	.db #0x00	; 0
                           00000B  3715 FScroll$__xinit_scroll_y_vblank$0_0$0 == .
      00000B                       3716 __xinit__scroll_y_vblank:
      00000B 00                    3717 	.db #0x00	; 0
                           00000C  3718 FScroll$__xinit_scroll_target$0_0$0 == .
      00000C                       3719 __xinit__scroll_target:
      00000C 00 00                 3720 	.dw #0x0000
                           00000E  3721 FScroll$__xinit_scroll_offset_x$0_0$0 == .
      00000E                       3722 __xinit__scroll_offset_x:
      00000E 00                    3723 	.db #0x00	; 0
                           00000F  3724 FScroll$__xinit_scroll_offset_y$0_0$0 == .
      00000F                       3725 __xinit__scroll_offset_y:
      00000F 00                    3726 	.db #0x00	; 0
                           000010  3727 FScroll$__xinit_pending_h_map$0_0$0 == .
      000010                       3728 __xinit__pending_h_map:
      000010 00 00                 3729 	.dw #0x0000
                           000012  3730 FScroll$__xinit_pending_w_map$0_0$0 == .
      000012                       3731 __xinit__pending_w_map:
      000012 00 00                 3732 	.dw #0x0000
                           000014  3733 FScroll$__xinit_pending_h_cmap$0_0$0 == .
      000014                       3734 __xinit__pending_h_cmap:
      000014 00 00                 3735 	.dw #0x0000
                           000016  3736 FScroll$__xinit_pending_w_cmap$0_0$0 == .
      000016                       3737 __xinit__pending_w_cmap:
      000016 00 00                 3738 	.dw #0x0000
                           000018  3739 FScroll$__xinit_last_tile_loaded$0_0$0 == .
      000018                       3740 __xinit__last_tile_loaded:
      000018 00                    3741 	.db #0x00	; 0
                           000019  3742 FScroll$__xinit_last_bg_pal_loaded$0_0$0 == .
      000019                       3743 __xinit__last_bg_pal_loaded:
      000019 00                    3744 	.db #0x00	; 0
                           00001A  3745 FScroll$__xinit_scroll_h_border$0_0$0 == .
      00001A                       3746 __xinit__scroll_h_border:
      00001A 00                    3747 	.db #0x00	;  0
                           00001B  3748 FScroll$__xinit_clamp_enabled$0_0$0 == .
      00001B                       3749 __xinit__clamp_enabled:
      00001B 01                    3750 	.db #0x01	; 1
                                   3751 	.area _CABS (ABS)
