                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14228 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _InitSprites
                                     13 	.globl _InitStates
                                     14 	.globl _vbl_update
                                     15 	.globl _FadeOut
                                     16 	.globl _FadeIn
                                     17 	.globl _PopBank
                                     18 	.globl _PushBank
                                     19 	.globl _SpriteManagerUpdate
                                     20 	.globl _SpriteManagerReset
                                     21 	.globl _hUGE_mute
                                     22 	.globl _cpu_fast
                                     23 	.globl _set_sprite_palette
                                     24 	.globl _set_bkg_palette
                                     25 	.globl _MusicCallback
                                     26 	.globl _memcpy
                                     27 	.globl _display_off
                                     28 	.globl _wait_vbl_done
                                     29 	.globl _set_interrupts
                                     30 	.globl _joypad
                                     31 	.globl _add_low_priority_TIM
                                     32 	.globl _add_LCD
                                     33 	.globl _add_VBL
                                     34 	.globl _default_palette
                                     35 	.globl _music_mute_frames
                                     36 	.globl _vbl_count
                                     37 	.globl _state_running
                                     38 	.globl _current_state
                                     39 	.globl _delta_time
                                     40 	.globl _SetState
                                     41 	.globl _SetPalette
                                     42 	.globl _LCD_isr
                                     43 	.globl _SetWindowY
                                     44 ;--------------------------------------------------------
                                     45 ; special function registers
                                     46 ;--------------------------------------------------------
                                     47 ;--------------------------------------------------------
                                     48 ; ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area _DATA
                           000000    51 G$delta_time$0_0$0==.
      000000                         52 _delta_time::
      000000                         53 	.ds 1
                           000001    54 G$current_state$0_0$0==.
      000001                         55 _current_state::
      000001                         56 	.ds 1
                                     57 ;--------------------------------------------------------
                                     58 ; ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area _INITIALIZED
                           000000    61 G$state_running$0_0$0==.
      000000                         62 _state_running::
      000000                         63 	.ds 1
                           000001    64 G$vbl_count$0_0$0==.
      000001                         65 _vbl_count::
      000001                         66 	.ds 1
                           000002    67 G$music_mute_frames$0_0$0==.
      000002                         68 _music_mute_frames::
      000002                         69 	.ds 1
                           000003    70 G$default_palette$0_0$0==.
      000003                         71 _default_palette::
      000003                         72 	.ds 8
                                     73 ;--------------------------------------------------------
                                     74 ; absolute external ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area _DABS (ABS)
                                     77 ;--------------------------------------------------------
                                     78 ; global & static initialisations
                                     79 ;--------------------------------------------------------
                                     80 	.area _HOME
                                     81 	.area _GSINIT
                                     82 	.area _GSFINAL
                                     83 	.area _GSINIT
                                     84 ;--------------------------------------------------------
                                     85 ; Home
                                     86 ;--------------------------------------------------------
                                     87 	.area _HOME
                           000000    88 	G$LCD_isr$0$0	= .
                                     89 	.globl	G$LCD_isr$0$0
                           000000    90 	C$main.c$70$1_1$220	= .
                                     91 	.globl	C$main.c$70$1_1$220
                                     92 ;C:/ZGB-2023.0/common/src/main.c:70: void LCD_isr() NONBANKED {
                                     93 ;	---------------------------------
                                     94 ; Function LCD_isr
                                     95 ; ---------------------------------
      000000                         96 _LCD_isr::
                           000000    97 	C$main.c$71$1_0$220	= .
                                     98 	.globl	C$main.c$71$1_0$220
                                     99 ;C:/ZGB-2023.0/common/src/main.c:71: if (LYC_REG == 0) {
      000000 FAr00r00         [16]  100 	ld	a, (#_LYC_REG)
      000003 B7               [ 4]  101 	or	a, a
      000004 20 19            [12]  102 	jr	NZ, 00105$
                           000006   103 	C$main.c$72$2_0$221	= .
                                    104 	.globl	C$main.c$72$2_0$221
                                    105 ;C:/ZGB-2023.0/common/src/main.c:72: if (WY_REG == 0) {
      000006 FAr00r00         [16]  106 	ld	a, (#_WY_REG)
      000009 B7               [ 4]  107 	or	a, a
      00000A 20 07            [12]  108 	jr	NZ, 00102$
                           00000C   109 	C$main.c$73$3_0$222	= .
                                    110 	.globl	C$main.c$73$3_0$222
                                    111 ;C:/ZGB-2023.0/common/src/main.c:73: HIDE_SPRITES;
      00000C F0r00            [12]  112 	ldh	a, (_LCDC_REG + 0)
      00000E E6 FD            [ 8]  113 	and	a, #0xfd
      000010 E0r00            [12]  114 	ldh	(_LCDC_REG + 0), a
      000012 C9               [16]  115 	ret
      000013                        116 00102$:
                           000013   117 	C$main.c$75$3_0$223	= .
                                    118 	.globl	C$main.c$75$3_0$223
                                    119 ;C:/ZGB-2023.0/common/src/main.c:75: SHOW_SPRITES;
      000013 F0r00            [12]  120 	ldh	a, (_LCDC_REG + 0)
      000015 F6 02            [ 8]  121 	or	a, #0x02
      000017 E0r00            [12]  122 	ldh	(_LCDC_REG + 0), a
                           000019   123 	C$main.c$76$3_0$223	= .
                                    124 	.globl	C$main.c$76$3_0$223
                                    125 ;C:/ZGB-2023.0/common/src/main.c:76: LYC_REG = WY_REG - 1;
      000019 F0r00            [12]  126 	ldh	a, (_WY_REG + 0)
      00001B 3D               [ 4]  127 	dec	a
      00001C E0r00            [12]  128 	ldh	(_LYC_REG + 0), a
      00001E C9               [16]  129 	ret
      00001F                        130 00105$:
                           00001F   131 	C$main.c$79$2_0$224	= .
                                    132 	.globl	C$main.c$79$2_0$224
                                    133 ;C:/ZGB-2023.0/common/src/main.c:79: HIDE_SPRITES;
      00001F F0r00            [12]  134 	ldh	a, (_LCDC_REG + 0)
      000021 E6 FD            [ 8]  135 	and	a, #0xfd
      000023 E0r00            [12]  136 	ldh	(_LCDC_REG + 0), a
                           000025   137 	C$main.c$80$2_0$224	= .
                                    138 	.globl	C$main.c$80$2_0$224
                                    139 ;C:/ZGB-2023.0/common/src/main.c:80: LYC_REG = 0;
      000025 AF               [ 4]  140 	xor	a, a
      000026 E0r00            [12]  141 	ldh	(_LYC_REG + 0), a
                           000028   142 	C$main.c$82$1_0$220	= .
                                    143 	.globl	C$main.c$82$1_0$220
                                    144 ;C:/ZGB-2023.0/common/src/main.c:82: }
                           000028   145 	C$main.c$82$1_0$220	= .
                                    146 	.globl	C$main.c$82$1_0$220
                           000028   147 	XG$LCD_isr$0$0	= .
                                    148 	.globl	XG$LCD_isr$0$0
      000028 C9               [16]  149 	ret
                                    150 	.area _HOME
                                    151 ;--------------------------------------------------------
                                    152 ; code
                                    153 ;--------------------------------------------------------
                                    154 	.area _CODE
                           000000   155 	G$SetState$0$0	= .
                                    156 	.globl	G$SetState$0$0
                           000000   157 	C$main.c$27$0_0$211	= .
                                    158 	.globl	C$main.c$27$0_0$211
                                    159 ;C:/ZGB-2023.0/common/src/main.c:27: void SetState(UINT8 state) {
                                    160 ;	---------------------------------
                                    161 ; Function SetState
                                    162 ; ---------------------------------
      000000                        163 _SetState::
      000000 EAr00r00         [16]  164 	ld	(#_next_state),a
                           000003   165 	C$main.c$28$1_0$211	= .
                                    166 	.globl	C$main.c$28$1_0$211
                                    167 ;C:/ZGB-2023.0/common/src/main.c:28: state_running = 0;
      000003 21r00r00         [12]  168 	ld	hl, #_state_running
      000006 36 00            [12]  169 	ld	(hl), #0x00
                           000008   170 	C$main.c$29$1_0$211	= .
                                    171 	.globl	C$main.c$29$1_0$211
                                    172 ;C:/ZGB-2023.0/common/src/main.c:29: next_state = state;
                           000008   173 	C$main.c$30$1_0$211	= .
                                    174 	.globl	C$main.c$30$1_0$211
                                    175 ;C:/ZGB-2023.0/common/src/main.c:30: }
                           000008   176 	C$main.c$30$1_0$211	= .
                                    177 	.globl	C$main.c$30$1_0$211
                           000008   178 	XG$SetState$0$0	= .
                                    179 	.globl	XG$SetState$0$0
      000008 C9               [16]  180 	ret
                           000009   181 	G$vbl_update$0$0	= .
                                    182 	.globl	G$vbl_update$0$0
                           000009   183 	C$main.c$34$1_0$212	= .
                                    184 	.globl	C$main.c$34$1_0$212
                                    185 ;C:/ZGB-2023.0/common/src/main.c:34: void vbl_update() {
                                    186 ;	---------------------------------
                                    187 ; Function vbl_update
                                    188 ; ---------------------------------
      000009                        189 _vbl_update::
                           000009   190 	C$main.c$35$1_0$212	= .
                                    191 	.globl	C$main.c$35$1_0$212
                                    192 ;C:/ZGB-2023.0/common/src/main.c:35: vbl_count ++;
      000009 21r01r00         [12]  193 	ld	hl, #_vbl_count
      00000C 34               [12]  194 	inc	(hl)
                           00000D   195 	C$main.c$37$1_0$212	= .
                                    196 	.globl	C$main.c$37$1_0$212
                                    197 ;C:/ZGB-2023.0/common/src/main.c:37: SCX_REG = scroll_x_vblank + (scroll_offset_x << 3);
      00000D FAr00r00         [16]  198 	ld	a, (#_scroll_offset_x)
      000010 87               [ 4]  199 	add	a, a
      000011 87               [ 4]  200 	add	a, a
      000012 87               [ 4]  201 	add	a, a
      000013 21r00r00         [12]  202 	ld	hl, #_scroll_x_vblank
      000016 4E               [ 8]  203 	ld	c, (hl)
      000017 81               [ 4]  204 	add	a, c
      000018 E0r00            [12]  205 	ldh	(_SCX_REG + 0), a
                           00001A   206 	C$main.c$38$1_0$212	= .
                                    207 	.globl	C$main.c$38$1_0$212
                                    208 ;C:/ZGB-2023.0/common/src/main.c:38: SCY_REG = scroll_y_vblank + (scroll_offset_y << 3);
      00001A FAr00r00         [16]  209 	ld	a, (#_scroll_offset_y)
      00001D 87               [ 4]  210 	add	a, a
      00001E 87               [ 4]  211 	add	a, a
      00001F 87               [ 4]  212 	add	a, a
      000020 21r00r00         [12]  213 	ld	hl, #_scroll_y_vblank
      000023 4E               [ 8]  214 	ld	c, (hl)
      000024 81               [ 4]  215 	add	a, c
      000025 E0r00            [12]  216 	ldh	(_SCY_REG + 0), a
                           000027   217 	C$main.c$40$1_0$212	= .
                                    218 	.globl	C$main.c$40$1_0$212
                                    219 ;C:/ZGB-2023.0/common/src/main.c:40: if(music_mute_frames != 0) {
      000027 21r02r00         [12]  220 	ld	hl, #_music_mute_frames
      00002A 7E               [ 8]  221 	ld	a, (hl)
      00002B B7               [ 4]  222 	or	a, a
      00002C C8               [20]  223 	ret	Z
                           00002D   224 	C$main.c$41$2_0$213	= .
                                    225 	.globl	C$main.c$41$2_0$213
                                    226 ;C:/ZGB-2023.0/common/src/main.c:41: music_mute_frames --;
                           00002D   227 	C$main.c$42$2_0$213	= .
                                    228 	.globl	C$main.c$42$2_0$213
                                    229 ;C:/ZGB-2023.0/common/src/main.c:42: if(music_mute_frames == 0) {
      00002D 35               [12]  230 	dec	(hl)
      00002E 7E               [ 8]  231 	ld	a, (hl)
      00002F C0               [20]  232 	ret	NZ
                           000030   233 	C$main.c$43$3_0$214	= .
                                    234 	.globl	C$main.c$43$3_0$214
                                    235 ;C:/ZGB-2023.0/common/src/main.c:43: UNMUTE_ALL_CHANNELS;
      000030 AF               [ 4]  236 	xor	a, a
                           000031   237 	C$main.c$46$1_0$212	= .
                                    238 	.globl	C$main.c$46$1_0$212
                                    239 ;C:/ZGB-2023.0/common/src/main.c:46: }
                           000031   240 	C$main.c$46$1_0$212	= .
                                    241 	.globl	C$main.c$46$1_0$212
                           000031   242 	XG$vbl_update$0$0	= .
                                    243 	.globl	XG$vbl_update$0$0
      000031 C3r00r00         [16]  244 	jp	_hUGE_mute
                           000034   245 	G$SetPalette$0$0	= .
                                    246 	.globl	G$SetPalette$0$0
                           000034   247 	C$main.c$54$1_0$216	= .
                                    248 	.globl	C$main.c$54$1_0$216
                                    249 ;C:/ZGB-2023.0/common/src/main.c:54: void SetPalette(PALETTE_TYPE t, UINT8 first_palette, UINT8 nb_palettes, UINT16 *rgb_data, UINT8 bank) {
                                    250 ;	---------------------------------
                                    251 ; Function SetPalette
                                    252 ; ---------------------------------
      000034                        253 _SetPalette::
      000034 E8 FA            [16]  254 	add	sp, #-6
      000036 F8 05            [12]  255 	ldhl	sp,	#5
      000038 32               [ 8]  256 	ld	(hl-), a
      000039 73               [ 8]  257 	ld	(hl), e
                           00003A   258 	C$main.c$55$1_0$216	= .
                                    259 	.globl	C$main.c$55$1_0$216
                                    260 ;C:/ZGB-2023.0/common/src/main.c:55: if(first_palette + nb_palettes > 8)
      00003A 4E               [ 8]  261 	ld	c, (hl)
      00003B 06 00            [ 8]  262 	ld	b, #0x00
      00003D F8 08            [12]  263 	ldhl	sp,	#8
      00003F 7E               [ 8]  264 	ld	a, (hl)
      000040 F8 02            [12]  265 	ldhl	sp,	#2
      000042 22               [ 8]  266 	ld	(hl+), a
      000043 AF               [ 4]  267 	xor	a, a
      000044 32               [ 8]  268 	ld	(hl-), a
      000045 2A               [ 8]  269 	ld	a,	(hl+)
      000046 66               [ 8]  270 	ld	h, (hl)
      000047 6F               [ 4]  271 	ld	l, a
      000048 09               [ 8]  272 	add	hl, bc
      000049 33               [ 8]  273 	inc	sp
      00004A 33               [ 8]  274 	inc	sp
      00004B E5               [16]  275 	push	hl
      00004C F8 00            [12]  276 	ldhl	sp,	#0
      00004E 3E 08            [ 8]  277 	ld	a, #0x08
      000050 96               [ 8]  278 	sub	a, (hl)
      000051 23               [ 8]  279 	inc	hl
      000052 3E 00            [ 8]  280 	ld	a, #0x00
      000054 9E               [ 8]  281 	sbc	a, (hl)
      000055 3E 00            [ 8]  282 	ld	a, #0x00
      000057 57               [ 4]  283 	ld	d, a
      000058 5E               [ 8]  284 	ld	e, (hl)
      000059 CB 7B            [ 8]  285 	bit	7, e
      00005B 28 07            [12]  286 	jr	Z, 00131$
      00005D CB 7A            [ 8]  287 	bit	7, d
      00005F 20 08            [12]  288 	jr	NZ, 00132$
      000061 BF               [ 4]  289 	cp	a, a
      000062 18 05            [12]  290 	jr	00132$
      000064                        291 00131$:
      000064 CB 7A            [ 8]  292 	bit	7, d
      000066 28 01            [12]  293 	jr	Z, 00132$
      000068 37               [ 4]  294 	scf
      000069                        295 00132$:
                           000069   296 	C$main.c$56$1_0$216	= .
                                    297 	.globl	C$main.c$56$1_0$216
                                    298 ;C:/ZGB-2023.0/common/src/main.c:56: return; //Adding more palettes than supported
      000069 DArF0r00         [16]  299 	jp	C,00106$
                           00006C   300 	C$main.c$58$1_1$217	= .
                                    301 	.globl	C$main.c$58$1_1$217
                                    302 ;C:/ZGB-2023.0/common/src/main.c:58: UWORD* pal_ptr = (t == BG_PALETTE) ? ZGB_Fading_BPal : ZGB_Fading_SPal;
      00006C F8 05            [12]  303 	ldhl	sp,	#5
      00006E CB 46            [12]  304 	bit	0, (hl)
      000070 20 05            [12]  305 	jr	NZ, 00108$
      000072 11r00r00         [12]  306 	ld	de, #_ZGB_Fading_BPal+0
      000075 18 03            [12]  307 	jr	00109$
      000077                        308 00108$:
      000077 11r00r00         [12]  309 	ld	de, #_ZGB_Fading_SPal+0
      00007A                        310 00109$:
      00007A 33               [ 8]  311 	inc	sp
      00007B 33               [ 8]  312 	inc	sp
      00007C D5               [16]  313 	push	de
                           00007D   314 	C$main.c$59$1_1$217	= .
                                    315 	.globl	C$main.c$59$1_1$217
                                    316 ;C:/ZGB-2023.0/common/src/main.c:59: PUSH_BANK(bank);
      00007D C5               [16]  317 	push	bc
      00007E F8 0D            [12]  318 	ldhl	sp,	#13
      000080 7E               [ 8]  319 	ld	a, (hl)
      000081 F5               [16]  320 	push	af
      000082 33               [ 8]  321 	inc	sp
      000083 CDr00r00         [24]  322 	call	_PushBank
      000086 33               [ 8]  323 	inc	sp
      000087 C1               [12]  324 	pop	bc
                           000088   325 	C$main.c$61$1_1$216	= .
                                    326 	.globl	C$main.c$61$1_1$216
                                    327 ;C:/ZGB-2023.0/common/src/main.c:61: set_bkg_palette(first_palette, nb_palettes, rgb_data);
      000088 F8 09            [12]  328 	ldhl	sp,	#9
      00008A 2A               [ 8]  329 	ld	a, (hl+)
      00008B 5F               [ 4]  330 	ld	e, a
      00008C 56               [ 8]  331 	ld	d, (hl)
                           00008D   332 	C$main.c$60$1_1$217	= .
                                    333 	.globl	C$main.c$60$1_1$217
                                    334 ;C:/ZGB-2023.0/common/src/main.c:60: if(t == BG_PALETTE) {
      00008D F8 05            [12]  335 	ldhl	sp,	#5
      00008F CB 46            [12]  336 	bit	0, (hl)
      000091 20 14            [12]  337 	jr	NZ, 00104$
                           000093   338 	C$main.c$61$2_1$218	= .
                                    339 	.globl	C$main.c$61$2_1$218
                                    340 ;C:/ZGB-2023.0/common/src/main.c:61: set_bkg_palette(first_palette, nb_palettes, rgb_data);
      000093 C5               [16]  341 	push	bc
      000094 D5               [16]  342 	push	de
      000095 F8 0C            [12]  343 	ldhl	sp,	#12
      000097 7E               [ 8]  344 	ld	a, (hl)
      000098 F5               [16]  345 	push	af
      000099 33               [ 8]  346 	inc	sp
      00009A F8 09            [12]  347 	ldhl	sp,	#9
      00009C 7E               [ 8]  348 	ld	a, (hl)
      00009D F5               [16]  349 	push	af
      00009E 33               [ 8]  350 	inc	sp
      00009F CDr00r00         [24]  351 	call	_set_bkg_palette
      0000A2 E8 04            [16]  352 	add	sp, #4
      0000A4 C1               [12]  353 	pop	bc
      0000A5 18 12            [12]  354 	jr	00105$
      0000A7                        355 00104$:
                           0000A7   356 	C$main.c$63$2_1$219	= .
                                    357 	.globl	C$main.c$63$2_1$219
                                    358 ;C:/ZGB-2023.0/common/src/main.c:63: set_sprite_palette(first_palette, nb_palettes, rgb_data);
      0000A7 C5               [16]  359 	push	bc
      0000A8 D5               [16]  360 	push	de
      0000A9 F8 0C            [12]  361 	ldhl	sp,	#12
      0000AB 7E               [ 8]  362 	ld	a, (hl)
      0000AC F5               [16]  363 	push	af
      0000AD 33               [ 8]  364 	inc	sp
      0000AE F8 09            [12]  365 	ldhl	sp,	#9
      0000B0 7E               [ 8]  366 	ld	a, (hl)
      0000B1 F5               [16]  367 	push	af
      0000B2 33               [ 8]  368 	inc	sp
      0000B3 CDr00r00         [24]  369 	call	_set_sprite_palette
      0000B6 E8 04            [16]  370 	add	sp, #4
      0000B8 C1               [12]  371 	pop	bc
      0000B9                        372 00105$:
                           0000B9   373 	C$main.c$65$1_1$217	= .
                                    374 	.globl	C$main.c$65$1_1$217
                                    375 ;C:/ZGB-2023.0/common/src/main.c:65: memcpy(&pal_ptr[first_palette << 2], rgb_data, nb_palettes << 3);
      0000B9 F8 02            [12]  376 	ldhl	sp,#2
      0000BB 2A               [ 8]  377 	ld	a, (hl+)
      0000BC 5F               [ 4]  378 	ld	e, a
      0000BD 56               [ 8]  379 	ld	d, (hl)
      0000BE CB 23            [ 8]  380 	sla	e
      0000C0 CB 12            [ 8]  381 	rl	d
      0000C2 CB 23            [ 8]  382 	sla	e
      0000C4 CB 12            [ 8]  383 	rl	d
      0000C6 CB 23            [ 8]  384 	sla	e
      0000C8 CB 12            [ 8]  385 	rl	d
      0000CA F8 09            [12]  386 	ldhl	sp,	#9
      0000CC 7E               [ 8]  387 	ld	a, (hl)
      0000CD F8 02            [12]  388 	ldhl	sp,	#2
      0000CF 77               [ 8]  389 	ld	(hl), a
      0000D0 F8 0A            [12]  390 	ldhl	sp,	#10
      0000D2 7E               [ 8]  391 	ld	a, (hl)
      0000D3 F8 03            [12]  392 	ldhl	sp,	#3
      0000D5 77               [ 8]  393 	ld	(hl), a
      0000D6 69               [ 4]  394 	ld	l, c
      0000D7 60               [ 4]  395 	ld	h, b
      0000D8 29               [ 8]  396 	add	hl, hl
      0000D9 29               [ 8]  397 	add	hl, hl
      0000DA 29               [ 8]  398 	add	hl, hl
      0000DB 4D               [ 4]  399 	ld	c, l
      0000DC 44               [ 4]  400 	ld	b, h
      0000DD E1               [12]  401 	pop	hl
      0000DE E5               [16]  402 	push	hl
      0000DF 09               [ 8]  403 	add	hl, bc
                                    404 ;	spillPairReg hl
                                    405 ;	spillPairReg hl
      0000E0 7C               [ 4]  406 	ld	a,h
                                    407 ;	spillPairReg hl
                                    408 ;	spillPairReg hl
      0000E1 D5               [16]  409 	push	de
      0000E2 E5               [16]  410 	push	hl
      0000E3 F8 06            [12]  411 	ldhl	sp,	#6
      0000E5 4E               [ 8]  412 	ld	c, (hl)
      0000E6 F8 07            [12]  413 	ldhl	sp,	#7
      0000E8 46               [ 8]  414 	ld	b, (hl)
      0000E9 D1               [12]  415 	pop	de
      0000EA CDr00r00         [24]  416 	call	_memcpy
                           0000ED   417 	C$main.c$66$1_1$217	= .
                                    418 	.globl	C$main.c$66$1_1$217
                                    419 ;C:/ZGB-2023.0/common/src/main.c:66: POP_BANK;
      0000ED CDr00r00         [24]  420 	call	_PopBank
      0000F0                        421 00106$:
                           0000F0   422 	C$main.c$67$1_1$216	= .
                                    423 	.globl	C$main.c$67$1_1$216
                                    424 ;C:/ZGB-2023.0/common/src/main.c:67: }
      0000F0 E8 06            [16]  425 	add	sp, #6
      0000F2 E1               [12]  426 	pop	hl
      0000F3 E8 04            [16]  427 	add	sp, #4
      0000F5 E9               [ 4]  428 	jp	(hl)
                           0000F6   429 	G$SetWindowY$0$0	= .
                                    430 	.globl	G$SetWindowY$0$0
                           0000F6   431 	C$main.c$84$1_0$226	= .
                                    432 	.globl	C$main.c$84$1_0$226
                                    433 ;C:/ZGB-2023.0/common/src/main.c:84: void SetWindowY(UINT8 y) {
                                    434 ;	---------------------------------
                                    435 ; Function SetWindowY
                                    436 ; ---------------------------------
      0000F6                        437 _SetWindowY::
                           0000F6   438 	C$main.c$85$1_0$226	= .
                                    439 	.globl	C$main.c$85$1_0$226
                                    440 ;C:/ZGB-2023.0/common/src/main.c:85: WY_REG = y;
      0000F6 4F               [ 4]  441 	ld	c, a
      0000F7 E0r00            [12]  442 	ldh	(_WY_REG + 0), a
                           0000F9   443 	C$main.c$86$1_0$226	= .
                                    444 	.globl	C$main.c$86$1_0$226
                                    445 ;C:/ZGB-2023.0/common/src/main.c:86: LYC_REG = y - 1;
      0000F9 79               [ 4]  446 	ld	a, c
      0000FA 3D               [ 4]  447 	dec	a
      0000FB E0r00            [12]  448 	ldh	(_LYC_REG + 0), a
                           0000FD   449 	C$main.c$87$1_0$226	= .
                                    450 	.globl	C$main.c$87$1_0$226
                                    451 ;C:/ZGB-2023.0/common/src/main.c:87: if (y < 144u) {
      0000FD 79               [ 4]  452 	ld	a, c
      0000FE D6 90            [ 8]  453 	sub	a, #0x90
      000100 30 07            [12]  454 	jr	NC, 00102$
                           000102   455 	C$main.c$88$2_0$227	= .
                                    456 	.globl	C$main.c$88$2_0$227
                                    457 ;C:/ZGB-2023.0/common/src/main.c:88: SHOW_WIN; 
      000102 F0r00            [12]  458 	ldh	a, (_LCDC_REG + 0)
      000104 F6 20            [ 8]  459 	or	a, #0x20
      000106 E0r00            [12]  460 	ldh	(_LCDC_REG + 0), a
      000108 C9               [16]  461 	ret
      000109                        462 00102$:
                           000109   463 	C$main.c$90$2_0$228	= .
                                    464 	.globl	C$main.c$90$2_0$228
                                    465 ;C:/ZGB-2023.0/common/src/main.c:90: HIDE_WIN; 
      000109 F0r00            [12]  466 	ldh	a, (_LCDC_REG + 0)
      00010B E6 DF            [ 8]  467 	and	a, #0xdf
      00010D E0r00            [12]  468 	ldh	(_LCDC_REG + 0), a
                           00010F   469 	C$main.c$91$2_0$228	= .
                                    470 	.globl	C$main.c$91$2_0$228
                                    471 ;C:/ZGB-2023.0/common/src/main.c:91: LYC_REG = 160u; 
      00010F 3E A0            [ 8]  472 	ld	a, #0xa0
      000111 E0r00            [12]  473 	ldh	(_LYC_REG + 0), a
                           000113   474 	C$main.c$93$1_0$226	= .
                                    475 	.globl	C$main.c$93$1_0$226
                                    476 ;C:/ZGB-2023.0/common/src/main.c:93: }
                           000113   477 	C$main.c$93$1_0$226	= .
                                    478 	.globl	C$main.c$93$1_0$226
                           000113   479 	XG$SetWindowY$0$0	= .
                                    480 	.globl	XG$SetWindowY$0$0
      000113 C9               [16]  481 	ret
                           000114   482 	G$main$0$0	= .
                                    483 	.globl	G$main$0$0
                           000114   484 	C$main.c$104$1_0$229	= .
                                    485 	.globl	C$main.c$104$1_0$229
                                    486 ;C:/ZGB-2023.0/common/src/main.c:104: void main() {
                                    487 ;	---------------------------------
                                    488 ; Function main
                                    489 ; ---------------------------------
      000114                        490 _main::
                           000114   491 	C$main.c$106$1_1$229	= .
                                    492 	.globl	C$main.c$106$1_1$229
                                    493 ;C:/ZGB-2023.0/common/src/main.c:106: for (UINT8 i = 4; i != 0; i--) {
      000114 0E 04            [ 8]  494 	ld	c, #0x04
      000116                        495 00119$:
      000116 79               [ 4]  496 	ld	a, c
      000117 B7               [ 4]  497 	or	a, a
      000118 28 06            [12]  498 	jr	Z, 00101$
                           00011A   499 	C$main.c$107$3_0$231	= .
                                    500 	.globl	C$main.c$107$3_0$231
                                    501 ;C:/ZGB-2023.0/common/src/main.c:107: wait_vbl_done();
      00011A CDr00r00         [24]  502 	call	_wait_vbl_done
                           00011D   503 	C$main.c$106$2_0$230	= .
                                    504 	.globl	C$main.c$106$2_0$230
                                    505 ;C:/ZGB-2023.0/common/src/main.c:106: for (UINT8 i = 4; i != 0; i--) {
      00011D 0D               [ 4]  506 	dec	c
      00011E 18 F6            [12]  507 	jr	00119$
      000120                        508 00101$:
                           000120   509 	C$main.c$116$1_1$232	= .
                                    510 	.globl	C$main.c$116$1_1$232
                                    511 ;C:/ZGB-2023.0/common/src/main.c:116: cpu_fast();
      000120 CDr00r00         [24]  512 	call	_cpu_fast
                           000123   513 	C$main.c$120$1_1$232	= .
                                    514 	.globl	C$main.c$120$1_1$232
                                    515 ;C:/ZGB-2023.0/common/src/main.c:120: PUSH_BANK(1);
      000123 3E 01            [ 8]  516 	ld	a, #0x01
      000125 F5               [16]  517 	push	af
      000126 33               [ 8]  518 	inc	sp
      000127 CDr00r00         [24]  519 	call	_PushBank
      00012A 33               [ 8]  520 	inc	sp
                           00012B   521 	C$main.c$121$1_1$232	= .
                                    522 	.globl	C$main.c$121$1_1$232
                                    523 ;C:/ZGB-2023.0/common/src/main.c:121: InitStates();
      00012B CDr00r00         [24]  524 	call	_InitStates
                           00012E   525 	C$main.c$122$1_1$232	= .
                                    526 	.globl	C$main.c$122$1_1$232
                                    527 ;C:/ZGB-2023.0/common/src/main.c:122: InitSprites();
      00012E CDr00r00         [24]  528 	call	_InitSprites
                           000131   529 	C$main.c$123$1_1$232	= .
                                    530 	.globl	C$main.c$123$1_1$232
                                    531 ;C:/ZGB-2023.0/common/src/main.c:123: POP_BANK;
      000131 CDr00r00         [24]  532 	call	_PopBank
                           000134   533 	C$main.c$140$1_1$232	= .
                                    534 	.globl	C$main.c$140$1_1$232
                                    535 ;C:/ZGB-2023.0/common/src/main.c:140: }
      000134 F3               [ 4]  536 	di
                           000135   537 	C$main.c$127$2_1$233	= .
                                    538 	.globl	C$main.c$127$2_1$233
                                    539 ;C:/ZGB-2023.0/common/src/main.c:127: TMA_REG = _cpu == CGB_TYPE ? 120U : 0xBCU;
      000135 FAr00r00         [16]  540 	ld	a, (#__cpu)
      000138 D6 11            [ 8]  541 	sub	a, #0x11
      00013A 3E 78            [ 8]  542 	ld	a, #0x78
      00013C 28 02            [12]  543 	jr	Z, 00126$
      00013E 3E BC            [ 8]  544 	ld	a, #0xbc
      000140                        545 00126$:
      000140 E0r00            [12]  546 	ldh	(_TMA_REG + 0), a
                           000142   547 	C$main.c$131$2_1$233	= .
                                    548 	.globl	C$main.c$131$2_1$233
                                    549 ;C:/ZGB-2023.0/common/src/main.c:131: TAC_REG = 0x04U;
      000142 3E 04            [ 8]  550 	ld	a, #0x04
      000144 E0r00            [12]  551 	ldh	(_TAC_REG + 0), a
                           000146   552 	C$main.c$134$2_1$233	= .
                                    553 	.globl	C$main.c$134$2_1$233
                                    554 ;C:/ZGB-2023.0/common/src/main.c:134: add_low_priority_TIM(MusicCallback); 
      000146 11r00r00         [12]  555 	ld	de, #_MusicCallback
      000149 CDr00r00         [24]  556 	call	_add_low_priority_TIM
                           00014C   557 	C$main.c$136$2_1$233	= .
                                    558 	.globl	C$main.c$136$2_1$233
                                    559 ;C:/ZGB-2023.0/common/src/main.c:136: add_VBL(vbl_update);
      00014C 11r09r00         [12]  560 	ld	de, #_vbl_update
      00014F CDr00r00         [24]  561 	call	_add_VBL
                           000152   562 	C$main.c$138$2_1$233	= .
                                    563 	.globl	C$main.c$138$2_1$233
                                    564 ;C:/ZGB-2023.0/common/src/main.c:138: STAT_REG |= 0x40; 
      000152 F0r00            [12]  565 	ldh	a, (_STAT_REG + 0)
      000154 F6 40            [ 8]  566 	or	a, #0x40
      000156 E0r00            [12]  567 	ldh	(_STAT_REG + 0), a
                           000158   568 	C$main.c$139$2_1$233	= .
                                    569 	.globl	C$main.c$139$2_1$233
                                    570 ;C:/ZGB-2023.0/common/src/main.c:139: add_LCD(LCD_isr);
      000158 11r00r00         [12]  571 	ld	de, #_LCD_isr
      00015B CDr00r00         [24]  572 	call	_add_LCD
      00015E FB               [ 4]  573 	ei
                           00015F   574 	C$main.c$142$1_1$232	= .
                                    575 	.globl	C$main.c$142$1_1$232
                                    576 ;C:/ZGB-2023.0/common/src/main.c:142: set_interrupts(VBL_IFLAG | TIM_IFLAG | LCD_IFLAG);
      00015F 3E 07            [ 8]  577 	ld	a, #0x07
      000161 CDr00r00         [24]  578 	call	_set_interrupts
                           000164   579 	C$main.c$144$1_1$232	= .
                                    580 	.globl	C$main.c$144$1_1$232
                                    581 ;C:/ZGB-2023.0/common/src/main.c:144: LCDC_REG |= LCDCF_OBJDEFAULT | LCDCF_OBJON | LCDCF_BGON;
      000164 F0r00            [12]  582 	ldh	a, (_LCDC_REG + 0)
      000166 F6 07            [ 8]  583 	or	a, #0x07
      000168 E0r00            [12]  584 	ldh	(_LCDC_REG + 0), a
                           00016A   585 	C$main.c$145$1_1$232	= .
                                    586 	.globl	C$main.c$145$1_1$232
                                    587 ;C:/ZGB-2023.0/common/src/main.c:145: WY_REG = 145;
      00016A 3E 91            [ 8]  588 	ld	a, #0x91
      00016C E0r00            [12]  589 	ldh	(_WY_REG + 0), a
                           00016E   590 	C$main.c$147$1_1$232	= .
                                    591 	.globl	C$main.c$147$1_1$232
                                    592 ;C:/ZGB-2023.0/common/src/main.c:147: while(1) {
      00016E                        593 00116$:
                           00016E   594 	C$main.c$148$2_1$234	= .
                                    595 	.globl	C$main.c$148$2_1$234
                                    596 ;C:/ZGB-2023.0/common/src/main.c:148: DISPLAY_OFF
      00016E CDr00r00         [24]  597 	call	_display_off
                           000171   598 	C$main.c$150$2_1$234	= .
                                    599 	.globl	C$main.c$150$2_1$234
                                    600 ;C:/ZGB-2023.0/common/src/main.c:150: if(stop_music_on_new_state)
      000171 FAr00r00         [16]  601 	ld	a, (#_stop_music_on_new_state)
      000174 B7               [ 4]  602 	or	a, a
      000175 28 10            [12]  603 	jr	Z, 00103$
                           000177   604 	C$main.c$152$3_1$235	= .
                                    605 	.globl	C$main.c$152$3_1$235
                                    606 ;C:/ZGB-2023.0/common/src/main.c:152: StopMusic;
      000177 21r00r00         [12]  607 	ld	hl, #_hUGE_paused
      00017A 36 01            [12]  608 	ld	(hl), #0x01
      00017C 3E 01            [ 8]  609 	ld	a, #0x01
      00017E CDr00r00         [24]  610 	call	_hUGE_mute
      000181 AF               [ 4]  611 	xor	a, a
      000182 21r00r00         [12]  612 	ld	hl, #_last_music
      000185 22               [ 8]  613 	ld	(hl+), a
      000186 77               [ 8]  614 	ld	(hl), a
      000187                        615 00103$:
                           000187   616 	C$main.c$155$2_1$234	= .
                                    617 	.globl	C$main.c$155$2_1$234
                                    618 ;C:/ZGB-2023.0/common/src/main.c:155: SpriteManagerReset();
      000187 CDr00r00         [24]  619 	call	_SpriteManagerReset
                           00018A   620 	C$main.c$156$2_1$234	= .
                                    621 	.globl	C$main.c$156$2_1$234
                                    622 ;C:/ZGB-2023.0/common/src/main.c:156: state_running = 1;
      00018A 21r00r00         [12]  623 	ld	hl, #_state_running
      00018D 36 01            [12]  624 	ld	(hl), #0x01
                           00018F   625 	C$main.c$157$2_1$234	= .
                                    626 	.globl	C$main.c$157$2_1$234
                                    627 ;C:/ZGB-2023.0/common/src/main.c:157: current_state = next_state;
      00018F FAr00r00         [16]  628 	ld	a, (#_next_state)
      000192 EAr01r00         [16]  629 	ld	(#_current_state),a
                           000195   630 	C$main.c$158$2_1$234	= .
                                    631 	.globl	C$main.c$158$2_1$234
                                    632 ;C:/ZGB-2023.0/common/src/main.c:158: scroll_target = 0;
      000195 AF               [ 4]  633 	xor	a, a
      000196 21r00r00         [12]  634 	ld	hl, #_scroll_target
      000199 22               [ 8]  635 	ld	(hl+), a
      00019A 77               [ 8]  636 	ld	(hl), a
                           00019B   637 	C$main.c$159$2_1$234	= .
                                    638 	.globl	C$main.c$159$2_1$234
                                    639 ;C:/ZGB-2023.0/common/src/main.c:159: last_bg_pal_loaded = 0;
      00019B 21r00r00         [12]  640 	ld	hl, #_last_bg_pal_loaded
      00019E 36 00            [12]  641 	ld	(hl), #0x00
                           0001A0   642 	C$main.c$160$2_1$234	= .
                                    643 	.globl	C$main.c$160$2_1$234
                                    644 ;C:/ZGB-2023.0/common/src/main.c:160: last_tile_loaded = 0;
      0001A0 21r00r00         [12]  645 	ld	hl, #_last_tile_loaded
      0001A3 36 00            [12]  646 	ld	(hl), #0x00
                           0001A5   647 	C$main.c$163$2_1$234	= .
                                    648 	.globl	C$main.c$163$2_1$234
                                    649 ;C:/ZGB-2023.0/common/src/main.c:163: if (_cpu == CGB_TYPE) {
      0001A5 FAr00r00         [16]  650 	ld	a, (#__cpu)
                           0001A8   651 	C$main.c$164$5_1$238	= .
                                    652 	.globl	C$main.c$164$5_1$238
                                    653 ;C:/ZGB-2023.0/common/src/main.c:164: for(i = 0; i < 8; ++ i)
      0001A8 D6 11            [ 8]  654 	sub	a,#0x11
      0001AA 20 2E            [12]  655 	jr	NZ, 00106$
      0001AC 5F               [ 4]  656 	ld	e,a
      0001AD                        657 00121$:
                           0001AD   658 	C$main.c$166$5_1$238	= .
                                    659 	.globl	C$main.c$166$5_1$238
                                    660 ;C:/ZGB-2023.0/common/src/main.c:166: SetPalette(BG_PALETTE, i, 1, default_palette, 1);
      0001AD D5               [16]  661 	push	de
      0001AE 3E 01            [ 8]  662 	ld	a, #0x01
      0001B0 F5               [16]  663 	push	af
      0001B1 33               [ 8]  664 	inc	sp
      0001B2 01r03r00         [12]  665 	ld	bc, #_default_palette
      0001B5 C5               [16]  666 	push	bc
      0001B6 3E 01            [ 8]  667 	ld	a, #0x01
      0001B8 F5               [16]  668 	push	af
      0001B9 33               [ 8]  669 	inc	sp
      0001BA AF               [ 4]  670 	xor	a, a
      0001BB CDr34r00         [24]  671 	call	_SetPalette
      0001BE D1               [12]  672 	pop	de
                           0001BF   673 	C$main.c$167$5_1$238	= .
                                    674 	.globl	C$main.c$167$5_1$238
                                    675 ;C:/ZGB-2023.0/common/src/main.c:167: SetPalette(SPRITES_PALETTE, i, 1, default_palette, 1);
      0001BF D5               [16]  676 	push	de
      0001C0 3E 01            [ 8]  677 	ld	a, #0x01
      0001C2 F5               [16]  678 	push	af
      0001C3 33               [ 8]  679 	inc	sp
      0001C4 01r03r00         [12]  680 	ld	bc, #_default_palette
      0001C7 C5               [16]  681 	push	bc
      0001C8 3E 01            [ 8]  682 	ld	a, #0x01
      0001CA F5               [16]  683 	push	af
      0001CB 33               [ 8]  684 	inc	sp
      0001CC 3E 01            [ 8]  685 	ld	a, #0x01
      0001CE CDr34r00         [24]  686 	call	_SetPalette
      0001D1 D1               [12]  687 	pop	de
                           0001D2   688 	C$main.c$164$4_1$237	= .
                                    689 	.globl	C$main.c$164$4_1$237
                                    690 ;C:/ZGB-2023.0/common/src/main.c:164: for(i = 0; i < 8; ++ i)
      0001D2 1C               [ 4]  691 	inc	e
      0001D3 7B               [ 4]  692 	ld	a, e
      0001D4 D6 08            [ 8]  693 	sub	a, #0x08
      0001D6 38 D5            [12]  694 	jr	C, 00121$
      0001D8 18 0C            [12]  695 	jr	00107$
      0001DA                        696 00106$:
                           0001DA   697 	C$main.c$171$2_1$234	= .
                                    698 	.globl	C$main.c$171$2_1$234
                                    699 ;C:/ZGB-2023.0/common/src/main.c:171: BGP_REG = OBP0_REG = OBP1_REG = PAL_DEF(0, 1, 2, 3);
      0001DA 3E E4            [ 8]  700 	ld	a, #0xe4
      0001DC E0r00            [12]  701 	ldh	(_OBP1_REG + 0), a
      0001DE 3E E4            [ 8]  702 	ld	a, #0xe4
      0001E0 E0r00            [12]  703 	ldh	(_OBP0_REG + 0), a
      0001E2 3E E4            [ 8]  704 	ld	a, #0xe4
      0001E4 E0r00            [12]  705 	ldh	(_BGP_REG + 0), a
      0001E6                        706 00107$:
                           0001E6   707 	C$main.c$173$2_1$234	= .
                                    708 	.globl	C$main.c$173$2_1$234
                                    709 ;C:/ZGB-2023.0/common/src/main.c:173: PUSH_BANK(stateBanks[current_state]);
      0001E6 3Er00            [ 8]  710 	ld	a, #<(_stateBanks)
      0001E8 21r01r00         [12]  711 	ld	hl, #_current_state
      0001EB 86               [ 8]  712 	add	a, (hl)
      0001EC 4F               [ 4]  713 	ld	c, a
      0001ED 3Es00            [ 8]  714 	ld	a, #>(_stateBanks)
      0001EF CE 00            [ 8]  715 	adc	a, #0x00
      0001F1 47               [ 4]  716 	ld	b, a
      0001F2 0A               [ 8]  717 	ld	a, (bc)
      0001F3 F5               [16]  718 	push	af
      0001F4 33               [ 8]  719 	inc	sp
      0001F5 CDr00r00         [24]  720 	call	_PushBank
      0001F8 33               [ 8]  721 	inc	sp
                           0001F9   722 	C$main.c$174$2_1$234	= .
                                    723 	.globl	C$main.c$174$2_1$234
                                    724 ;C:/ZGB-2023.0/common/src/main.c:174: (startFuncs[current_state])();
      0001F9 21r01r00         [12]  725 	ld	hl, #_current_state
      0001FC 6E               [ 8]  726 	ld	l, (hl)
                                    727 ;	spillPairReg hl
                                    728 ;	spillPairReg hl
      0001FD 26 00            [ 8]  729 	ld	h, #0x00
                                    730 ;	spillPairReg hl
                                    731 ;	spillPairReg hl
      0001FF 29               [ 8]  732 	add	hl, hl
      000200 11r00r00         [12]  733 	ld	de, #_startFuncs
      000203 19               [ 8]  734 	add	hl, de
      000204 2A               [ 8]  735 	ld	a,	(hl+)
      000205 66               [ 8]  736 	ld	h, (hl)
                                    737 ;	spillPairReg hl
      000206 6F               [ 4]  738 	ld	l, a
                                    739 ;	spillPairReg hl
                                    740 ;	spillPairReg hl
      000207 CDr00r00         [24]  741 	call	___sdcc_call_hl
                           00020A   742 	C$main.c$175$2_1$234	= .
                                    743 	.globl	C$main.c$175$2_1$234
                                    744 ;C:/ZGB-2023.0/common/src/main.c:175: POP_BANK;
      00020A CDr00r00         [24]  745 	call	_PopBank
                           00020D   746 	C$main.c$176$2_1$234	= .
                                    747 	.globl	C$main.c$176$2_1$234
                                    748 ;C:/ZGB-2023.0/common/src/main.c:176: scroll_x_vblank = scroll_x;
      00020D FAr00r00         [16]  749 	ld	a, (#_scroll_x)
      000210 EAr00r00         [16]  750 	ld	(#_scroll_x_vblank),a
                           000213   751 	C$main.c$177$2_1$234	= .
                                    752 	.globl	C$main.c$177$2_1$234
                                    753 ;C:/ZGB-2023.0/common/src/main.c:177: scroll_y_vblank = scroll_y;
      000213 FAr00r00         [16]  754 	ld	a, (#_scroll_y)
      000216 EAr00r00         [16]  755 	ld	(#_scroll_y_vblank),a
                           000219   756 	C$main.c$179$2_1$234	= .
                                    757 	.globl	C$main.c$179$2_1$234
                                    758 ;C:/ZGB-2023.0/common/src/main.c:179: if(state_running) {
      000219 FAr00r00         [16]  759 	ld	a, (#_state_running)
      00021C B7               [ 4]  760 	or	a, a
      00021D 28 09            [12]  761 	jr	Z, 00140$
                           00021F   762 	C$main.c$180$3_1$239	= .
                                    763 	.globl	C$main.c$180$3_1$239
                                    764 ;C:/ZGB-2023.0/common/src/main.c:180: DISPLAY_ON;
      00021F F0r00            [12]  765 	ldh	a, (_LCDC_REG + 0)
      000221 F6 80            [ 8]  766 	or	a, #0x80
      000223 E0r00            [12]  767 	ldh	(_LCDC_REG + 0), a
                           000225   768 	C$main.c$181$3_1$239	= .
                                    769 	.globl	C$main.c$181$3_1$239
                                    770 ;C:/ZGB-2023.0/common/src/main.c:181: FadeOut();
      000225 CDr00r00         [24]  771 	call	_FadeOut
                           000228   772 	C$main.c$184$1_1$229	= .
                                    773 	.globl	C$main.c$184$1_1$229
                                    774 ;C:/ZGB-2023.0/common/src/main.c:184: while (state_running) {
      000228                        775 00140$:
      000228                        776 00112$:
      000228 FAr00r00         [16]  777 	ld	a, (#_state_running)
      00022B B7               [ 4]  778 	or	a, a
      00022C 28 57            [12]  779 	jr	Z, 00114$
                           00022E   780 	C$main.c$185$3_1$240	= .
                                    781 	.globl	C$main.c$185$3_1$240
                                    782 ;C:/ZGB-2023.0/common/src/main.c:185: if(!vbl_count)
      00022E FAr01r00         [16]  783 	ld	a, (#_vbl_count)
      000231 B7               [ 4]  784 	or	a, a
      000232 20 03            [12]  785 	jr	NZ, 00111$
                           000234   786 	C$main.c$186$3_1$240	= .
                                    787 	.globl	C$main.c$186$3_1$240
                                    788 ;C:/ZGB-2023.0/common/src/main.c:186: wait_vbl_done();
      000234 CDr00r00         [24]  789 	call	_wait_vbl_done
      000237                        790 00111$:
                           000237   791 	C$main.c$187$3_1$240	= .
                                    792 	.globl	C$main.c$187$3_1$240
                                    793 ;C:/ZGB-2023.0/common/src/main.c:187: delta_time = vbl_count == 1u ? 0u : 1u;
      000237 FAr01r00         [16]  794 	ld	a, (#_vbl_count)
      00023A 3D               [ 4]  795 	dec	a
      00023B 20 03            [12]  796 	jr	NZ, 00127$
      00023D 6F               [ 4]  797 	ld	l, a
                                    798 ;	spillPairReg hl
                                    799 ;	spillPairReg hl
      00023E 18 04            [12]  800 	jr	00128$
      000240                        801 00127$:
      000240 3E 01            [ 8]  802 	ld	a, #0x01
      000242 2E 00            [ 8]  803 	ld	l, #0x00
                                    804 ;	spillPairReg hl
                                    805 ;	spillPairReg hl
      000244                        806 00128$:
      000244 EAr00r00         [16]  807 	ld	(_delta_time), a
                           000247   808 	C$main.c$188$3_1$240	= .
                                    809 	.globl	C$main.c$188$3_1$240
                                    810 ;C:/ZGB-2023.0/common/src/main.c:188: vbl_count = 0;
      000247 21r01r00         [12]  811 	ld	hl, #_vbl_count
      00024A 36 00            [12]  812 	ld	(hl), #0x00
                           00024C   813 	C$main.c$190$3_1$240	= .
                                    814 	.globl	C$main.c$190$3_1$240
                                    815 ;C:/ZGB-2023.0/common/src/main.c:190: UPDATE_KEYS();
      00024C FAr00r00         [16]  816 	ld	a, (#_keys)
      00024F EAr00r00         [16]  817 	ld	(#_previous_keys),a
      000252 CDr00r00         [24]  818 	call	_joypad
      000255 EAr00r00         [16]  819 	ld	(#_keys),a
                           000258   820 	C$main.c$192$3_1$240	= .
                                    821 	.globl	C$main.c$192$3_1$240
                                    822 ;C:/ZGB-2023.0/common/src/main.c:192: SpriteManagerUpdate();
      000258 CDr00r00         [24]  823 	call	_SpriteManagerUpdate
                           00025B   824 	C$main.c$193$3_1$240	= .
                                    825 	.globl	C$main.c$193$3_1$240
                                    826 ;C:/ZGB-2023.0/common/src/main.c:193: PUSH_BANK(stateBanks[current_state]);
      00025B 3Er00            [ 8]  827 	ld	a, #<(_stateBanks)
      00025D 21r01r00         [12]  828 	ld	hl, #_current_state
      000260 86               [ 8]  829 	add	a, (hl)
      000261 4F               [ 4]  830 	ld	c, a
      000262 3Es00            [ 8]  831 	ld	a, #>(_stateBanks)
      000264 CE 00            [ 8]  832 	adc	a, #0x00
      000266 47               [ 4]  833 	ld	b, a
      000267 0A               [ 8]  834 	ld	a, (bc)
      000268 F5               [16]  835 	push	af
      000269 33               [ 8]  836 	inc	sp
      00026A CDr00r00         [24]  837 	call	_PushBank
      00026D 33               [ 8]  838 	inc	sp
                           00026E   839 	C$main.c$194$3_1$240	= .
                                    840 	.globl	C$main.c$194$3_1$240
                                    841 ;C:/ZGB-2023.0/common/src/main.c:194: updateFuncs[current_state]();
      00026E 21r01r00         [12]  842 	ld	hl, #_current_state
      000271 6E               [ 8]  843 	ld	l, (hl)
                                    844 ;	spillPairReg hl
                                    845 ;	spillPairReg hl
      000272 26 00            [ 8]  846 	ld	h, #0x00
                                    847 ;	spillPairReg hl
                                    848 ;	spillPairReg hl
      000274 29               [ 8]  849 	add	hl, hl
      000275 11r00r00         [12]  850 	ld	de, #_updateFuncs
      000278 19               [ 8]  851 	add	hl, de
      000279 4E               [ 8]  852 	ld	c, (hl)
      00027A 23               [ 8]  853 	inc	hl
      00027B 66               [ 8]  854 	ld	h, (hl)
                                    855 ;	spillPairReg hl
      00027C 69               [ 4]  856 	ld	l, c
                                    857 ;	spillPairReg hl
                                    858 ;	spillPairReg hl
      00027D CDr00r00         [24]  859 	call	___sdcc_call_hl
                           000280   860 	C$main.c$195$3_1$240	= .
                                    861 	.globl	C$main.c$195$3_1$240
                                    862 ;C:/ZGB-2023.0/common/src/main.c:195: POP_BANK;
      000280 CDr00r00         [24]  863 	call	_PopBank
      000283 18 A3            [12]  864 	jr	00112$
      000285                        865 00114$:
                           000285   866 	C$main.c$198$2_1$234	= .
                                    867 	.globl	C$main.c$198$2_1$234
                                    868 ;C:/ZGB-2023.0/common/src/main.c:198: FadeIn();
      000285 CDr00r00         [24]  869 	call	_FadeIn
                           000288   870 	C$main.c$200$1_1$229	= .
                                    871 	.globl	C$main.c$200$1_1$229
                                    872 ;C:/ZGB-2023.0/common/src/main.c:200: }
                           000288   873 	C$main.c$200$1_1$229	= .
                                    874 	.globl	C$main.c$200$1_1$229
                           000288   875 	XG$main$0$0	= .
                                    876 	.globl	XG$main$0$0
      000288 C3r6Er01         [16]  877 	jp	00116$
                                    878 	.area _CODE
                                    879 	.area _INITIALIZER
                           000000   880 Fmain$__xinit_state_running$0_0$0 == .
      000000                        881 __xinit__state_running:
      000000 00                     882 	.db #0x00	; 0
                           000001   883 Fmain$__xinit_vbl_count$0_0$0 == .
      000001                        884 __xinit__vbl_count:
      000001 00                     885 	.db #0x00	; 0
                           000002   886 Fmain$__xinit_music_mute_frames$0_0$0 == .
      000002                        887 __xinit__music_mute_frames:
      000002 00                     888 	.db #0x00	; 0
                           000003   889 Fmain$__xinit_default_palette$0_0$0 == .
      000003                        890 __xinit__default_palette:
      000003 FF 7F                  891 	.dw #0x7fff
      000005 94 52                  892 	.dw #0x5294
      000007 4A 29                  893 	.dw #0x294a
      000009 00 00                  894 	.dw #0x0000
                                    895 	.area _CABS (ABS)
