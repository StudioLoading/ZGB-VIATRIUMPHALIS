                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14228 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module SpriteCompass
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _Destroy_SpriteCompass
                                     12 	.globl _Update_SpriteCompass
                                     13 	.globl _Start_SpriteCompass
                                     14 	.globl _SpriteManagerRemoveSprite
                                     15 	.globl _SetSpriteAnim
                                     16 	.globl _a_compass_v
                                     17 	.globl _a_compass_66
                                     18 	.globl _a_compass_33
                                     19 	.globl _a_compass_h
                                     20 	.globl ___bank_SpriteCompass
                                     21 ;--------------------------------------------------------
                                     22 ; special function registers
                                     23 ;--------------------------------------------------------
                                     24 ;--------------------------------------------------------
                                     25 ; ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area _DATA
                                     28 ;--------------------------------------------------------
                                     29 ; ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area _INITIALIZED
                                     32 ;--------------------------------------------------------
                                     33 ; absolute external ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area _DABS (ABS)
                                     36 ;--------------------------------------------------------
                                     37 ; global & static initialisations
                                     38 ;--------------------------------------------------------
                                     39 	.area _HOME
                                     40 	.area _GSINIT
                                     41 	.area _GSFINAL
                                     42 	.area _GSINIT
                                     43 ;--------------------------------------------------------
                                     44 ; Home
                                     45 ;--------------------------------------------------------
                                     46 	.area _HOME
                                     47 	.area _HOME
                                     48 ;--------------------------------------------------------
                                     49 ; code
                                     50 ;--------------------------------------------------------
                                     51 	.area _CODE_255
                           000000    52 	G$Start_SpriteCompass$0$0	= .
                                     53 	.globl	G$Start_SpriteCompass$0$0
                           000000    54 	C$SpriteCompass.c$23$0_0$178	= .
                                     55 	.globl	C$SpriteCompass.c$23$0_0$178
                                     56 ;SpriteCompass.c:23: void START() {
                                     57 ;	---------------------------------
                                     58 ; Function Start_SpriteCompass
                                     59 ; ---------------------------------
      000000                         60 _Start_SpriteCompass::
                           000000    61 	C$SpriteCompass.c$24$1_0$178	= .
                                     62 	.globl	C$SpriteCompass.c$24$1_0$178
                                     63 ;SpriteCompass.c:24: THIS->lim_x = 1000;
      000000 21r00r00         [12]   64 	ld	hl, #_THIS
      000003 2A               [ 8]   65 	ld	a, (hl+)
      000004 4F               [ 4]   66 	ld	c, a
      000005 46               [ 8]   67 	ld	b, (hl)
      000006 21 15 00         [12]   68 	ld	hl, #0x0015
      000009 09               [ 8]   69 	add	hl, bc
      00000A 3E E8            [ 8]   70 	ld	a, #0xe8
      00000C 22               [ 8]   71 	ld	(hl+), a
      00000D 36 03            [12]   72 	ld	(hl), #0x03
                           00000F    73 	C$SpriteCompass.c$25$1_0$178	= .
                                     74 	.globl	C$SpriteCompass.c$25$1_0$178
                                     75 ;SpriteCompass.c:25: THIS->lim_y = 1000;
      00000F 21r00r00         [12]   76 	ld	hl, #_THIS
      000012 2A               [ 8]   77 	ld	a, (hl+)
      000013 4F               [ 4]   78 	ld	c, a
      000014 46               [ 8]   79 	ld	b, (hl)
      000015 21 17 00         [12]   80 	ld	hl, #0x0017
      000018 09               [ 8]   81 	add	hl, bc
      000019 3E E8            [ 8]   82 	ld	a, #0xe8
      00001B 22               [ 8]   83 	ld	(hl+), a
      00001C 36 03            [12]   84 	ld	(hl), #0x03
                           00001E    85 	C$SpriteCompass.c$26$1_0$178	= .
                                     86 	.globl	C$SpriteCompass.c$26$1_0$178
                                     87 ;SpriteCompass.c:26: }
                           00001E    88 	C$SpriteCompass.c$26$1_0$178	= .
                                     89 	.globl	C$SpriteCompass.c$26$1_0$178
                           00001E    90 	XG$Start_SpriteCompass$0$0	= .
                                     91 	.globl	XG$Start_SpriteCompass$0$0
      00001E C9               [16]   92 	ret
                           0000FF    93 G$__bank_SpriteCompass$0_0$0 == 0x00ff
                           0000FF    94 ___bank_SpriteCompass	=	0x00ff
                           00001F    95 G$a_compass_h$0_0$0 == .
      00001F                         96 _a_compass_h:
      00001F 01                      97 	.db #0x01	; 1
      000020 00                      98 	.db #0x00	; 0
                           000021    99 G$a_compass_33$0_0$0 == .
      000021                        100 _a_compass_33:
      000021 01                     101 	.db #0x01	; 1
      000022 01                     102 	.db #0x01	; 1
                           000023   103 G$a_compass_66$0_0$0 == .
      000023                        104 _a_compass_66:
      000023 01                     105 	.db #0x01	; 1
      000024 02                     106 	.db #0x02	; 2
                           000025   107 G$a_compass_v$0_0$0 == .
      000025                        108 _a_compass_v:
      000025 01                     109 	.db #0x01	; 1
      000026 03                     110 	.db #0x03	; 3
                           000027   111 	G$Update_SpriteCompass$0$0	= .
                                    112 	.globl	G$Update_SpriteCompass$0$0
                           000027   113 	C$SpriteCompass.c$28$1_0$179	= .
                                    114 	.globl	C$SpriteCompass.c$28$1_0$179
                                    115 ;SpriteCompass.c:28: void UPDATE() { 
                                    116 ;	---------------------------------
                                    117 ; Function Update_SpriteCompass
                                    118 ; ---------------------------------
      000027                        119 _Update_SpriteCompass::
      000027 3B               [ 8]  120 	dec	sp
      000028 3B               [ 8]  121 	dec	sp
                           000029   122 	C$SpriteCompass.c$30$1_0$179	= .
                                    123 	.globl	C$SpriteCompass.c$30$1_0$179
                                    124 ;SpriteCompass.c:30: THIS->x = scroll_target->x;
      000029 21r00r00         [12]  125 	ld	hl, #_THIS
      00002C 2A               [ 8]  126 	ld	a, (hl+)
      00002D 4F               [ 4]  127 	ld	c, a
      00002E 46               [ 8]  128 	ld	b, (hl)
      00002F 21 0C 00         [12]  129 	ld	hl, #0x000c
      000032 09               [ 8]  130 	add	hl, bc
      000033 33               [ 8]  131 	inc	sp
      000034 33               [ 8]  132 	inc	sp
      000035 E5               [16]  133 	push	hl
      000036 21r00r00         [12]  134 	ld	hl, #_scroll_target
      000039 2A               [ 8]  135 	ld	a, (hl+)
      00003A 4F               [ 4]  136 	ld	c, a
      00003B 46               [ 8]  137 	ld	b, (hl)
      00003C 21 0C 00         [12]  138 	ld	hl, #0x000c
      00003F 09               [ 8]  139 	add	hl, bc
      000040 2A               [ 8]  140 	ld	a, (hl+)
      000041 4F               [ 4]  141 	ld	c, a
      000042 46               [ 8]  142 	ld	b, (hl)
      000043 E1               [12]  143 	pop	hl
      000044 E5               [16]  144 	push	hl
      000045 79               [ 4]  145 	ld	a, c
      000046 22               [ 8]  146 	ld	(hl+), a
      000047 70               [ 8]  147 	ld	(hl), b
                           000048   148 	C$SpriteCompass.c$31$1_0$179	= .
                                    149 	.globl	C$SpriteCompass.c$31$1_0$179
                                    150 ;SpriteCompass.c:31: THIS->y = scroll_target->y;
      000048 21r00r00         [12]  151 	ld	hl, #_THIS
      00004B 2A               [ 8]  152 	ld	a, (hl+)
      00004C 4F               [ 4]  153 	ld	c, a
      00004D 46               [ 8]  154 	ld	b, (hl)
      00004E 21 0E 00         [12]  155 	ld	hl, #0x000e
      000051 09               [ 8]  156 	add	hl, bc
      000052 33               [ 8]  157 	inc	sp
      000053 33               [ 8]  158 	inc	sp
      000054 E5               [16]  159 	push	hl
      000055 21r00r00         [12]  160 	ld	hl, #_scroll_target
      000058 2A               [ 8]  161 	ld	a, (hl+)
      000059 4F               [ 4]  162 	ld	c, a
      00005A 46               [ 8]  163 	ld	b, (hl)
      00005B 21 0E 00         [12]  164 	ld	hl, #0x000e
      00005E 09               [ 8]  165 	add	hl, bc
      00005F 2A               [ 8]  166 	ld	a, (hl+)
      000060 4F               [ 4]  167 	ld	c, a
      000061 46               [ 8]  168 	ld	b, (hl)
      000062 E1               [12]  169 	pop	hl
      000063 E5               [16]  170 	push	hl
      000064 79               [ 4]  171 	ld	a, c
      000065 22               [ 8]  172 	ld	(hl+), a
      000066 70               [ 8]  173 	ld	(hl), b
                           000067   174 	C$SpriteCompass.c$32$1_0$179	= .
                                    175 	.globl	C$SpriteCompass.c$32$1_0$179
                                    176 ;SpriteCompass.c:32: if(track_ended == 1){
      000067 FAr00r00         [16]  177 	ld	a, (#_track_ended)
      00006A 3D               [ 4]  178 	dec	a
      00006B 20 09            [12]  179 	jr	NZ, 00102$
                           00006D   180 	C$SpriteCompass.c$33$2_0$180	= .
                                    181 	.globl	C$SpriteCompass.c$33$2_0$180
                                    182 ;SpriteCompass.c:33: SpriteManagerRemoveSprite(THIS);
      00006D 21r00r00         [12]  183 	ld	hl, #_THIS
      000070 2A               [ 8]  184 	ld	a, (hl+)
      000071 5F               [ 4]  185 	ld	e, a
      000072 56               [ 8]  186 	ld	d, (hl)
      000073 CDr00r00         [24]  187 	call	_SpriteManagerRemoveSprite
      000076                        188 00102$:
                           000076   189 	C$SpriteCompass.c$37$2_0$181	= .
                                    190 	.globl	C$SpriteCompass.c$37$2_0$181
                                    191 ;SpriteCompass.c:37: INT8 using_sin = sin;
      000076 21r00r00         [12]  192 	ld	hl, #_sin
      000079 4E               [ 8]  193 	ld	c, (hl)
                           00007A   194 	C$SpriteCompass.c$39$1_1$181	= .
                                    195 	.globl	C$SpriteCompass.c$39$1_1$181
                                    196 ;SpriteCompass.c:39: if(sin < 0) {using_sin = -sin;}
      00007A CB 7E            [12]  197 	bit	7, (hl)
      00007C 28 03            [12]  198 	jr	Z, 00106$
      00007E AF               [ 4]  199 	xor	a, a
      00007F 96               [ 8]  200 	sub	a, (hl)
      000080 4F               [ 4]  201 	ld	c, a
      000081                        202 00106$:
                           000081   203 	C$SpriteCompass.c$40$1_1$179	= .
                                    204 	.globl	C$SpriteCompass.c$40$1_1$179
                                    205 ;SpriteCompass.c:40: if(using_sin >= 0 && using_sin <= 30){//tratto come se stesse andando orizzontale
      000081 59               [ 4]  206 	ld	e, c
      000082 3E 1E            [ 8]  207 	ld	a,#0x1e
      000084 57               [ 4]  208 	ld	d,a
      000085 91               [ 4]  209 	sub	a, c
      000086 CB 7B            [ 8]  210 	bit	7, e
      000088 28 07            [12]  211 	jr	Z, 00257$
      00008A CB 7A            [ 8]  212 	bit	7, d
      00008C 20 08            [12]  213 	jr	NZ, 00258$
      00008E BF               [ 4]  214 	cp	a, a
      00008F 18 05            [12]  215 	jr	00258$
      000091                        216 00257$:
      000091 CB 7A            [ 8]  217 	bit	7, d
      000093 28 01            [12]  218 	jr	Z, 00258$
      000095 37               [ 4]  219 	scf
      000096                        220 00258$:
      000096 3E 00            [ 8]  221 	ld	a, #0x00
      000098 17               [ 4]  222 	rla
      000099 47               [ 4]  223 	ld	b, a
      00009A CB 79            [ 8]  224 	bit	7, c
      00009C 20 16            [12]  225 	jr	NZ, 00118$
      00009E CB 40            [ 8]  226 	bit	0, b
      0000A0 20 12            [12]  227 	jr	NZ, 00118$
                           0000A2   228 	C$SpriteCompass.c$41$2_1$184	= .
                                    229 	.globl	C$SpriteCompass.c$41$2_1$184
                                    230 ;SpriteCompass.c:41: SetSpriteAnim(THIS, a_compass_h, 1);
      0000A2 3E 01            [ 8]  231 	ld	a, #0x01
      0000A4 F5               [16]  232 	push	af
      0000A5 33               [ 8]  233 	inc	sp
      0000A6 01r1Fr00         [12]  234 	ld	bc, #_a_compass_h
      0000A9 21r00r00         [12]  235 	ld	hl, #_THIS
      0000AC 2A               [ 8]  236 	ld	a, (hl+)
      0000AD 5F               [ 4]  237 	ld	e, a
      0000AE 56               [ 8]  238 	ld	d, (hl)
      0000AF CDr00r00         [24]  239 	call	_SetSpriteAnim
      0000B2 18 74            [12]  240 	jr	00119$
      0000B4                        241 00118$:
                           0000B4   242 	C$SpriteCompass.c$42$1_1$181	= .
                                    243 	.globl	C$SpriteCompass.c$42$1_1$181
                                    244 ;SpriteCompass.c:42: }else if(using_sin > 30 && using_sin < 54){// tratto come se stesse andando a 33 gradi
      0000B4 78               [ 4]  245 	ld	a, b
      0000B5 B7               [ 4]  246 	or	a, a
      0000B6 28 19            [12]  247 	jr	Z, 00114$
      0000B8 79               [ 4]  248 	ld	a, c
      0000B9 EE 80            [ 8]  249 	xor	a, #0x80
      0000BB D6 B6            [ 8]  250 	sub	a, #0xb6
      0000BD 30 12            [12]  251 	jr	NC, 00114$
                           0000BF   252 	C$SpriteCompass.c$43$2_1$185	= .
                                    253 	.globl	C$SpriteCompass.c$43$2_1$185
                                    254 ;SpriteCompass.c:43: SetSpriteAnim(THIS, a_compass_33, 1);
      0000BF 3E 01            [ 8]  255 	ld	a, #0x01
      0000C1 F5               [16]  256 	push	af
      0000C2 33               [ 8]  257 	inc	sp
      0000C3 01r21r00         [12]  258 	ld	bc, #_a_compass_33
      0000C6 21r00r00         [12]  259 	ld	hl, #_THIS
      0000C9 2A               [ 8]  260 	ld	a, (hl+)
      0000CA 5F               [ 4]  261 	ld	e, a
      0000CB 56               [ 8]  262 	ld	d, (hl)
      0000CC CDr00r00         [24]  263 	call	_SetSpriteAnim
      0000CF 18 57            [12]  264 	jr	00119$
      0000D1                        265 00114$:
                           0000D1   266 	C$SpriteCompass.c$44$1_1$181	= .
                                    267 	.globl	C$SpriteCompass.c$44$1_1$181
                                    268 ;SpriteCompass.c:44: }else if(using_sin > 54 && using_sin < 78){// tratto come se stesse andando a 66 gradi
      0000D1 59               [ 4]  269 	ld	e, c
      0000D2 3E 36            [ 8]  270 	ld	a,#0x36
      0000D4 57               [ 4]  271 	ld	d,a
      0000D5 91               [ 4]  272 	sub	a, c
      0000D6 CB 7B            [ 8]  273 	bit	7, e
      0000D8 28 07            [12]  274 	jr	Z, 00259$
      0000DA CB 7A            [ 8]  275 	bit	7, d
      0000DC 20 08            [12]  276 	jr	NZ, 00260$
      0000DE BF               [ 4]  277 	cp	a, a
      0000DF 18 05            [12]  278 	jr	00260$
      0000E1                        279 00259$:
      0000E1 CB 7A            [ 8]  280 	bit	7, d
      0000E3 28 01            [12]  281 	jr	Z, 00260$
      0000E5 37               [ 4]  282 	scf
      0000E6                        283 00260$:
      0000E6 30 19            [12]  284 	jr	NC, 00110$
      0000E8 79               [ 4]  285 	ld	a, c
      0000E9 EE 80            [ 8]  286 	xor	a, #0x80
      0000EB D6 CE            [ 8]  287 	sub	a, #0xce
      0000ED 30 12            [12]  288 	jr	NC, 00110$
                           0000EF   289 	C$SpriteCompass.c$45$2_1$186	= .
                                    290 	.globl	C$SpriteCompass.c$45$2_1$186
                                    291 ;SpriteCompass.c:45: SetSpriteAnim(THIS, a_compass_66, 1);
      0000EF 3E 01            [ 8]  292 	ld	a, #0x01
      0000F1 F5               [16]  293 	push	af
      0000F2 33               [ 8]  294 	inc	sp
      0000F3 01r23r00         [12]  295 	ld	bc, #_a_compass_66
      0000F6 21r00r00         [12]  296 	ld	hl, #_THIS
      0000F9 2A               [ 8]  297 	ld	a, (hl+)
      0000FA 5F               [ 4]  298 	ld	e, a
      0000FB 56               [ 8]  299 	ld	d, (hl)
      0000FC CDr00r00         [24]  300 	call	_SetSpriteAnim
      0000FF 18 27            [12]  301 	jr	00119$
      000101                        302 00110$:
                           000101   303 	C$SpriteCompass.c$46$1_1$181	= .
                                    304 	.globl	C$SpriteCompass.c$46$1_1$181
                                    305 ;SpriteCompass.c:46: }else if(using_sin > 78){ // tratto come se stesse andando orizzontale destra
      000101 59               [ 4]  306 	ld	e, c
      000102 3E 4E            [ 8]  307 	ld	a,#0x4e
      000104 57               [ 4]  308 	ld	d,a
      000105 91               [ 4]  309 	sub	a, c
      000106 CB 7B            [ 8]  310 	bit	7, e
      000108 28 07            [12]  311 	jr	Z, 00261$
      00010A CB 7A            [ 8]  312 	bit	7, d
      00010C 20 08            [12]  313 	jr	NZ, 00262$
      00010E BF               [ 4]  314 	cp	a, a
      00010F 18 05            [12]  315 	jr	00262$
      000111                        316 00261$:
      000111 CB 7A            [ 8]  317 	bit	7, d
      000113 28 01            [12]  318 	jr	Z, 00262$
      000115 37               [ 4]  319 	scf
      000116                        320 00262$:
      000116 30 10            [12]  321 	jr	NC, 00119$
                           000118   322 	C$SpriteCompass.c$47$2_1$187	= .
                                    323 	.globl	C$SpriteCompass.c$47$2_1$187
                                    324 ;SpriteCompass.c:47: SetSpriteAnim(THIS, a_compass_v, 1);
      000118 3E 01            [ 8]  325 	ld	a, #0x01
      00011A F5               [16]  326 	push	af
      00011B 33               [ 8]  327 	inc	sp
      00011C 01r25r00         [12]  328 	ld	bc, #_a_compass_v
      00011F 21r00r00         [12]  329 	ld	hl, #_THIS
      000122 2A               [ 8]  330 	ld	a, (hl+)
      000123 5F               [ 4]  331 	ld	e, a
      000124 56               [ 8]  332 	ld	d, (hl)
      000125 CDr00r00         [24]  333 	call	_SetSpriteAnim
      000128                        334 00119$:
                           000128   335 	C$SpriteCompass.c$49$1_1$181	= .
                                    336 	.globl	C$SpriteCompass.c$49$1_1$181
                                    337 ;SpriteCompass.c:49: if(sin > 0 && cos > 0){
      000128 21r00r00         [12]  338 	ld	hl, #_sin
      00012B 5E               [ 8]  339 	ld	e, (hl)
      00012C AF               [ 4]  340 	xor	a, a
      00012D 57               [ 4]  341 	ld	d, a
      00012E 96               [ 8]  342 	sub	a, (hl)
      00012F CB 7B            [ 8]  343 	bit	7, e
      000131 28 07            [12]  344 	jr	Z, 00263$
      000133 CB 7A            [ 8]  345 	bit	7, d
      000135 20 08            [12]  346 	jr	NZ, 00264$
      000137 BF               [ 4]  347 	cp	a, a
      000138 18 05            [12]  348 	jr	00264$
      00013A                        349 00263$:
      00013A CB 7A            [ 8]  350 	bit	7, d
      00013C 28 01            [12]  351 	jr	Z, 00264$
      00013E 37               [ 4]  352 	scf
      00013F                        353 00264$:
      00013F 30 25            [12]  354 	jr	NC, 00122$
      000141 21r00r00         [12]  355 	ld	hl, #_cos
      000144 5E               [ 8]  356 	ld	e, (hl)
      000145 AF               [ 4]  357 	xor	a, a
      000146 57               [ 4]  358 	ld	d, a
      000147 96               [ 8]  359 	sub	a, (hl)
      000148 CB 7B            [ 8]  360 	bit	7, e
      00014A 28 07            [12]  361 	jr	Z, 00265$
      00014C CB 7A            [ 8]  362 	bit	7, d
      00014E 20 08            [12]  363 	jr	NZ, 00266$
      000150 BF               [ 4]  364 	cp	a, a
      000151 18 05            [12]  365 	jr	00266$
      000153                        366 00265$:
      000153 CB 7A            [ 8]  367 	bit	7, d
      000155 28 01            [12]  368 	jr	Z, 00266$
      000157 37               [ 4]  369 	scf
      000158                        370 00266$:
      000158 30 0C            [12]  371 	jr	NC, 00122$
                           00015A   372 	C$SpriteCompass.c$50$2_1$188	= .
                                    373 	.globl	C$SpriteCompass.c$50$2_1$188
                                    374 ;SpriteCompass.c:50: THIS->mirror = NO_MIRROR;
      00015A 21r00r00         [12]  375 	ld	hl, #_THIS
      00015D 2A               [ 8]  376 	ld	a, (hl+)
      00015E 4F               [ 4]  377 	ld	c, a
      00015F 46               [ 8]  378 	ld	b, (hl)
      000160 21 10 00         [12]  379 	ld	hl, #0x0010
      000163 09               [ 8]  380 	add	hl, bc
      000164 36 00            [12]  381 	ld	(hl), #0x00
      000166                        382 00122$:
                           000166   383 	C$SpriteCompass.c$52$1_1$181	= .
                                    384 	.globl	C$SpriteCompass.c$52$1_1$181
                                    385 ;SpriteCompass.c:52: if(sin > 0 && cos < 0){
      000166 21r00r00         [12]  386 	ld	hl, #_sin
      000169 5E               [ 8]  387 	ld	e, (hl)
      00016A AF               [ 4]  388 	xor	a, a
      00016B 57               [ 4]  389 	ld	d, a
      00016C 96               [ 8]  390 	sub	a, (hl)
      00016D CB 7B            [ 8]  391 	bit	7, e
      00016F 28 07            [12]  392 	jr	Z, 00267$
      000171 CB 7A            [ 8]  393 	bit	7, d
      000173 20 08            [12]  394 	jr	NZ, 00268$
      000175 BF               [ 4]  395 	cp	a, a
      000176 18 05            [12]  396 	jr	00268$
      000178                        397 00267$:
      000178 CB 7A            [ 8]  398 	bit	7, d
      00017A 28 01            [12]  399 	jr	Z, 00268$
      00017C 37               [ 4]  400 	scf
      00017D                        401 00268$:
      00017D 30 13            [12]  402 	jr	NC, 00125$
      00017F FAr00r00         [16]  403 	ld	a, (#_cos)
      000182 CB 7F            [ 8]  404 	bit	7, a
      000184 28 0C            [12]  405 	jr	Z, 00125$
                           000186   406 	C$SpriteCompass.c$53$2_1$189	= .
                                    407 	.globl	C$SpriteCompass.c$53$2_1$189
                                    408 ;SpriteCompass.c:53: THIS->mirror = V_MIRROR;
      000186 21r00r00         [12]  409 	ld	hl, #_THIS
      000189 2A               [ 8]  410 	ld	a, (hl+)
      00018A 4F               [ 4]  411 	ld	c, a
      00018B 46               [ 8]  412 	ld	b, (hl)
      00018C 21 10 00         [12]  413 	ld	hl, #0x0010
      00018F 09               [ 8]  414 	add	hl, bc
      000190 36 02            [12]  415 	ld	(hl), #0x02
      000192                        416 00125$:
                           000192   417 	C$SpriteCompass.c$55$1_1$181	= .
                                    418 	.globl	C$SpriteCompass.c$55$1_1$181
                                    419 ;SpriteCompass.c:55: if(sin < 0 && cos > 0){
      000192 FAr00r00         [16]  420 	ld	a, (#_sin)
      000195 CB 7F            [ 8]  421 	bit	7, a
      000197 28 25            [12]  422 	jr	Z, 00128$
      000199 21r00r00         [12]  423 	ld	hl, #_cos
      00019C 5E               [ 8]  424 	ld	e, (hl)
      00019D AF               [ 4]  425 	xor	a, a
      00019E 57               [ 4]  426 	ld	d, a
      00019F 96               [ 8]  427 	sub	a, (hl)
      0001A0 CB 7B            [ 8]  428 	bit	7, e
      0001A2 28 07            [12]  429 	jr	Z, 00269$
      0001A4 CB 7A            [ 8]  430 	bit	7, d
      0001A6 20 08            [12]  431 	jr	NZ, 00270$
      0001A8 BF               [ 4]  432 	cp	a, a
      0001A9 18 05            [12]  433 	jr	00270$
      0001AB                        434 00269$:
      0001AB CB 7A            [ 8]  435 	bit	7, d
      0001AD 28 01            [12]  436 	jr	Z, 00270$
      0001AF 37               [ 4]  437 	scf
      0001B0                        438 00270$:
      0001B0 30 0C            [12]  439 	jr	NC, 00128$
                           0001B2   440 	C$SpriteCompass.c$56$2_1$190	= .
                                    441 	.globl	C$SpriteCompass.c$56$2_1$190
                                    442 ;SpriteCompass.c:56: THIS->mirror = H_MIRROR;
      0001B2 21r00r00         [12]  443 	ld	hl, #_THIS
      0001B5 2A               [ 8]  444 	ld	a, (hl+)
      0001B6 4F               [ 4]  445 	ld	c, a
      0001B7 46               [ 8]  446 	ld	b, (hl)
      0001B8 21 10 00         [12]  447 	ld	hl, #0x0010
      0001BB 09               [ 8]  448 	add	hl, bc
      0001BC 36 01            [12]  449 	ld	(hl), #0x01
      0001BE                        450 00128$:
                           0001BE   451 	C$SpriteCompass.c$58$1_1$181	= .
                                    452 	.globl	C$SpriteCompass.c$58$1_1$181
                                    453 ;SpriteCompass.c:58: if(sin < 0 && cos < 0){
      0001BE FAr00r00         [16]  454 	ld	a, (#_sin)
      0001C1 CB 7F            [ 8]  455 	bit	7, a
      0001C3 28 13            [12]  456 	jr	Z, 00133$
      0001C5 FAr00r00         [16]  457 	ld	a, (#_cos)
      0001C8 CB 7F            [ 8]  458 	bit	7, a
      0001CA 28 0C            [12]  459 	jr	Z, 00133$
                           0001CC   460 	C$SpriteCompass.c$59$2_1$191	= .
                                    461 	.globl	C$SpriteCompass.c$59$2_1$191
                                    462 ;SpriteCompass.c:59: THIS->mirror = HV_MIRROR;
      0001CC 21r00r00         [12]  463 	ld	hl, #_THIS
      0001CF 2A               [ 8]  464 	ld	a, (hl+)
      0001D0 4F               [ 4]  465 	ld	c, a
      0001D1 46               [ 8]  466 	ld	b, (hl)
      0001D2 21 10 00         [12]  467 	ld	hl, #0x0010
      0001D5 09               [ 8]  468 	add	hl, bc
      0001D6 36 03            [12]  469 	ld	(hl), #0x03
      0001D8                        470 00133$:
                           0001D8   471 	C$SpriteCompass.c$61$1_1$179	= .
                                    472 	.globl	C$SpriteCompass.c$61$1_1$179
                                    473 ;SpriteCompass.c:61: }
      0001D8 33               [ 8]  474 	inc	sp
      0001D9 33               [ 8]  475 	inc	sp
                           0001DA   476 	C$SpriteCompass.c$61$1_1$179	= .
                                    477 	.globl	C$SpriteCompass.c$61$1_1$179
                           0001DA   478 	XG$Update_SpriteCompass$0$0	= .
                                    479 	.globl	XG$Update_SpriteCompass$0$0
      0001DA C9               [16]  480 	ret
                           0001DB   481 	G$Destroy_SpriteCompass$0$0	= .
                                    482 	.globl	G$Destroy_SpriteCompass$0$0
                           0001DB   483 	C$SpriteCompass.c$63$1_1$193	= .
                                    484 	.globl	C$SpriteCompass.c$63$1_1$193
                                    485 ;SpriteCompass.c:63: void DESTROY() {
                                    486 ;	---------------------------------
                                    487 ; Function Destroy_SpriteCompass
                                    488 ; ---------------------------------
      0001DB                        489 _Destroy_SpriteCompass::
                           0001DB   490 	C$SpriteCompass.c$64$1_1$193	= .
                                    491 	.globl	C$SpriteCompass.c$64$1_1$193
                                    492 ;SpriteCompass.c:64: }
                           0001DB   493 	C$SpriteCompass.c$64$1_1$193	= .
                                    494 	.globl	C$SpriteCompass.c$64$1_1$193
                           0001DB   495 	XG$Destroy_SpriteCompass$0$0	= .
                                    496 	.globl	XG$Destroy_SpriteCompass$0$0
      0001DB C9               [16]  497 	ret
                                    498 	.area _CODE_255
                                    499 	.area _INITIALIZER
                                    500 	.area _CABS (ABS)
