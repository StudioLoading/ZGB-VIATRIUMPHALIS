                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14228 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module SpriteHorse
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _Destroy_SpriteHorse
                                     12 	.globl _Update_SpriteHorse
                                     13 	.globl _Start_SpriteHorse
                                     14 	.globl b_use_weapon
                                     15 	.globl _use_weapon
                                     16 	.globl b_update_hp
                                     17 	.globl _update_hp
                                     18 	.globl _SpriteManagerRemoveSprite
                                     19 	.globl _SpriteManagerAdd
                                     20 	.globl _GetScrollTile
                                     21 	.globl _CheckCollision
                                     22 	.globl _TranslateSprite
                                     23 	.globl _SetSpriteAnim
                                     24 	.globl _onwater_countdown
                                     25 	.globl _s_flame
                                     26 	.globl _onfire_countdown
                                     27 	.globl _orme_spawned
                                     28 	.globl _turn_verse
                                     29 	.globl _past_coll_tile
                                     30 	.globl _turn_samepressure_counter
                                     31 	.globl _cos
                                     32 	.globl _sin
                                     33 	.globl _turn
                                     34 	.globl _no_whip_counter_max
                                     35 	.globl _no_whip_over_stamina
                                     36 	.globl _no_whip_counter
                                     37 	.globl _stamina_verso
                                     38 	.globl _stamina_current
                                     39 	.globl _euphoria_max
                                     40 	.globl _euphoria_min
                                     41 	.globl _whip_counter_max
                                     42 	.globl _whip_counter
                                     43 	.globl _whip_power_over_stamina
                                     44 	.globl _frm_skip
                                     45 	.globl _vx
                                     46 	.globl _vy
                                     47 	.globl _velocity
                                     48 	.globl _velocity_counter
                                     49 	.globl _a_horse_h_idle
                                     50 	.globl _a_horse_hit
                                     51 	.globl _a_horse_h
                                     52 	.globl ___bank_SpriteHorse
                                     53 ;--------------------------------------------------------
                                     54 ; special function registers
                                     55 ;--------------------------------------------------------
                                     56 ;--------------------------------------------------------
                                     57 ; ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area _DATA
                                     60 ;--------------------------------------------------------
                                     61 ; ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area _INITIALIZED
                           000000    64 G$velocity_counter$0_0$0==.
      000000                         65 _velocity_counter::
      000000                         66 	.ds 1
                           000001    67 G$velocity$0_0$0==.
      000001                         68 _velocity::
      000001                         69 	.ds 1
                           000002    70 G$vy$0_0$0==.
      000002                         71 _vy::
      000002                         72 	.ds 1
                           000003    73 G$vx$0_0$0==.
      000003                         74 _vx::
      000003                         75 	.ds 1
                           000004    76 G$frm_skip$0_0$0==.
      000004                         77 _frm_skip::
      000004                         78 	.ds 1
                           000005    79 G$whip_power_over_stamina$0_0$0==.
      000005                         80 _whip_power_over_stamina::
      000005                         81 	.ds 1
                           000006    82 G$whip_counter$0_0$0==.
      000006                         83 _whip_counter::
      000006                         84 	.ds 1
                           000007    85 G$whip_counter_max$0_0$0==.
      000007                         86 _whip_counter_max::
      000007                         87 	.ds 1
                           000008    88 G$euphoria_min$0_0$0==.
      000008                         89 _euphoria_min::
      000008                         90 	.ds 2
                           00000A    91 G$euphoria_max$0_0$0==.
      00000A                         92 _euphoria_max::
      00000A                         93 	.ds 2
                           00000C    94 G$stamina_current$0_0$0==.
      00000C                         95 _stamina_current::
      00000C                         96 	.ds 2
                           00000E    97 G$stamina_verso$0_0$0==.
      00000E                         98 _stamina_verso::
      00000E                         99 	.ds 1
                           00000F   100 G$no_whip_counter$0_0$0==.
      00000F                        101 _no_whip_counter::
      00000F                        102 	.ds 1
                           000010   103 G$no_whip_over_stamina$0_0$0==.
      000010                        104 _no_whip_over_stamina::
      000010                        105 	.ds 1
                           000011   106 G$no_whip_counter_max$0_0$0==.
      000011                        107 _no_whip_counter_max::
      000011                        108 	.ds 1
                           000012   109 G$turn$0_0$0==.
      000012                        110 _turn::
      000012                        111 	.ds 1
                           000013   112 G$sin$0_0$0==.
      000013                        113 _sin::
      000013                        114 	.ds 1
                           000014   115 G$cos$0_0$0==.
      000014                        116 _cos::
      000014                        117 	.ds 1
                           000015   118 G$turn_samepressure_counter$0_0$0==.
      000015                        119 _turn_samepressure_counter::
      000015                        120 	.ds 1
                           000016   121 G$past_coll_tile$0_0$0==.
      000016                        122 _past_coll_tile::
      000016                        123 	.ds 1
                           000017   124 G$turn_verse$0_0$0==.
      000017                        125 _turn_verse::
      000017                        126 	.ds 1
                           000018   127 G$orme_spawned$0_0$0==.
      000018                        128 _orme_spawned::
      000018                        129 	.ds 1
                           000019   130 G$onfire_countdown$0_0$0==.
      000019                        131 _onfire_countdown::
      000019                        132 	.ds 2
                           00001B   133 G$s_flame$0_0$0==.
      00001B                        134 _s_flame::
      00001B                        135 	.ds 2
                           00001D   136 G$onwater_countdown$0_0$0==.
      00001D                        137 _onwater_countdown::
      00001D                        138 	.ds 1
                                    139 ;--------------------------------------------------------
                                    140 ; absolute external ram data
                                    141 ;--------------------------------------------------------
                                    142 	.area _DABS (ABS)
                                    143 ;--------------------------------------------------------
                                    144 ; global & static initialisations
                                    145 ;--------------------------------------------------------
                                    146 	.area _HOME
                                    147 	.area _GSINIT
                                    148 	.area _GSFINAL
                                    149 	.area _GSINIT
                                    150 ;--------------------------------------------------------
                                    151 ; Home
                                    152 ;--------------------------------------------------------
                                    153 	.area _HOME
                                    154 	.area _HOME
                                    155 ;--------------------------------------------------------
                                    156 ; code
                                    157 ;--------------------------------------------------------
                                    158 	.area _CODE_255
                           000000   159 	G$Start_SpriteHorse$0$0	= .
                                    160 	.globl	G$Start_SpriteHorse$0$0
                           000000   161 	C$SpriteHorse.c$67$0_0$193	= .
                                    162 	.globl	C$SpriteHorse.c$67$0_0$193
                                    163 ;SpriteHorse.c:67: void START() {
                                    164 ;	---------------------------------
                                    165 ; Function Start_SpriteHorse
                                    166 ; ---------------------------------
      000000                        167 _Start_SpriteHorse::
                           000000   168 	C$SpriteHorse.c$68$1_0$193	= .
                                    169 	.globl	C$SpriteHorse.c$68$1_0$193
                                    170 ;SpriteHorse.c:68: SetSpriteAnim(THIS, a_horse_h, 16u);
      000000 3E 10            [ 8]  171 	ld	a, #0x10
      000002 F5               [16]  172 	push	af
      000003 33               [ 8]  173 	inc	sp
      000004 01r47r00         [12]  174 	ld	bc, #_a_horse_h
      000007 21r00r00         [12]  175 	ld	hl, #_THIS
      00000A 2A               [ 8]  176 	ld	a, (hl+)
      00000B 5F               [ 4]  177 	ld	e, a
      00000C 56               [ 8]  178 	ld	d, (hl)
      00000D CDr00r00         [24]  179 	call	_SetSpriteAnim
                           000010   180 	C$SpriteHorse.c$69$1_0$193	= .
                                    181 	.globl	C$SpriteHorse.c$69$1_0$193
                                    182 ;SpriteHorse.c:69: frm_skip = velocity_counter;
      000010 FAr00r00         [16]  183 	ld	a, (#_velocity_counter)
      000013 EAr04r00         [16]  184 	ld	(#_frm_skip),a
                           000016   185 	C$SpriteHorse.c$70$1_0$193	= .
                                    186 	.globl	C$SpriteHorse.c$70$1_0$193
                                    187 ;SpriteHorse.c:70: THIS->lim_x = 1000;
      000016 21r00r00         [12]  188 	ld	hl, #_THIS
      000019 2A               [ 8]  189 	ld	a, (hl+)
      00001A 4F               [ 4]  190 	ld	c, a
      00001B 46               [ 8]  191 	ld	b, (hl)
      00001C 21 15 00         [12]  192 	ld	hl, #0x0015
      00001F 09               [ 8]  193 	add	hl, bc
      000020 3E E8            [ 8]  194 	ld	a, #0xe8
      000022 22               [ 8]  195 	ld	(hl+), a
      000023 36 03            [12]  196 	ld	(hl), #0x03
                           000025   197 	C$SpriteHorse.c$71$1_0$193	= .
                                    198 	.globl	C$SpriteHorse.c$71$1_0$193
                                    199 ;SpriteHorse.c:71: THIS->lim_y = 500;
      000025 21r00r00         [12]  200 	ld	hl, #_THIS
      000028 2A               [ 8]  201 	ld	a, (hl+)
      000029 4F               [ 4]  202 	ld	c, a
      00002A 46               [ 8]  203 	ld	b, (hl)
      00002B 21 17 00         [12]  204 	ld	hl, #0x0017
      00002E 09               [ 8]  205 	add	hl, bc
      00002F 3E F4            [ 8]  206 	ld	a, #0xf4
      000031 22               [ 8]  207 	ld	(hl+), a
      000032 36 01            [12]  208 	ld	(hl), #0x01
                           000034   209 	C$SpriteHorse.c$72$1_0$193	= .
                                    210 	.globl	C$SpriteHorse.c$72$1_0$193
                                    211 ;SpriteHorse.c:72: onfire_countdown = -1;
      000034 21r19r00         [12]  212 	ld	hl, #_onfire_countdown
      000037 3E FF            [ 8]  213 	ld	a, #0xff
      000039 22               [ 8]  214 	ld	(hl+), a
      00003A 36 FF            [12]  215 	ld	(hl), #0xff
                           00003C   216 	C$SpriteHorse.c$73$1_0$193	= .
                                    217 	.globl	C$SpriteHorse.c$73$1_0$193
                                    218 ;SpriteHorse.c:73: turn_samepressure_counter = 0;
      00003C 21r15r00         [12]  219 	ld	hl, #_turn_samepressure_counter
      00003F 36 00            [12]  220 	ld	(hl), #0x00
                           000041   221 	C$SpriteHorse.c$74$1_0$193	= .
                                    222 	.globl	C$SpriteHorse.c$74$1_0$193
                                    223 ;SpriteHorse.c:74: turn = 0;
      000041 21r12r00         [12]  224 	ld	hl, #_turn
      000044 36 00            [12]  225 	ld	(hl), #0x00
                           000046   226 	C$SpriteHorse.c$75$1_0$193	= .
                                    227 	.globl	C$SpriteHorse.c$75$1_0$193
                                    228 ;SpriteHorse.c:75: }
                           000046   229 	C$SpriteHorse.c$75$1_0$193	= .
                                    230 	.globl	C$SpriteHorse.c$75$1_0$193
                           000046   231 	XG$Start_SpriteHorse$0$0	= .
                                    232 	.globl	XG$Start_SpriteHorse$0$0
      000046 C9               [16]  233 	ret
                           0000FF   234 G$__bank_SpriteHorse$0_0$0 == 0x00ff
                           0000FF   235 ___bank_SpriteHorse	=	0x00ff
                           000047   236 G$a_horse_h$0_0$0 == .
      000047                        237 _a_horse_h:
      000047 08                     238 	.db #0x08	; 8
      000048 00                     239 	.db #0x00	; 0
      000049 01                     240 	.db #0x01	; 1
      00004A 02                     241 	.db #0x02	; 2
      00004B 03                     242 	.db #0x03	; 3
      00004C 04                     243 	.db #0x04	; 4
      00004D 05                     244 	.db #0x05	; 5
      00004E 06                     245 	.db #0x06	; 6
      00004F 07                     246 	.db #0x07	; 7
                           000050   247 G$a_horse_hit$0_0$0 == .
      000050                        248 _a_horse_hit:
      000050 0F                     249 	.db #0x0f	; 15
      000051 00                     250 	.db #0x00	; 0
      000052 01                     251 	.db #0x01	; 1
      000053 00                     252 	.db #0x00	; 0
      000054 02                     253 	.db #0x02	; 2
      000055 00                     254 	.db #0x00	; 0
      000056 03                     255 	.db #0x03	; 3
      000057 00                     256 	.db #0x00	; 0
      000058 04                     257 	.db #0x04	; 4
      000059 00                     258 	.db #0x00	; 0
      00005A 05                     259 	.db #0x05	; 5
      00005B 00                     260 	.db #0x00	; 0
      00005C 06                     261 	.db #0x06	; 6
      00005D 00                     262 	.db #0x00	; 0
      00005E 07                     263 	.db #0x07	; 7
      00005F 00                     264 	.db #0x00	; 0
                           000060   265 G$a_horse_h_idle$0_0$0 == .
      000060                        266 _a_horse_h_idle:
      000060 01                     267 	.db #0x01	; 1
      000061 06                     268 	.db #0x06	; 6
                           000062   269 	G$Update_SpriteHorse$0$0	= .
                                    270 	.globl	G$Update_SpriteHorse$0$0
                           000062   271 	C$SpriteHorse.c$77$1_0$194	= .
                                    272 	.globl	C$SpriteHorse.c$77$1_0$194
                                    273 ;SpriteHorse.c:77: void UPDATE() {
                                    274 ;	---------------------------------
                                    275 ; Function Update_SpriteHorse
                                    276 ; ---------------------------------
      000062                        277 _Update_SpriteHorse::
      000062 E8 F7            [16]  278 	add	sp, #-9
                           000064   279 	C$SpriteHorse.c$79$1_0$194	= .
                                    280 	.globl	C$SpriteHorse.c$79$1_0$194
                                    281 ;SpriteHorse.c:79: if(track_ended == 1u){
      000064 FAr00r00         [16]  282 	ld	a, (#_track_ended)
      000067 3D               [ 4]  283 	dec	a
      000068 20 45            [12]  284 	jr	NZ, 00102$
                           00006A   285 	C$SpriteHorse.c$80$2_3$194	= .
                                    286 	.globl	C$SpriteHorse.c$80$2_3$194
                                    287 ;SpriteHorse.c:80: THIS->x += vx;
      00006A 21r00r00         [12]  288 	ld	hl, #_THIS
      00006D 2A               [ 8]  289 	ld	a, (hl+)
      00006E 46               [ 8]  290 	ld	b, (hl)
      00006F C6 0C            [ 8]  291 	add	a, #0x0c
      000071 4F               [ 4]  292 	ld	c, a
      000072 30 01            [12]  293 	jr	NC, 01007$
      000074 04               [ 4]  294 	inc	b
      000075                        295 01007$:
      000075 69               [ 4]  296 	ld	l, c
      000076 60               [ 4]  297 	ld	h, b
      000077 2A               [ 8]  298 	ld	a,	(hl+)
      000078 66               [ 8]  299 	ld	h, (hl)
                                    300 ;	spillPairReg hl
      000079 6F               [ 4]  301 	ld	l, a
                                    302 ;	spillPairReg hl
                                    303 ;	spillPairReg hl
      00007A E5               [16]  304 	push	hl
      00007B FAr03r00         [16]  305 	ld	a, (#_vx)
      00007E E1               [12]  306 	pop	hl
      00007F 5F               [ 4]  307 	ld	e, a
      000080 07               [ 4]  308 	rlca
      000081 9F               [ 4]  309 	sbc	a, a
      000082 57               [ 4]  310 	ld	d, a
      000083 19               [ 8]  311 	add	hl, de
      000084 5D               [ 4]  312 	ld	e, l
      000085 54               [ 4]  313 	ld	d, h
      000086 7B               [ 4]  314 	ld	a, e
      000087 02               [ 8]  315 	ld	(bc), a
      000088 03               [ 8]  316 	inc	bc
      000089 7A               [ 4]  317 	ld	a, d
      00008A 02               [ 8]  318 	ld	(bc), a
      00008B 21r00r00         [12]  319 	ld	hl, #_THIS
      00008E 2A               [ 8]  320 	ld	a, (hl+)
      00008F 46               [ 8]  321 	ld	b, (hl)
                           000090   322 	C$SpriteHorse.c$81$2_3$194	= .
                                    323 	.globl	C$SpriteHorse.c$81$2_3$194
                                    324 ;SpriteHorse.c:81: THIS->y += vy;
      000090 C6 0E            [ 8]  325 	add	a, #0x0e
      000092 4F               [ 4]  326 	ld	c, a
      000093 30 01            [12]  327 	jr	NC, 01008$
      000095 04               [ 4]  328 	inc	b
      000096                        329 01008$:
      000096 69               [ 4]  330 	ld	l, c
      000097 60               [ 4]  331 	ld	h, b
      000098 2A               [ 8]  332 	ld	a,	(hl+)
      000099 66               [ 8]  333 	ld	h, (hl)
                                    334 ;	spillPairReg hl
      00009A 6F               [ 4]  335 	ld	l, a
                                    336 ;	spillPairReg hl
                                    337 ;	spillPairReg hl
      00009B E5               [16]  338 	push	hl
      00009C FAr02r00         [16]  339 	ld	a, (#_vy)
      00009F E1               [12]  340 	pop	hl
      0000A0 5F               [ 4]  341 	ld	e, a
      0000A1 07               [ 4]  342 	rlca
      0000A2 9F               [ 4]  343 	sbc	a, a
      0000A3 57               [ 4]  344 	ld	d, a
      0000A4 19               [ 8]  345 	add	hl, de
      0000A5 5D               [ 4]  346 	ld	e, l
      0000A6 54               [ 4]  347 	ld	d, h
      0000A7 7B               [ 4]  348 	ld	a, e
      0000A8 02               [ 8]  349 	ld	(bc), a
      0000A9 03               [ 8]  350 	inc	bc
      0000AA 7A               [ 4]  351 	ld	a, d
      0000AB 02               [ 8]  352 	ld	(bc), a
                           0000AC   353 	C$SpriteHorse.c$82$2_0$195	= .
                                    354 	.globl	C$SpriteHorse.c$82$2_0$195
                                    355 ;SpriteHorse.c:82: return;
      0000AC C3r4Cr0B         [16]  356 	jp	00309$
      0000AF                        357 00102$:
                           0000AF   358 	C$SpriteHorse.c$85$1_0$194	= .
                                    359 	.globl	C$SpriteHorse.c$85$1_0$194
                                    360 ;SpriteHorse.c:85: if(onwater_countdown > 0){
      0000AF 21r1Dr00         [12]  361 	ld	hl, #_onwater_countdown
      0000B2 5E               [ 8]  362 	ld	e, (hl)
      0000B3 AF               [ 4]  363 	xor	a, a
      0000B4 57               [ 4]  364 	ld	d, a
      0000B5 96               [ 8]  365 	sub	a, (hl)
      0000B6 CB 7B            [ 8]  366 	bit	7, e
      0000B8 28 07            [12]  367 	jr	Z, 01009$
      0000BA CB 7A            [ 8]  368 	bit	7, d
      0000BC 20 08            [12]  369 	jr	NZ, 01010$
      0000BE BF               [ 4]  370 	cp	a, a
      0000BF 18 05            [12]  371 	jr	01010$
      0000C1                        372 01009$:
      0000C1 CB 7A            [ 8]  373 	bit	7, d
      0000C3 28 01            [12]  374 	jr	Z, 01010$
      0000C5 37               [ 4]  375 	scf
      0000C6                        376 01010$:
      0000C6 30 04            [12]  377 	jr	NC, 00104$
                           0000C8   378 	C$SpriteHorse.c$86$2_0$196	= .
                                    379 	.globl	C$SpriteHorse.c$86$2_0$196
                                    380 ;SpriteHorse.c:86: onwater_countdown--;
      0000C8 21r1Dr00         [12]  381 	ld	hl, #_onwater_countdown
      0000CB 35               [12]  382 	dec	(hl)
      0000CC                        383 00104$:
                           0000CC   384 	C$SpriteHorse.c$93$2_3$194	= .
                                    385 	.globl	C$SpriteHorse.c$93$2_3$194
                                    386 ;SpriteHorse.c:93: no_whip_counter = no_whip_counter_max;
      0000CC 21r11r00         [12]  387 	ld	hl, #_no_whip_counter_max
      0000CF 4E               [ 8]  388 	ld	c, (hl)
                           0000D0   389 	C$SpriteHorse.c$89$1_0$194	= .
                                    390 	.globl	C$SpriteHorse.c$89$1_0$194
                                    391 ;SpriteHorse.c:89: if(whip_counter <= 0){
      0000D0 21r06r00         [12]  392 	ld	hl, #_whip_counter
      0000D3 5E               [ 8]  393 	ld	e, (hl)
      0000D4 AF               [ 4]  394 	xor	a, a
      0000D5 57               [ 4]  395 	ld	d, a
      0000D6 96               [ 8]  396 	sub	a, (hl)
      0000D7 CB 7B            [ 8]  397 	bit	7, e
      0000D9 28 07            [12]  398 	jr	Z, 01011$
      0000DB CB 7A            [ 8]  399 	bit	7, d
      0000DD 20 08            [12]  400 	jr	NZ, 01012$
      0000DF BF               [ 4]  401 	cp	a, a
      0000E0 18 05            [12]  402 	jr	01012$
      0000E2                        403 01011$:
      0000E2 CB 7A            [ 8]  404 	bit	7, d
      0000E4 28 01            [12]  405 	jr	Z, 01012$
      0000E6 37               [ 4]  406 	scf
      0000E7                        407 01012$:
      0000E7 38 2A            [12]  408 	jr	C, 00110$
                           0000E9   409 	C$SpriteHorse.c$90$2_0$197	= .
                                    410 	.globl	C$SpriteHorse.c$90$2_0$197
                                    411 ;SpriteHorse.c:90: if(KEY_TICKED(J_WHIP)){
      0000E9 FAr00r00         [16]  412 	ld	a, (#_keys)
      0000EC 21r00r00         [12]  413 	ld	hl, #_J_WHIP
      0000EF A6               [ 8]  414 	and	a,(hl)
      0000F0 28 1A            [12]  415 	jr	Z, 00106$
      0000F2 FAr00r00         [16]  416 	ld	a, (#_previous_keys)
      0000F5 21r00r00         [12]  417 	ld	hl, #_J_WHIP
      0000F8 A6               [ 8]  418 	and	a,(hl)
      0000F9 20 11            [12]  419 	jr	NZ, 00106$
                           0000FB   420 	C$SpriteHorse.c$91$3_0$198	= .
                                    421 	.globl	C$SpriteHorse.c$91$3_0$198
                                    422 ;SpriteHorse.c:91: stamina_verso = 1;
      0000FB 21r0Er00         [12]  423 	ld	hl, #_stamina_verso
      0000FE 36 01            [12]  424 	ld	(hl), #0x01
                           000100   425 	C$SpriteHorse.c$92$3_0$198	= .
                                    426 	.globl	C$SpriteHorse.c$92$3_0$198
                                    427 ;SpriteHorse.c:92: whip_counter = whip_counter_max;
      000100 FAr07r00         [16]  428 	ld	a, (#_whip_counter_max)
      000103 EAr06r00         [16]  429 	ld	(#_whip_counter),a
                           000106   430 	C$SpriteHorse.c$93$3_0$198	= .
                                    431 	.globl	C$SpriteHorse.c$93$3_0$198
                                    432 ;SpriteHorse.c:93: no_whip_counter = no_whip_counter_max;
      000106 21r0Fr00         [12]  433 	ld	hl, #_no_whip_counter
      000109 71               [ 8]  434 	ld	(hl), c
      00010A 18 0B            [12]  435 	jr	00111$
      00010C                        436 00106$:
                           00010C   437 	C$SpriteHorse.c$95$3_0$199	= .
                                    438 	.globl	C$SpriteHorse.c$95$3_0$199
                                    439 ;SpriteHorse.c:95: stamina_verso = -1;
      00010C 21r0Er00         [12]  440 	ld	hl, #_stamina_verso
      00010F 36 FF            [12]  441 	ld	(hl), #0xff
      000111 18 04            [12]  442 	jr	00111$
      000113                        443 00110$:
                           000113   444 	C$SpriteHorse.c$98$2_0$200	= .
                                    445 	.globl	C$SpriteHorse.c$98$2_0$200
                                    446 ;SpriteHorse.c:98: whip_counter--;
      000113 21r06r00         [12]  447 	ld	hl, #_whip_counter
      000116 35               [12]  448 	dec	(hl)
      000117                        449 00111$:
                           000117   450 	C$SpriteHorse.c$100$1_0$194	= .
                                    451 	.globl	C$SpriteHorse.c$100$1_0$194
                                    452 ;SpriteHorse.c:100: if(whip_counter > 0){
      000117 21r06r00         [12]  453 	ld	hl, #_whip_counter
      00011A 5E               [ 8]  454 	ld	e, (hl)
      00011B AF               [ 4]  455 	xor	a, a
      00011C 57               [ 4]  456 	ld	d, a
      00011D 96               [ 8]  457 	sub	a, (hl)
      00011E CB 7B            [ 8]  458 	bit	7, e
      000120 28 07            [12]  459 	jr	Z, 01013$
      000122 CB 7A            [ 8]  460 	bit	7, d
      000124 20 08            [12]  461 	jr	NZ, 01014$
      000126 BF               [ 4]  462 	cp	a, a
      000127 18 05            [12]  463 	jr	01014$
      000129                        464 01013$:
      000129 CB 7A            [ 8]  465 	bit	7, d
      00012B 28 01            [12]  466 	jr	Z, 01014$
      00012D 37               [ 4]  467 	scf
      00012E                        468 01014$:
      00012E 30 15            [12]  469 	jr	NC, 00117$
                           000130   470 	C$SpriteHorse.c$101$2_3$194	= .
                                    471 	.globl	C$SpriteHorse.c$101$2_3$194
                                    472 ;SpriteHorse.c:101: stamina_current += (whip_power_over_stamina * stamina_verso);
      000130 21r0Er00         [12]  473 	ld	hl, #_stamina_verso
      000133 5E               [ 8]  474 	ld	e, (hl)
      000134 FAr05r00         [16]  475 	ld	a, (#_whip_power_over_stamina)
      000137 CDr00r00         [24]  476 	call	__mulschar
      00013A 21r0Cr00         [12]  477 	ld	hl, #_stamina_current
      00013D 7E               [ 8]  478 	ld	a, (hl)
      00013E 81               [ 4]  479 	add	a, c
      00013F 22               [ 8]  480 	ld	(hl+), a
      000140 7E               [ 8]  481 	ld	a, (hl)
      000141 88               [ 4]  482 	adc	a, b
      000142 77               [ 8]  483 	ld	(hl), a
      000143 18 33            [12]  484 	jr	00118$
      000145                        485 00117$:
                           000145   486 	C$SpriteHorse.c$103$2_0$202	= .
                                    487 	.globl	C$SpriteHorse.c$103$2_0$202
                                    488 ;SpriteHorse.c:103: if(no_whip_counter > 0){
      000145 21r0Fr00         [12]  489 	ld	hl, #_no_whip_counter
      000148 5E               [ 8]  490 	ld	e, (hl)
      000149 AF               [ 4]  491 	xor	a, a
      00014A 57               [ 4]  492 	ld	d, a
      00014B 96               [ 8]  493 	sub	a, (hl)
      00014C CB 7B            [ 8]  494 	bit	7, e
      00014E 28 07            [12]  495 	jr	Z, 01015$
      000150 CB 7A            [ 8]  496 	bit	7, d
      000152 20 08            [12]  497 	jr	NZ, 01016$
      000154 BF               [ 4]  498 	cp	a, a
      000155 18 05            [12]  499 	jr	01016$
      000157                        500 01015$:
      000157 CB 7A            [ 8]  501 	bit	7, d
      000159 28 01            [12]  502 	jr	Z, 01016$
      00015B 37               [ 4]  503 	scf
      00015C                        504 01016$:
      00015C 30 1A            [12]  505 	jr	NC, 00118$
                           00015E   506 	C$SpriteHorse.c$104$3_0$203	= .
                                    507 	.globl	C$SpriteHorse.c$104$3_0$203
                                    508 ;SpriteHorse.c:104: no_whip_counter--;
      00015E 21r0Fr00         [12]  509 	ld	hl, #_no_whip_counter
                           000161   510 	C$SpriteHorse.c$105$3_0$203	= .
                                    511 	.globl	C$SpriteHorse.c$105$3_0$203
                                    512 ;SpriteHorse.c:105: if(no_whip_counter == 0){
      000161 35               [12]  513 	dec	(hl)
      000162 20 14            [12]  514 	jr	NZ, 00118$
                           000164   515 	C$SpriteHorse.c$106$4_0$204	= .
                                    516 	.globl	C$SpriteHorse.c$106$4_0$204
                                    517 ;SpriteHorse.c:106: stamina_current += no_whip_over_stamina;
      000164 FAr10r00         [16]  518 	ld	a, (#_no_whip_over_stamina)
      000167 47               [ 4]  519 	ld	b, a
      000168 07               [ 4]  520 	rlca
      000169 9F               [ 4]  521 	sbc	a, a
      00016A 5F               [ 4]  522 	ld	e, a
      00016B 21r0Cr00         [12]  523 	ld	hl, #_stamina_current
      00016E 7E               [ 8]  524 	ld	a, (hl)
      00016F 80               [ 4]  525 	add	a, b
      000170 22               [ 8]  526 	ld	(hl+), a
      000171 7E               [ 8]  527 	ld	a, (hl)
      000172 8B               [ 4]  528 	adc	a, e
      000173 77               [ 8]  529 	ld	(hl), a
                           000174   530 	C$SpriteHorse.c$107$4_0$204	= .
                                    531 	.globl	C$SpriteHorse.c$107$4_0$204
                                    532 ;SpriteHorse.c:107: no_whip_counter = no_whip_counter_max;
      000174 21r0Fr00         [12]  533 	ld	hl, #_no_whip_counter
      000177 71               [ 8]  534 	ld	(hl), c
      000178                        535 00118$:
                           000178   536 	C$SpriteHorse.c$112$1_0$194	= .
                                    537 	.globl	C$SpriteHorse.c$112$1_0$194
                                    538 ;SpriteHorse.c:112: if(stamina_current < 0){
      000178 21r0Dr00         [12]  539 	ld	hl, #_stamina_current + 1
      00017B CB 7E            [12]  540 	bit	7, (hl)
      00017D 28 04            [12]  541 	jr	Z, 00120$
                           00017F   542 	C$SpriteHorse.c$113$2_0$205	= .
                                    543 	.globl	C$SpriteHorse.c$113$2_0$205
                                    544 ;SpriteHorse.c:113: stamina_current = 0;
      00017F 2B               [ 8]  545 	dec	hl
      000180 AF               [ 4]  546 	xor	a, a
      000181 22               [ 8]  547 	ld	(hl+), a
      000182 77               [ 8]  548 	ld	(hl), a
      000183                        549 00120$:
                           000183   550 	C$SpriteHorse.c$115$1_0$194	= .
                                    551 	.globl	C$SpriteHorse.c$115$1_0$194
                                    552 ;SpriteHorse.c:115: if(stamina_current > STAMINA_MAX){
      000183 21r0Cr00         [12]  553 	ld	hl, #_stamina_current
      000186 3E C0            [ 8]  554 	ld	a, #0xc0
      000188 96               [ 8]  555 	sub	a, (hl)
      000189 23               [ 8]  556 	inc	hl
      00018A 3E 03            [ 8]  557 	ld	a, #0x03
      00018C 9E               [ 8]  558 	sbc	a, (hl)
      00018D 3E 03            [ 8]  559 	ld	a, #0x03
      00018F 57               [ 4]  560 	ld	d, a
      000190 CB 7E            [12]  561 	bit	7, (hl)
      000192 28 07            [12]  562 	jr	Z, 01017$
      000194 CB 7A            [ 8]  563 	bit	7, d
      000196 20 08            [12]  564 	jr	NZ, 01018$
      000198 BF               [ 4]  565 	cp	a, a
      000199 18 05            [12]  566 	jr	01018$
      00019B                        567 01017$:
      00019B CB 7A            [ 8]  568 	bit	7, d
      00019D 28 01            [12]  569 	jr	Z, 01018$
      00019F 37               [ 4]  570 	scf
      0001A0                        571 01018$:
      0001A0 30 08            [12]  572 	jr	NC, 00122$
                           0001A2   573 	C$SpriteHorse.c$116$2_0$206	= .
                                    574 	.globl	C$SpriteHorse.c$116$2_0$206
                                    575 ;SpriteHorse.c:116: stamina_current = STAMINA_MAX;
      0001A2 21r0Cr00         [12]  576 	ld	hl, #_stamina_current
      0001A5 3E C0            [ 8]  577 	ld	a, #0xc0
      0001A7 22               [ 8]  578 	ld	(hl+), a
      0001A8 36 03            [12]  579 	ld	(hl), #0x03
      0001AA                        580 00122$:
                           0001AA   581 	C$SpriteHorse.c$119$2_0$207	= .
                                    582 	.globl	C$SpriteHorse.c$119$2_0$207
                                    583 ;SpriteHorse.c:119: INT16 delta_stamina_euphoria = 0;
      0001AA 01 00 00         [12]  584 	ld	bc, #0x0000
                           0001AD   585 	C$SpriteHorse.c$120$1_1$207	= .
                                    586 	.globl	C$SpriteHorse.c$120$1_1$207
                                    587 ;SpriteHorse.c:120: if(stamina_current > euphoria_max){
      0001AD 21r0Cr00         [12]  588 	ld	hl, #_stamina_current
      0001B0 2A               [ 8]  589 	ld	a, (hl+)
      0001B1 5F               [ 4]  590 	ld	e, a
      0001B2 56               [ 8]  591 	ld	d, (hl)
      0001B3 21r0Ar00         [12]  592 	ld	hl, #_euphoria_max
      0001B6 2A               [ 8]  593 	ld	a, (hl+)
      0001B7 93               [ 4]  594 	sub	a, e
      0001B8 7E               [ 8]  595 	ld	a, (hl)
      0001B9 9A               [ 4]  596 	sbc	a, d
      0001BA 30 0A            [12]  597 	jr	NC, 00126$
                           0001BC   598 	C$SpriteHorse.c$121$2_1$208	= .
                                    599 	.globl	C$SpriteHorse.c$121$2_1$208
                                    600 ;SpriteHorse.c:121: delta_stamina_euphoria = stamina_current - euphoria_max;
      0001BC 2B               [ 8]  601 	dec	hl
      0001BD 7B               [ 4]  602 	ld	a, e
      0001BE 96               [ 8]  603 	sub	a, (hl)
      0001BF 23               [ 8]  604 	inc	hl
      0001C0 4F               [ 4]  605 	ld	c, a
      0001C1 7A               [ 4]  606 	ld	a, d
      0001C2 9E               [ 8]  607 	sbc	a, (hl)
      0001C3 47               [ 4]  608 	ld	b, a
      0001C4 18 13            [12]  609 	jr	00127$
      0001C6                        610 00126$:
                           0001C6   611 	C$SpriteHorse.c$122$1_1$207	= .
                                    612 	.globl	C$SpriteHorse.c$122$1_1$207
                                    613 ;SpriteHorse.c:122: }else if(stamina_current < euphoria_min){
      0001C6 21r08r00         [12]  614 	ld	hl, #_euphoria_min
      0001C9 7B               [ 4]  615 	ld	a, e
      0001CA 96               [ 8]  616 	sub	a, (hl)
      0001CB 23               [ 8]  617 	inc	hl
      0001CC 7A               [ 4]  618 	ld	a, d
      0001CD 9E               [ 8]  619 	sbc	a, (hl)
      0001CE 30 09            [12]  620 	jr	NC, 00127$
                           0001D0   621 	C$SpriteHorse.c$123$2_1$209	= .
                                    622 	.globl	C$SpriteHorse.c$123$2_1$209
                                    623 ;SpriteHorse.c:123: delta_stamina_euphoria = euphoria_min - stamina_current;
      0001D0 21r08r00         [12]  624 	ld	hl, #_euphoria_min
      0001D3 2A               [ 8]  625 	ld	a, (hl+)
      0001D4 93               [ 4]  626 	sub	a, e
      0001D5 4F               [ 4]  627 	ld	c, a
      0001D6 7E               [ 8]  628 	ld	a, (hl)
      0001D7 9A               [ 4]  629 	sbc	a, d
      0001D8 47               [ 4]  630 	ld	b, a
      0001D9                        631 00127$:
                           0001D9   632 	C$SpriteHorse.c$125$1_1$207	= .
                                    633 	.globl	C$SpriteHorse.c$125$1_1$207
                                    634 ;SpriteHorse.c:125: if(delta_stamina_euphoria > 32){
      0001D9 58               [ 4]  635 	ld	e, b
      0001DA 16 00            [ 8]  636 	ld	d, #0x00
      0001DC 3E 20            [ 8]  637 	ld	a, #0x20
      0001DE B9               [ 4]  638 	cp	a, c
      0001DF 3E 00            [ 8]  639 	ld	a, #0x00
      0001E1 98               [ 4]  640 	sbc	a, b
      0001E2 CB 7B            [ 8]  641 	bit	7, e
      0001E4 28 07            [12]  642 	jr	Z, 01019$
      0001E6 CB 7A            [ 8]  643 	bit	7, d
      0001E8 20 08            [12]  644 	jr	NZ, 01020$
      0001EA BF               [ 4]  645 	cp	a, a
      0001EB 18 05            [12]  646 	jr	01020$
      0001ED                        647 01019$:
      0001ED CB 7A            [ 8]  648 	bit	7, d
      0001EF 28 01            [12]  649 	jr	Z, 01020$
      0001F1 37               [ 4]  650 	scf
      0001F2                        651 01020$:
      0001F2 30 16            [12]  652 	jr	NC, 00129$
                           0001F4   653 	C$SpriteHorse.c$126$2_1$210	= .
                                    654 	.globl	C$SpriteHorse.c$126$2_1$210
                                    655 ;SpriteHorse.c:126: velocity_counter = delta_stamina_euphoria >> 4;
      0001F4 CB 28            [ 8]  656 	sra	b
      0001F6 CB 19            [ 8]  657 	rr	c
      0001F8 CB 28            [ 8]  658 	sra	b
      0001FA CB 19            [ 8]  659 	rr	c
      0001FC CB 28            [ 8]  660 	sra	b
      0001FE CB 19            [ 8]  661 	rr	c
      000200 CB 28            [ 8]  662 	sra	b
      000202 CB 19            [ 8]  663 	rr	c
      000204 21r00r00         [12]  664 	ld	hl, #_velocity_counter
      000207 71               [ 8]  665 	ld	(hl), c
      000208 18 05            [12]  666 	jr	00130$
      00020A                        667 00129$:
                           00020A   668 	C$SpriteHorse.c$128$2_1$211	= .
                                    669 	.globl	C$SpriteHorse.c$128$2_1$211
                                    670 ;SpriteHorse.c:128: velocity_counter = 2;
      00020A 21r00r00         [12]  671 	ld	hl, #_velocity_counter
      00020D 36 02            [12]  672 	ld	(hl), #0x02
      00020F                        673 00130$:
                           00020F   674 	C$SpriteHorse.c$131$1_1$207	= .
                                    675 	.globl	C$SpriteHorse.c$131$1_1$207
                                    676 ;SpriteHorse.c:131: if(onfire_countdown > 0){//sta impazzendo
      00020F 21r19r00         [12]  677 	ld	hl, #_onfire_countdown
      000212 AF               [ 4]  678 	xor	a, a
      000213 96               [ 8]  679 	sub	a, (hl)
      000214 23               [ 8]  680 	inc	hl
      000215 3E 00            [ 8]  681 	ld	a, #0x00
      000217 9E               [ 8]  682 	sbc	a, (hl)
      000218 3E 00            [ 8]  683 	ld	a, #0x00
      00021A 57               [ 4]  684 	ld	d, a
      00021B CB 7E            [12]  685 	bit	7, (hl)
      00021D 28 07            [12]  686 	jr	Z, 01021$
      00021F CB 7A            [ 8]  687 	bit	7, d
      000221 20 08            [12]  688 	jr	NZ, 01022$
      000223 BF               [ 4]  689 	cp	a, a
      000224 18 05            [12]  690 	jr	01022$
      000226                        691 01021$:
      000226 CB 7A            [ 8]  692 	bit	7, d
      000228 28 01            [12]  693 	jr	Z, 01022$
      00022A 37               [ 4]  694 	scf
      00022B                        695 01022$:
      00022B D2r02r03         [16]  696 	jp	NC, 00148$
                           00022E   697 	C$SpriteHorse.c$132$2_1$212	= .
                                    698 	.globl	C$SpriteHorse.c$132$2_1$212
                                    699 ;SpriteHorse.c:132: onfire_countdown--;
      00022E 21r19r00         [12]  700 	ld	hl, #_onfire_countdown
      000231 2A               [ 8]  701 	ld	a, (hl+)
      000232 5F               [ 4]  702 	ld	e, a
      000233 3A               [ 8]  703 	ld	a, (hl-)
      000234 57               [ 4]  704 	ld	d, a
      000235 1B               [ 8]  705 	dec	de
      000236 7B               [ 4]  706 	ld	a, e
      000237 22               [ 8]  707 	ld	(hl+), a
                           000238   708 	C$SpriteHorse.c$133$2_1$212	= .
                                    709 	.globl	C$SpriteHorse.c$133$2_1$212
                                    710 ;SpriteHorse.c:133: switch(onfire_countdown){
      000238 7A               [ 4]  711 	ld	a, d
      000239 32               [ 8]  712 	ld	(hl-), a
      00023A 2A               [ 8]  713 	ld	a, (hl+)
      00023B D6 32            [ 8]  714 	sub	a, #0x32
      00023D B6               [ 8]  715 	or	a, (hl)
      00023E 28 3E            [12]  716 	jr	Z, 00137$
      000240 21r19r00         [12]  717 	ld	hl, #_onfire_countdown
      000243 2A               [ 8]  718 	ld	a, (hl+)
      000244 D6 64            [ 8]  719 	sub	a, #0x64
      000246 B6               [ 8]  720 	or	a, (hl)
      000247 28 35            [12]  721 	jr	Z, 00137$
      000249 21r19r00         [12]  722 	ld	hl, #_onfire_countdown
      00024C 2A               [ 8]  723 	ld	a, (hl+)
      00024D D6 96            [ 8]  724 	sub	a, #0x96
      00024F B6               [ 8]  725 	or	a, (hl)
      000250 28 2C            [12]  726 	jr	Z, 00137$
      000252 21r19r00         [12]  727 	ld	hl, #_onfire_countdown
      000255 2A               [ 8]  728 	ld	a, (hl+)
      000256 D6 C8            [ 8]  729 	sub	a, #0xc8
      000258 B6               [ 8]  730 	or	a, (hl)
      000259 28 23            [12]  731 	jr	Z, 00137$
      00025B 21r19r00         [12]  732 	ld	hl, #_onfire_countdown
      00025E 2A               [ 8]  733 	ld	a, (hl+)
      00025F D6 FA            [ 8]  734 	sub	a, #0xfa
      000261 B6               [ 8]  735 	or	a, (hl)
      000262 28 1A            [12]  736 	jr	Z, 00137$
      000264 21r19r00         [12]  737 	ld	hl, #_onfire_countdown
      000267 7E               [ 8]  738 	ld	a, (hl)
      000268 D6 2C            [ 8]  739 	sub	a, #0x2c
      00026A 20 05            [12]  740 	jr	NZ, 01028$
      00026C 23               [ 8]  741 	inc	hl
      00026D 7E               [ 8]  742 	ld	a, (hl)
      00026E 3D               [ 4]  743 	dec	a
      00026F 28 0D            [12]  744 	jr	Z, 00137$
      000271                        745 01028$:
      000271 21r19r00         [12]  746 	ld	hl, #_onfire_countdown
      000274 7E               [ 8]  747 	ld	a, (hl)
      000275 D6 5E            [ 8]  748 	sub	a, #0x5e
      000277 20 12            [12]  749 	jr	NZ, 00138$
      000279 23               [ 8]  750 	inc	hl
      00027A 7E               [ 8]  751 	ld	a, (hl)
      00027B 3D               [ 4]  752 	dec	a
      00027C 20 0D            [12]  753 	jr	NZ, 00138$
                           00027E   754 	C$SpriteHorse.c$135$3_1$213	= .
                                    755 	.globl	C$SpriteHorse.c$135$3_1$213
                                    756 ;SpriteHorse.c:135: case 200: case 250: case 300: case 350:
      00027E                        757 00137$:
                           00027E   758 	C$SpriteHorse.c$136$3_1$213	= .
                                    759 	.globl	C$SpriteHorse.c$136$3_1$213
                                    760 ;SpriteHorse.c:136: update_hp(-1);
      00027E 3E FF            [ 8]  761 	ld	a, #0xff
      000280 F5               [16]  762 	push	af
      000281 33               [ 8]  763 	inc	sp
      000282 1Er00            [ 8]  764 	ld	e, #b_update_hp
      000284 21r00r00         [12]  765 	ld	hl, #_update_hp
      000287 CDr00r00         [24]  766 	call	___sdcc_bcall_ehl
      00028A 33               [ 8]  767 	inc	sp
                           00028B   768 	C$SpriteHorse.c$138$2_1$212	= .
                                    769 	.globl	C$SpriteHorse.c$138$2_1$212
                                    770 ;SpriteHorse.c:138: }
      00028B                        771 00138$:
                           00028B   772 	C$SpriteHorse.c$139$2_1$212	= .
                                    773 	.globl	C$SpriteHorse.c$139$2_1$212
                                    774 ;SpriteHorse.c:139: velocity_counter = 1;//cioè vai a cannone
      00028B 21r00r00         [12]  775 	ld	hl, #_velocity_counter
      00028E 36 01            [12]  776 	ld	(hl), #0x01
                           000290   777 	C$SpriteHorse.c$140$2_1$212	= .
                                    778 	.globl	C$SpriteHorse.c$140$2_1$212
                                    779 ;SpriteHorse.c:140: stamina_current = EUPHORIA_MAX+1;//fissa la stamina a euphoria_max
      000290 21r0Cr00         [12]  780 	ld	hl, #_stamina_current
      000293 3E 95            [ 8]  781 	ld	a, #0x95
      000295 22               [ 8]  782 	ld	(hl+), a
      000296 36 02            [12]  783 	ld	(hl), #0x02
                           000298   784 	C$SpriteHorse.c$141$2_1$212	= .
                                    785 	.globl	C$SpriteHorse.c$141$2_1$212
                                    786 ;SpriteHorse.c:141: s_flame->x = THIS->x +2;
      000298 21r1Br00         [12]  787 	ld	hl, #_s_flame
      00029B 2A               [ 8]  788 	ld	a, (hl+)
      00029C 46               [ 8]  789 	ld	b, (hl)
      00029D C6 0C            [ 8]  790 	add	a, #0x0c
      00029F 4F               [ 4]  791 	ld	c, a
      0002A0 30 01            [12]  792 	jr	NC, 01031$
      0002A2 04               [ 4]  793 	inc	b
      0002A3                        794 01031$:
      0002A3 21r00r00         [12]  795 	ld	hl, #_THIS
      0002A6 2A               [ 8]  796 	ld	a, (hl+)
      0002A7 5F               [ 4]  797 	ld	e, a
      0002A8 56               [ 8]  798 	ld	d, (hl)
      0002A9 21 0C 00         [12]  799 	ld	hl, #0x000c
      0002AC 19               [ 8]  800 	add	hl, de
      0002AD 2A               [ 8]  801 	ld	a, (hl+)
      0002AE 6E               [ 8]  802 	ld	l, (hl)
                                    803 ;	spillPairReg hl
      0002AF 5F               [ 4]  804 	ld	e, a
      0002B0 55               [ 4]  805 	ld	d, l
      0002B1 13               [ 8]  806 	inc	de
      0002B2 13               [ 8]  807 	inc	de
      0002B3 7B               [ 4]  808 	ld	a, e
      0002B4 02               [ 8]  809 	ld	(bc), a
      0002B5 03               [ 8]  810 	inc	bc
      0002B6 7A               [ 4]  811 	ld	a, d
      0002B7 02               [ 8]  812 	ld	(bc), a
                           0002B8   813 	C$SpriteHorse.c$142$2_1$212	= .
                                    814 	.globl	C$SpriteHorse.c$142$2_1$212
                                    815 ;SpriteHorse.c:142: s_flame->y = THIS->y-7;
      0002B8 21r1Br00         [12]  816 	ld	hl, #_s_flame
      0002BB 2A               [ 8]  817 	ld	a, (hl+)
      0002BC 46               [ 8]  818 	ld	b, (hl)
      0002BD C6 0E            [ 8]  819 	add	a, #0x0e
      0002BF 4F               [ 4]  820 	ld	c, a
      0002C0 30 01            [12]  821 	jr	NC, 01032$
      0002C2 04               [ 4]  822 	inc	b
      0002C3                        823 01032$:
      0002C3 21r00r00         [12]  824 	ld	hl, #_THIS
      0002C6 2A               [ 8]  825 	ld	a, (hl+)
      0002C7 5F               [ 4]  826 	ld	e, a
      0002C8 56               [ 8]  827 	ld	d, (hl)
      0002C9 21 0E 00         [12]  828 	ld	hl, #0x000e
      0002CC 19               [ 8]  829 	add	hl, de
      0002CD 2A               [ 8]  830 	ld	a, (hl+)
      0002CE 6E               [ 8]  831 	ld	l, (hl)
                                    832 ;	spillPairReg hl
      0002CF C6 F9            [ 8]  833 	add	a, #0xf9
      0002D1 5F               [ 4]  834 	ld	e, a
      0002D2 7D               [ 4]  835 	ld	a, l
      0002D3 CE FF            [ 8]  836 	adc	a, #0xff
      0002D5 57               [ 4]  837 	ld	d, a
      0002D6 7B               [ 4]  838 	ld	a, e
      0002D7 02               [ 8]  839 	ld	(bc), a
      0002D8 03               [ 8]  840 	inc	bc
      0002D9 7A               [ 4]  841 	ld	a, d
      0002DA 02               [ 8]  842 	ld	(bc), a
                           0002DB   843 	C$SpriteHorse.c$143$2_1$212	= .
                                    844 	.globl	C$SpriteHorse.c$143$2_1$212
                                    845 ;SpriteHorse.c:143: if(weapon_def == CAPE){
      0002DB FAr00r00         [16]  846 	ld	a, (#_weapon_def)
      0002DE D6 08            [ 8]  847 	sub	a, #0x08
      0002E0 20 68            [12]  848 	jr	NZ, 00149$
                           0002E2   849 	C$SpriteHorse.c$144$3_1$214	= .
                                    850 	.globl	C$SpriteHorse.c$144$3_1$214
                                    851 ;SpriteHorse.c:144: use_weapon(1);
      0002E2 3E 01            [ 8]  852 	ld	a, #0x01
      0002E4 F5               [16]  853 	push	af
      0002E5 33               [ 8]  854 	inc	sp
      0002E6 1Er00            [ 8]  855 	ld	e, #b_use_weapon
      0002E8 21r00r00         [12]  856 	ld	hl, #_use_weapon
      0002EB CDr00r00         [24]  857 	call	___sdcc_bcall_ehl
      0002EE 33               [ 8]  858 	inc	sp
                           0002EF   859 	C$SpriteHorse.c$145$3_1$214	= .
                                    860 	.globl	C$SpriteHorse.c$145$3_1$214
                                    861 ;SpriteHorse.c:145: SpriteManagerRemoveSprite(s_flame);
      0002EF 21r1Br00         [12]  862 	ld	hl, #_s_flame
      0002F2 2A               [ 8]  863 	ld	a, (hl+)
      0002F3 5F               [ 4]  864 	ld	e, a
      0002F4 56               [ 8]  865 	ld	d, (hl)
      0002F5 CDr00r00         [24]  866 	call	_SpriteManagerRemoveSprite
                           0002F8   867 	C$SpriteHorse.c$146$3_1$214	= .
                                    868 	.globl	C$SpriteHorse.c$146$3_1$214
                                    869 ;SpriteHorse.c:146: onfire_countdown = 2;
      0002F8 21r19r00         [12]  870 	ld	hl, #_onfire_countdown
      0002FB 3E 02            [ 8]  871 	ld	a, #0x02
      0002FD 22               [ 8]  872 	ld	(hl+), a
      0002FE AF               [ 4]  873 	xor	a, a
      0002FF 77               [ 8]  874 	ld	(hl), a
      000300 18 48            [12]  875 	jr	00149$
      000302                        876 00148$:
                           000302   877 	C$SpriteHorse.c$149$2_1$215	= .
                                    878 	.globl	C$SpriteHorse.c$149$2_1$215
                                    879 ;SpriteHorse.c:149: if(euphoria_min != EUPHORIA_MIN){
      000302 21r08r00         [12]  880 	ld	hl, #_euphoria_min
      000305 7E               [ 8]  881 	ld	a, (hl)
      000306 D6 90            [ 8]  882 	sub	a, #0x90
      000308 20 05            [12]  883 	jr	NZ, 01035$
      00030A 23               [ 8]  884 	inc	hl
      00030B 7E               [ 8]  885 	ld	a, (hl)
      00030C 3D               [ 4]  886 	dec	a
      00030D 28 08            [12]  887 	jr	Z, 00142$
      00030F                        888 01035$:
                           00030F   889 	C$SpriteHorse.c$150$3_1$216	= .
                                    890 	.globl	C$SpriteHorse.c$150$3_1$216
                                    891 ;SpriteHorse.c:150: euphoria_min = EUPHORIA_MIN;
      00030F 21r08r00         [12]  892 	ld	hl, #_euphoria_min
      000312 3E 90            [ 8]  893 	ld	a, #0x90
      000314 22               [ 8]  894 	ld	(hl+), a
      000315 36 01            [12]  895 	ld	(hl), #0x01
      000317                        896 00142$:
                           000317   897 	C$SpriteHorse.c$152$2_1$215	= .
                                    898 	.globl	C$SpriteHorse.c$152$2_1$215
                                    899 ;SpriteHorse.c:152: if(euphoria_max != EUPHORIA_MAX){
      000317 21r0Ar00         [12]  900 	ld	hl, #_euphoria_max
      00031A 7E               [ 8]  901 	ld	a, (hl)
      00031B D6 94            [ 8]  902 	sub	a, #0x94
      00031D 20 06            [12]  903 	jr	NZ, 01036$
      00031F 23               [ 8]  904 	inc	hl
      000320 7E               [ 8]  905 	ld	a, (hl)
      000321 D6 02            [ 8]  906 	sub	a, #0x02
      000323 28 08            [12]  907 	jr	Z, 00144$
      000325                        908 01036$:
                           000325   909 	C$SpriteHorse.c$153$3_1$217	= .
                                    910 	.globl	C$SpriteHorse.c$153$3_1$217
                                    911 ;SpriteHorse.c:153: euphoria_max = EUPHORIA_MAX;
      000325 21r0Ar00         [12]  912 	ld	hl, #_euphoria_max
      000328 3E 94            [ 8]  913 	ld	a, #0x94
      00032A 22               [ 8]  914 	ld	(hl+), a
      00032B 36 02            [12]  915 	ld	(hl), #0x02
      00032D                        916 00144$:
                           00032D   917 	C$SpriteHorse.c$155$2_1$215	= .
                                    918 	.globl	C$SpriteHorse.c$155$2_1$215
                                    919 ;SpriteHorse.c:155: if(whip_power_over_stamina != WHIP_POWER){//se entro qui, sto risistemando la whip ed è appena terminato l'onfire.
      00032D FAr05r00         [16]  920 	ld	a, (#_whip_power_over_stamina)
      000330 D6 03            [ 8]  921 	sub	a, #0x03
      000332 28 16            [12]  922 	jr	Z, 00149$
                           000334   923 	C$SpriteHorse.c$156$3_1$218	= .
                                    924 	.globl	C$SpriteHorse.c$156$3_1$218
                                    925 ;SpriteHorse.c:156: whip_power_over_stamina = WHIP_POWER;
      000334 21r05r00         [12]  926 	ld	hl, #_whip_power_over_stamina
      000337 36 03            [12]  927 	ld	(hl), #0x03
                           000339   928 	C$SpriteHorse.c$157$3_1$218	= .
                                    929 	.globl	C$SpriteHorse.c$157$3_1$218
                                    930 ;SpriteHorse.c:157: stamina_current = (EUPHORIA_MIN - (EUPHORIA_MIN >> 3));
      000339 21r0Cr00         [12]  931 	ld	hl, #_stamina_current
      00033C 3E 5E            [ 8]  932 	ld	a, #0x5e
      00033E 22               [ 8]  933 	ld	(hl+), a
      00033F 36 01            [12]  934 	ld	(hl), #0x01
                           000341   935 	C$SpriteHorse.c$158$3_1$218	= .
                                    936 	.globl	C$SpriteHorse.c$158$3_1$218
                                    937 ;SpriteHorse.c:158: SpriteManagerRemoveSprite(s_flame);
      000341 21r1Br00         [12]  938 	ld	hl, #_s_flame
      000344 2A               [ 8]  939 	ld	a, (hl+)
      000345 5F               [ 4]  940 	ld	e, a
      000346 56               [ 8]  941 	ld	d, (hl)
      000347 CDr00r00         [24]  942 	call	_SpriteManagerRemoveSprite
      00034A                        943 00149$:
                           00034A   944 	C$SpriteHorse.c$163$2_3$194	= .
                                    945 	.globl	C$SpriteHorse.c$163$2_3$194
                                    946 ;SpriteHorse.c:163: if(KEY_RELEASED(J_RIGHT) || KEY_RELEASED(J_LEFT)){
      00034A 21r00r00         [12]  947 	ld	hl, #_previous_keys
      00034D 4E               [ 8]  948 	ld	c, (hl)
      00034E 21r00r00         [12]  949 	ld	hl, #_keys
      000351 46               [ 8]  950 	ld	b, (hl)
      000352 78               [ 4]  951 	ld	a, b
      000353 E6 01            [ 8]  952 	and	a, #0x01
      000355 F5               [16]  953 	push	af
      000356 78               [ 4]  954 	ld	a, b
      000357 E6 02            [ 8]  955 	and	a, #0x02
      000359 5F               [ 4]  956 	ld	e, a
      00035A F1               [12]  957 	pop	af
      00035B CB 41            [ 8]  958 	bit	0, c
      00035D 28 03            [12]  959 	jr	Z, 00154$
      00035F B7               [ 4]  960 	or	a, a
      000360 28 08            [12]  961 	jr	Z, 00150$
      000362                        962 00154$:
      000362 CB 49            [ 8]  963 	bit	1, c
      000364 28 0E            [12]  964 	jr	Z, 00151$
      000366 1C               [ 4]  965 	inc	e
      000367 1D               [ 4]  966 	dec	e
      000368 20 0A            [12]  967 	jr	NZ, 00151$
      00036A                        968 00150$:
                           00036A   969 	C$SpriteHorse.c$164$2_1$219	= .
                                    970 	.globl	C$SpriteHorse.c$164$2_1$219
                                    971 ;SpriteHorse.c:164: turn_samepressure_counter = 0;
      00036A 21r15r00         [12]  972 	ld	hl, #_turn_samepressure_counter
      00036D 36 00            [12]  973 	ld	(hl), #0x00
                           00036F   974 	C$SpriteHorse.c$165$2_1$219	= .
                                    975 	.globl	C$SpriteHorse.c$165$2_1$219
                                    976 ;SpriteHorse.c:165: hud_turn_cooldown = HUD_TURN_COOLDOWN_MAX;
      00036F 21r00r00         [12]  977 	ld	hl, #_hud_turn_cooldown
      000372 36 14            [12]  978 	ld	(hl), #0x14
      000374                        979 00151$:
                           000374   980 	C$SpriteHorse.c$171$2_3$194	= .
                                    981 	.globl	C$SpriteHorse.c$171$2_3$194
                                    982 ;SpriteHorse.c:171: turn_samepressure_counter++;
      000374 21r15r00         [12]  983 	ld	hl, #_turn_samepressure_counter
      000377 56               [ 8]  984 	ld	d, (hl)
      000378 14               [ 4]  985 	inc	d
                           000379   986 	C$SpriteHorse.c$168$1_1$207	= .
                                    987 	.globl	C$SpriteHorse.c$168$1_1$207
                                    988 ;SpriteHorse.c:168: if(KEY_PRESSED(J_RIGHT)){
      000379 B7               [ 4]  989 	or	a, a
      00037A 28 67            [12]  990 	jr	Z, 00167$
                           00037C   991 	C$SpriteHorse.c$169$2_1$220	= .
                                    992 	.globl	C$SpriteHorse.c$169$2_1$220
                                    993 ;SpriteHorse.c:169: turn_verse = CLOCK;
      00037C 21r17r00         [12]  994 	ld	hl, #_turn_verse
      00037F 36 01            [12]  995 	ld	(hl), #0x01
                           000381   996 	C$SpriteHorse.c$170$2_1$220	= .
                                    997 	.globl	C$SpriteHorse.c$170$2_1$220
                                    998 ;SpriteHorse.c:170: turn--;
      000381 21r12r00         [12]  999 	ld	hl, #_turn
      000384 35               [12] 1000 	dec	(hl)
                           000385  1001 	C$SpriteHorse.c$171$2_1$220	= .
                                   1002 	.globl	C$SpriteHorse.c$171$2_1$220
                                   1003 ;SpriteHorse.c:171: turn_samepressure_counter++;
      000385 21r15r00         [12] 1004 	ld	hl, #_turn_samepressure_counter
      000388 72               [ 8] 1005 	ld	(hl), d
                           000389  1006 	C$SpriteHorse.c$172$2_1$220	= .
                                   1007 	.globl	C$SpriteHorse.c$172$2_1$220
                                   1008 ;SpriteHorse.c:172: if(turn_samepressure_counter >= 40 && ((sin > 30 && sin < 78) || (sin < -30 && sin > -78))){
      000389 7E               [ 8] 1009 	ld	a, (hl)
      00038A EE 80            [ 8] 1010 	xor	a, #0x80
      00038C D6 A8            [ 8] 1011 	sub	a, #0xa8
      00038E DAr1Er04         [16] 1012 	jp	C, 00168$
      000391 21r13r00         [12] 1013 	ld	hl, #_sin
      000394 5E               [ 8] 1014 	ld	e, (hl)
      000395 3E 1E            [ 8] 1015 	ld	a,#0x1e
      000397 57               [ 4] 1016 	ld	d,a
      000398 96               [ 8] 1017 	sub	a, (hl)
      000399 CB 7B            [ 8] 1018 	bit	7, e
      00039B 28 07            [12] 1019 	jr	Z, 01040$
      00039D CB 7A            [ 8] 1020 	bit	7, d
      00039F 20 08            [12] 1021 	jr	NZ, 01041$
      0003A1 BF               [ 4] 1022 	cp	a, a
      0003A2 18 05            [12] 1023 	jr	01041$
      0003A4                       1024 01040$:
      0003A4 CB 7A            [ 8] 1025 	bit	7, d
      0003A6 28 01            [12] 1026 	jr	Z, 01041$
      0003A8 37               [ 4] 1027 	scf
      0003A9                       1028 01041$:
      0003A9 30 09            [12] 1029 	jr	NC, 00159$
      0003AB FAr13r00         [16] 1030 	ld	a, (#_sin)
      0003AE EE 80            [ 8] 1031 	xor	a, #0x80
      0003B0 D6 CE            [ 8] 1032 	sub	a, #0xce
      0003B2 38 21            [12] 1033 	jr	C, 00155$
      0003B4                       1034 00159$:
      0003B4 21r13r00         [12] 1035 	ld	hl, #_sin
      0003B7 7E               [ 8] 1036 	ld	a, (hl)
      0003B8 EE 80            [ 8] 1037 	xor	a, #0x80
      0003BA D6 62            [ 8] 1038 	sub	a, #0x62
      0003BC 30 60            [12] 1039 	jr	NC, 00168$
      0003BE 5E               [ 8] 1040 	ld	e, (hl)
      0003BF 3E B2            [ 8] 1041 	ld	a,#0xb2
      0003C1 57               [ 4] 1042 	ld	d,a
      0003C2 96               [ 8] 1043 	sub	a, (hl)
      0003C3 CB 7B            [ 8] 1044 	bit	7, e
      0003C5 28 07            [12] 1045 	jr	Z, 01042$
      0003C7 CB 7A            [ 8] 1046 	bit	7, d
      0003C9 20 08            [12] 1047 	jr	NZ, 01043$
      0003CB BF               [ 4] 1048 	cp	a, a
      0003CC 18 05            [12] 1049 	jr	01043$
      0003CE                       1050 01042$:
      0003CE CB 7A            [ 8] 1051 	bit	7, d
      0003D0 28 01            [12] 1052 	jr	Z, 01043$
      0003D2 37               [ 4] 1053 	scf
      0003D3                       1054 01043$:
      0003D3 30 49            [12] 1055 	jr	NC, 00168$
      0003D5                       1056 00155$:
                           0003D5  1057 	C$SpriteHorse.c$173$3_1$221	= .
                                   1058 	.globl	C$SpriteHorse.c$173$3_1$221
                                   1059 ;SpriteHorse.c:173: turn_samepressure_counter = 40;
      0003D5 21r15r00         [12] 1060 	ld	hl, #_turn_samepressure_counter
      0003D8 36 28            [12] 1061 	ld	(hl), #0x28
                           0003DA  1062 	C$SpriteHorse.c$174$3_1$221	= .
                                   1063 	.globl	C$SpriteHorse.c$174$3_1$221
                                   1064 ;SpriteHorse.c:174: turn-=2;
      0003DA 21r12r00         [12] 1065 	ld	hl, #_turn
      0003DD 7E               [ 8] 1066 	ld	a, (hl)
      0003DE C6 FE            [ 8] 1067 	add	a, #0xfe
      0003E0 77               [ 8] 1068 	ld	(hl), a
      0003E1 18 3B            [12] 1069 	jr	00168$
      0003E3                       1070 00167$:
                           0003E3  1071 	C$SpriteHorse.c$176$1_1$207	= .
                                   1072 	.globl	C$SpriteHorse.c$176$1_1$207
                                   1073 ;SpriteHorse.c:176: }else if(KEY_PRESSED(J_LEFT)){
      0003E3 7B               [ 4] 1074 	ld	a, e
      0003E4 B7               [ 4] 1075 	or	a, a
      0003E5 28 32            [12] 1076 	jr	Z, 00164$
                           0003E7  1077 	C$SpriteHorse.c$177$2_1$222	= .
                                   1078 	.globl	C$SpriteHorse.c$177$2_1$222
                                   1079 ;SpriteHorse.c:177: turn_verse = COUNTERCLOCK;
      0003E7 21r17r00         [12] 1080 	ld	hl, #_turn_verse
      0003EA 36 02            [12] 1081 	ld	(hl), #0x02
                           0003EC  1082 	C$SpriteHorse.c$178$2_1$222	= .
                                   1083 	.globl	C$SpriteHorse.c$178$2_1$222
                                   1084 ;SpriteHorse.c:178: turn++;
      0003EC 21r12r00         [12] 1085 	ld	hl, #_turn
      0003EF 34               [12] 1086 	inc	(hl)
                           0003F0  1087 	C$SpriteHorse.c$179$2_1$222	= .
                                   1088 	.globl	C$SpriteHorse.c$179$2_1$222
                                   1089 ;SpriteHorse.c:179: turn_samepressure_counter++;
      0003F0 21r15r00         [12] 1090 	ld	hl, #_turn_samepressure_counter
      0003F3 72               [ 8] 1091 	ld	(hl), d
                           0003F4  1092 	C$SpriteHorse.c$180$2_1$222	= .
                                   1093 	.globl	C$SpriteHorse.c$180$2_1$222
                                   1094 ;SpriteHorse.c:180: if(turn_samepressure_counter > 40){
      0003F4 5E               [ 8] 1095 	ld	e, (hl)
      0003F5 3E 28            [ 8] 1096 	ld	a,#0x28
      0003F7 57               [ 4] 1097 	ld	d,a
      0003F8 96               [ 8] 1098 	sub	a, (hl)
      0003F9 CB 7B            [ 8] 1099 	bit	7, e
      0003FB 28 07            [12] 1100 	jr	Z, 01044$
      0003FD CB 7A            [ 8] 1101 	bit	7, d
      0003FF 20 08            [12] 1102 	jr	NZ, 01045$
      000401 BF               [ 4] 1103 	cp	a, a
      000402 18 05            [12] 1104 	jr	01045$
      000404                       1105 01044$:
      000404 CB 7A            [ 8] 1106 	bit	7, d
      000406 28 01            [12] 1107 	jr	Z, 01045$
      000408 37               [ 4] 1108 	scf
      000409                       1109 01045$:
      000409 30 13            [12] 1110 	jr	NC, 00168$
                           00040B  1111 	C$SpriteHorse.c$181$3_1$223	= .
                                   1112 	.globl	C$SpriteHorse.c$181$3_1$223
                                   1113 ;SpriteHorse.c:181: turn_samepressure_counter = 40;
      00040B 21r15r00         [12] 1114 	ld	hl, #_turn_samepressure_counter
      00040E 36 28            [12] 1115 	ld	(hl), #0x28
                           000410  1116 	C$SpriteHorse.c$182$3_1$223	= .
                                   1117 	.globl	C$SpriteHorse.c$182$3_1$223
                                   1118 ;SpriteHorse.c:182: turn+=2;
      000410 21r12r00         [12] 1119 	ld	hl, #_turn
      000413 7E               [ 8] 1120 	ld	a, (hl)
      000414 C6 02            [ 8] 1121 	add	a, #0x02
      000416 77               [ 8] 1122 	ld	(hl), a
      000417 18 05            [12] 1123 	jr	00168$
      000419                       1124 00164$:
                           000419  1125 	C$SpriteHorse.c$185$2_1$224	= .
                                   1126 	.globl	C$SpriteHorse.c$185$2_1$224
                                   1127 ;SpriteHorse.c:185: turn_verse = NONE; 
      000419 21r17r00         [12] 1128 	ld	hl, #_turn_verse
      00041C 36 00            [12] 1129 	ld	(hl), #0x00
      00041E                       1130 00168$:
                           00041E  1131 	C$SpriteHorse.c$187$1_1$207	= .
                                   1132 	.globl	C$SpriteHorse.c$187$1_1$207
                                   1133 ;SpriteHorse.c:187: if(KEY_TICKED(J_UP)){
      00041E CB 50            [ 8] 1134 	bit	2, b
      000420 28 0E            [12] 1135 	jr	Z, 00170$
      000422 CB 51            [ 8] 1136 	bit	2, c
      000424 20 0A            [12] 1137 	jr	NZ, 00170$
                           000426  1138 	C$SpriteHorse.c$188$2_1$225	= .
                                   1139 	.globl	C$SpriteHorse.c$188$2_1$225
                                   1140 ;SpriteHorse.c:188: turn = 64;
      000426 21r12r00         [12] 1141 	ld	hl, #_turn
      000429 36 40            [12] 1142 	ld	(hl), #0x40
                           00042B  1143 	C$SpriteHorse.c$189$2_1$225	= .
                                   1144 	.globl	C$SpriteHorse.c$189$2_1$225
                                   1145 ;SpriteHorse.c:189: turn_samepressure_counter = 0;
      00042B 21r15r00         [12] 1146 	ld	hl, #_turn_samepressure_counter
      00042E 36 00            [12] 1147 	ld	(hl), #0x00
      000430                       1148 00170$:
                           000430  1149 	C$SpriteHorse.c$191$1_1$207	= .
                                   1150 	.globl	C$SpriteHorse.c$191$1_1$207
                                   1151 ;SpriteHorse.c:191: if(KEY_TICKED(J_DOWN)){
      000430 CB 58            [ 8] 1152 	bit	3, b
      000432 28 0E            [12] 1153 	jr	Z, 00173$
      000434 CB 59            [ 8] 1154 	bit	3, c
      000436 20 0A            [12] 1155 	jr	NZ, 00173$
                           000438  1156 	C$SpriteHorse.c$192$2_1$226	= .
                                   1157 	.globl	C$SpriteHorse.c$192$2_1$226
                                   1158 ;SpriteHorse.c:192: turn = 192;
      000438 21r12r00         [12] 1159 	ld	hl, #_turn
      00043B 36 C0            [12] 1160 	ld	(hl), #0xc0
                           00043D  1161 	C$SpriteHorse.c$193$2_1$226	= .
                                   1162 	.globl	C$SpriteHorse.c$193$2_1$226
                                   1163 ;SpriteHorse.c:193: turn_samepressure_counter = 0;
      00043D 21r15r00         [12] 1164 	ld	hl, #_turn_samepressure_counter
      000440 36 00            [12] 1165 	ld	(hl), #0x00
      000442                       1166 00173$:
                           000442  1167 	C$SpriteHorse.c$195$1_1$207	= .
                                   1168 	.globl	C$SpriteHorse.c$195$1_1$207
                                   1169 ;SpriteHorse.c:195: sin = sine_wave[turn];
      000442 01r00r00         [12] 1170 	ld	bc, #_sine_wave+0
      000445 79               [ 4] 1171 	ld	a, c
      000446 21r12r00         [12] 1172 	ld	hl, #_turn
      000449 86               [ 8] 1173 	add	a, (hl)
      00044A 5F               [ 4] 1174 	ld	e, a
      00044B 78               [ 4] 1175 	ld	a, b
      00044C CE 00            [ 8] 1176 	adc	a, #0x00
      00044E 57               [ 4] 1177 	ld	d, a
      00044F 1A               [ 8] 1178 	ld	a, (de)
      000450 EAr13r00         [16] 1179 	ld	(#_sin),a
                           000453  1180 	C$SpriteHorse.c$196$1_2$227	= .
                                   1181 	.globl	C$SpriteHorse.c$196$1_2$227
                                   1182 ;SpriteHorse.c:196: UINT8 cos_idx = turn+64;
      000453 FAr12r00         [16] 1183 	ld	a, (#_turn)
      000456 C6 40            [ 8] 1184 	add	a, #0x40
                           000458  1185 	C$SpriteHorse.c$197$1_2$227	= .
                                   1186 	.globl	C$SpriteHorse.c$197$1_2$227
                                   1187 ;SpriteHorse.c:197: cos = sine_wave[cos_idx];
      000458 6F               [ 4] 1188 	ld	l, a
      000459 26 00            [ 8] 1189 	ld	h, #0x00
      00045B 09               [ 8] 1190 	add	hl, bc
      00045C 7E               [ 8] 1191 	ld	a, (hl)
      00045D EAr14r00         [16] 1192 	ld	(#_cos),a
                           000460  1193 	C$SpriteHorse.c$200$1_2$227	= .
                                   1194 	.globl	C$SpriteHorse.c$200$1_2$227
                                   1195 ;SpriteHorse.c:200: frm_skip--;
      000460 21r04r00         [12] 1196 	ld	hl, #_frm_skip
                           000463  1197 	C$SpriteHorse.c$201$1_2$227	= .
                                   1198 	.globl	C$SpriteHorse.c$201$1_2$227
                                   1199 ;SpriteHorse.c:201: if(frm_skip == 0){
      000463 35               [12] 1200 	dec	(hl)
      000464 C2r79r0A         [16] 1201 	jp	NZ, 00290$
                           000467  1202 	C$SpriteHorse.c$202$2_2$228	= .
                                   1203 	.globl	C$SpriteHorse.c$202$2_2$228
                                   1204 ;SpriteHorse.c:202: frm_skip = velocity_counter;
      000467 FAr00r00         [16] 1205 	ld	a, (#_velocity_counter)
      00046A EAr04r00         [16] 1206 	ld	(#_frm_skip),a
                           00046D  1207 	C$SpriteHorse.c$209$2_3$194	= .
                                   1208 	.globl	C$SpriteHorse.c$209$2_3$194
                                   1209 ;SpriteHorse.c:209: if(cos >= 0 && cos <= 30){//tratto come se stesse andando verticale
      00046D 21r14r00         [12] 1210 	ld	hl, #_cos
      000470 7E               [ 8] 1211 	ld	a, (hl)
      000471 07               [ 4] 1212 	rlca
      000472 E6 01            [ 8] 1213 	and	a,#0x01
      000474 4F               [ 4] 1214 	ld	c, a
      000475 5E               [ 8] 1215 	ld	e, (hl)
      000476 3E 1E            [ 8] 1216 	ld	a,#0x1e
      000478 57               [ 4] 1217 	ld	d,a
      000479 96               [ 8] 1218 	sub	a, (hl)
      00047A CB 7B            [ 8] 1219 	bit	7, e
      00047C 28 07            [12] 1220 	jr	Z, 01052$
      00047E CB 7A            [ 8] 1221 	bit	7, d
      000480 20 08            [12] 1222 	jr	NZ, 01053$
      000482 BF               [ 4] 1223 	cp	a, a
      000483 18 05            [12] 1224 	jr	01053$
      000485                       1225 01052$:
      000485 CB 7A            [ 8] 1226 	bit	7, d
      000487 28 01            [12] 1227 	jr	Z, 01053$
      000489 37               [ 4] 1228 	scf
      00048A                       1229 01053$:
      00048A 3E 00            [ 8] 1230 	ld	a, #0x00
      00048C 17               [ 4] 1231 	rla
      00048D CB 41            [ 8] 1232 	bit	0, c
      00048F 20 0B            [12] 1233 	jr	NZ, 00201$
      000491 B7               [ 4] 1234 	or	a, a
      000492 20 08            [12] 1235 	jr	NZ, 00201$
                           000494  1236 	C$SpriteHorse.c$210$3_2$229	= .
                                   1237 	.globl	C$SpriteHorse.c$210$3_2$229
                                   1238 ;SpriteHorse.c:210: vx = 0;
      000494 21r03r00         [12] 1239 	ld	hl, #_vx
      000497 36 00            [12] 1240 	ld	(hl), #0x00
      000499 C3r80r05         [16] 1241 	jp	00202$
      00049C                       1242 00201$:
                           00049C  1243 	C$SpriteHorse.c$211$2_2$228	= .
                                   1244 	.globl	C$SpriteHorse.c$211$2_2$228
                                   1245 ;SpriteHorse.c:211: }else if(cos > 30 && cos < 54){// tratto come se stesse andando a 66 gradi
      00049C B7               [ 4] 1246 	or	a, a
      00049D 28 11            [12] 1247 	jr	Z, 00197$
      00049F FAr14r00         [16] 1248 	ld	a, (#_cos)
      0004A2 EE 80            [ 8] 1249 	xor	a, #0x80
      0004A4 D6 B6            [ 8] 1250 	sub	a, #0xb6
      0004A6 30 08            [12] 1251 	jr	NC, 00197$
                           0004A8  1252 	C$SpriteHorse.c$212$3_2$230	= .
                                   1253 	.globl	C$SpriteHorse.c$212$3_2$230
                                   1254 ;SpriteHorse.c:212: vx = 1;
      0004A8 21r03r00         [12] 1255 	ld	hl, #_vx
      0004AB 36 01            [12] 1256 	ld	(hl), #0x01
      0004AD C3r80r05         [16] 1257 	jp	00202$
      0004B0                       1258 00197$:
                           0004B0  1259 	C$SpriteHorse.c$213$2_2$228	= .
                                   1260 	.globl	C$SpriteHorse.c$213$2_2$228
                                   1261 ;SpriteHorse.c:213: }else if(cos > 54 && cos < 78){// tratto come se stesse andando a 33 gradi
      0004B0 21r14r00         [12] 1262 	ld	hl, #_cos
      0004B3 5E               [ 8] 1263 	ld	e, (hl)
      0004B4 3E 36            [ 8] 1264 	ld	a,#0x36
      0004B6 57               [ 4] 1265 	ld	d,a
      0004B7 96               [ 8] 1266 	sub	a, (hl)
      0004B8 CB 7B            [ 8] 1267 	bit	7, e
      0004BA 28 07            [12] 1268 	jr	Z, 01054$
      0004BC CB 7A            [ 8] 1269 	bit	7, d
      0004BE 20 08            [12] 1270 	jr	NZ, 01055$
      0004C0 BF               [ 4] 1271 	cp	a, a
      0004C1 18 05            [12] 1272 	jr	01055$
      0004C3                       1273 01054$:
      0004C3 CB 7A            [ 8] 1274 	bit	7, d
      0004C5 28 01            [12] 1275 	jr	Z, 01055$
      0004C7 37               [ 4] 1276 	scf
      0004C8                       1277 01055$:
      0004C8 30 11            [12] 1278 	jr	NC, 00193$
      0004CA FAr14r00         [16] 1279 	ld	a, (#_cos)
      0004CD EE 80            [ 8] 1280 	xor	a, #0x80
      0004CF D6 CE            [ 8] 1281 	sub	a, #0xce
      0004D1 30 08            [12] 1282 	jr	NC, 00193$
                           0004D3  1283 	C$SpriteHorse.c$214$3_2$231	= .
                                   1284 	.globl	C$SpriteHorse.c$214$3_2$231
                                   1285 ;SpriteHorse.c:214: vx = 2;
      0004D3 21r03r00         [12] 1286 	ld	hl, #_vx
      0004D6 36 02            [12] 1287 	ld	(hl), #0x02
      0004D8 C3r80r05         [16] 1288 	jp	00202$
      0004DB                       1289 00193$:
                           0004DB  1290 	C$SpriteHorse.c$215$2_2$228	= .
                                   1291 	.globl	C$SpriteHorse.c$215$2_2$228
                                   1292 ;SpriteHorse.c:215: }else if(cos > 78){ // tratto come se stesse andando orizzontale destra
      0004DB 21r14r00         [12] 1293 	ld	hl, #_cos
      0004DE 5E               [ 8] 1294 	ld	e, (hl)
      0004DF 3E 4E            [ 8] 1295 	ld	a,#0x4e
      0004E1 57               [ 4] 1296 	ld	d,a
      0004E2 96               [ 8] 1297 	sub	a, (hl)
      0004E3 CB 7B            [ 8] 1298 	bit	7, e
      0004E5 28 07            [12] 1299 	jr	Z, 01056$
      0004E7 CB 7A            [ 8] 1300 	bit	7, d
      0004E9 20 08            [12] 1301 	jr	NZ, 01057$
      0004EB BF               [ 4] 1302 	cp	a, a
      0004EC 18 05            [12] 1303 	jr	01057$
      0004EE                       1304 01056$:
      0004EE CB 7A            [ 8] 1305 	bit	7, d
      0004F0 28 01            [12] 1306 	jr	Z, 01057$
      0004F2 37               [ 4] 1307 	scf
      0004F3                       1308 01057$:
      0004F3 30 08            [12] 1309 	jr	NC, 00190$
                           0004F5  1310 	C$SpriteHorse.c$216$3_2$232	= .
                                   1311 	.globl	C$SpriteHorse.c$216$3_2$232
                                   1312 ;SpriteHorse.c:216: vx = 3;
      0004F5 21r03r00         [12] 1313 	ld	hl, #_vx
      0004F8 36 03            [12] 1314 	ld	(hl), #0x03
      0004FA C3r80r05         [16] 1315 	jp	00202$
      0004FD                       1316 00190$:
                           0004FD  1317 	C$SpriteHorse.c$217$2_2$228	= .
                                   1318 	.globl	C$SpriteHorse.c$217$2_2$228
                                   1319 ;SpriteHorse.c:217: }else if(cos < 0 && cos > -30){//tratto come se stesse andando verticale
      0004FD 79               [ 4] 1320 	ld	a, c
      0004FE B7               [ 4] 1321 	or	a, a
      0004FF 28 21            [12] 1322 	jr	Z, 00186$
      000501 21r14r00         [12] 1323 	ld	hl, #_cos
      000504 5E               [ 8] 1324 	ld	e, (hl)
      000505 3E E2            [ 8] 1325 	ld	a,#0xe2
      000507 57               [ 4] 1326 	ld	d,a
      000508 96               [ 8] 1327 	sub	a, (hl)
      000509 CB 7B            [ 8] 1328 	bit	7, e
      00050B 28 07            [12] 1329 	jr	Z, 01058$
      00050D CB 7A            [ 8] 1330 	bit	7, d
      00050F 20 08            [12] 1331 	jr	NZ, 01059$
      000511 BF               [ 4] 1332 	cp	a, a
      000512 18 05            [12] 1333 	jr	01059$
      000514                       1334 01058$:
      000514 CB 7A            [ 8] 1335 	bit	7, d
      000516 28 01            [12] 1336 	jr	Z, 01059$
      000518 37               [ 4] 1337 	scf
      000519                       1338 01059$:
      000519 30 07            [12] 1339 	jr	NC, 00186$
                           00051B  1340 	C$SpriteHorse.c$218$3_2$233	= .
                                   1341 	.globl	C$SpriteHorse.c$218$3_2$233
                                   1342 ;SpriteHorse.c:218: vx = 0;
      00051B 21r03r00         [12] 1343 	ld	hl, #_vx
      00051E 36 00            [12] 1344 	ld	(hl), #0x00
      000520 18 5E            [12] 1345 	jr	00202$
      000522                       1346 00186$:
                           000522  1347 	C$SpriteHorse.c$219$2_2$228	= .
                                   1348 	.globl	C$SpriteHorse.c$219$2_2$228
                                   1349 ;SpriteHorse.c:219: }else if(cos < -30 && cos > -54){// tratto come se stesse andando a 66 gradi sinistra
      000522 21r14r00         [12] 1350 	ld	hl, #_cos
      000525 7E               [ 8] 1351 	ld	a, (hl)
      000526 EE 80            [ 8] 1352 	xor	a, #0x80
      000528 D6 62            [ 8] 1353 	sub	a, #0x62
      00052A 30 1E            [12] 1354 	jr	NC, 00182$
      00052C 5E               [ 8] 1355 	ld	e, (hl)
      00052D 3E CA            [ 8] 1356 	ld	a,#0xca
      00052F 57               [ 4] 1357 	ld	d,a
      000530 96               [ 8] 1358 	sub	a, (hl)
      000531 CB 7B            [ 8] 1359 	bit	7, e
      000533 28 07            [12] 1360 	jr	Z, 01060$
      000535 CB 7A            [ 8] 1361 	bit	7, d
      000537 20 08            [12] 1362 	jr	NZ, 01061$
      000539 BF               [ 4] 1363 	cp	a, a
      00053A 18 05            [12] 1364 	jr	01061$
      00053C                       1365 01060$:
      00053C CB 7A            [ 8] 1366 	bit	7, d
      00053E 28 01            [12] 1367 	jr	Z, 01061$
      000540 37               [ 4] 1368 	scf
      000541                       1369 01061$:
      000541 30 07            [12] 1370 	jr	NC, 00182$
                           000543  1371 	C$SpriteHorse.c$220$3_2$234	= .
                                   1372 	.globl	C$SpriteHorse.c$220$3_2$234
                                   1373 ;SpriteHorse.c:220: vx = -1;
      000543 21r03r00         [12] 1374 	ld	hl, #_vx
      000546 36 FF            [12] 1375 	ld	(hl), #0xff
      000548 18 36            [12] 1376 	jr	00202$
      00054A                       1377 00182$:
                           00054A  1378 	C$SpriteHorse.c$221$2_2$228	= .
                                   1379 	.globl	C$SpriteHorse.c$221$2_2$228
                                   1380 ;SpriteHorse.c:221: }else if(cos < -54 && cos > -78){// tratto come se stesse andando a 33 gradi sinistra
      00054A 21r14r00         [12] 1381 	ld	hl, #_cos
      00054D 7E               [ 8] 1382 	ld	a, (hl)
      00054E EE 80            [ 8] 1383 	xor	a, #0x80
      000550 D6 4A            [ 8] 1384 	sub	a, #0x4a
      000552 30 1E            [12] 1385 	jr	NC, 00178$
      000554 5E               [ 8] 1386 	ld	e, (hl)
      000555 3E B2            [ 8] 1387 	ld	a,#0xb2
      000557 57               [ 4] 1388 	ld	d,a
      000558 96               [ 8] 1389 	sub	a, (hl)
      000559 CB 7B            [ 8] 1390 	bit	7, e
      00055B 28 07            [12] 1391 	jr	Z, 01062$
      00055D CB 7A            [ 8] 1392 	bit	7, d
      00055F 20 08            [12] 1393 	jr	NZ, 01063$
      000561 BF               [ 4] 1394 	cp	a, a
      000562 18 05            [12] 1395 	jr	01063$
      000564                       1396 01062$:
      000564 CB 7A            [ 8] 1397 	bit	7, d
      000566 28 01            [12] 1398 	jr	Z, 01063$
      000568 37               [ 4] 1399 	scf
      000569                       1400 01063$:
      000569 30 07            [12] 1401 	jr	NC, 00178$
                           00056B  1402 	C$SpriteHorse.c$222$3_2$235	= .
                                   1403 	.globl	C$SpriteHorse.c$222$3_2$235
                                   1404 ;SpriteHorse.c:222: vx = -2;
      00056B 21r03r00         [12] 1405 	ld	hl, #_vx
      00056E 36 FE            [12] 1406 	ld	(hl), #0xfe
      000570 18 0E            [12] 1407 	jr	00202$
      000572                       1408 00178$:
                           000572  1409 	C$SpriteHorse.c$223$2_2$228	= .
                                   1410 	.globl	C$SpriteHorse.c$223$2_2$228
                                   1411 ;SpriteHorse.c:223: }else if(cos < -78){ // tratto come se stesse andando orizzontale sinistra
      000572 FAr14r00         [16] 1412 	ld	a, (#_cos)
      000575 EE 80            [ 8] 1413 	xor	a, #0x80
      000577 D6 32            [ 8] 1414 	sub	a, #0x32
      000579 30 05            [12] 1415 	jr	NC, 00202$
                           00057B  1416 	C$SpriteHorse.c$224$3_2$236	= .
                                   1417 	.globl	C$SpriteHorse.c$224$3_2$236
                                   1418 ;SpriteHorse.c:224: vx = -3;
      00057B 21r03r00         [12] 1419 	ld	hl, #_vx
      00057E 36 FD            [12] 1420 	ld	(hl), #0xfd
      000580                       1421 00202$:
                           000580  1422 	C$SpriteHorse.c$172$2_3$194	= .
                                   1423 	.globl	C$SpriteHorse.c$172$2_3$194
                                   1424 ;SpriteHorse.c:172: if(turn_samepressure_counter >= 40 && ((sin > 30 && sin < 78) || (sin < -30 && sin > -78))){
      000580 21r13r00         [12] 1425 	ld	hl, #_sin
      000583 5E               [ 8] 1426 	ld	e, (hl)
      000584 3E 1E            [ 8] 1427 	ld	a,#0x1e
      000586 57               [ 4] 1428 	ld	d,a
      000587 96               [ 8] 1429 	sub	a, (hl)
      000588 CB 7B            [ 8] 1430 	bit	7, e
      00058A 28 07            [12] 1431 	jr	Z, 01064$
      00058C CB 7A            [ 8] 1432 	bit	7, d
      00058E 20 08            [12] 1433 	jr	NZ, 01065$
      000590 BF               [ 4] 1434 	cp	a, a
      000591 18 05            [12] 1435 	jr	01065$
      000593                       1436 01064$:
      000593 CB 7A            [ 8] 1437 	bit	7, d
      000595 28 01            [12] 1438 	jr	Z, 01065$
      000597 37               [ 4] 1439 	scf
      000598                       1440 01065$:
      000598 3E 00            [ 8] 1441 	ld	a, #0x00
      00059A 17               [ 4] 1442 	rla
      00059B 4F               [ 4] 1443 	ld	c, a
                           00059C  1444 	C$SpriteHorse.c$227$2_3$194	= .
                                   1445 	.globl	C$SpriteHorse.c$227$2_3$194
                                   1446 ;SpriteHorse.c:227: if(sin >= 0 && sin <= 30){//tratto come se stesse andando orizzontale
      00059C FAr13r00         [16] 1447 	ld	a, (#_sin)
      00059F 07               [ 4] 1448 	rlca
      0005A0 E6 01            [ 8] 1449 	and	a,#0x01
      0005A2 47               [ 4] 1450 	ld	b, a
      0005A3 CB 40            [ 8] 1451 	bit	0, b
      0005A5 20 0D            [12] 1452 	jr	NZ, 00230$
      0005A7 59               [ 4] 1453 	ld	e, c
      0005A8 CB 43            [ 8] 1454 	bit	0, e
      0005AA 20 08            [12] 1455 	jr	NZ, 00230$
                           0005AC  1456 	C$SpriteHorse.c$228$3_2$237	= .
                                   1457 	.globl	C$SpriteHorse.c$228$3_2$237
                                   1458 ;SpriteHorse.c:228: vy = 0;
      0005AC 21r02r00         [12] 1459 	ld	hl, #_vy
      0005AF 36 00            [12] 1460 	ld	(hl), #0x00
      0005B1 C3r99r06         [16] 1461 	jp	00231$
      0005B4                       1462 00230$:
                           0005B4  1463 	C$SpriteHorse.c$229$2_2$228	= .
                                   1464 	.globl	C$SpriteHorse.c$229$2_2$228
                                   1465 ;SpriteHorse.c:229: }else if(sin > 30 && sin < 54){// tratto come se stesse andando a 33 gradi
      0005B4 79               [ 4] 1466 	ld	a, c
      0005B5 B7               [ 4] 1467 	or	a, a
      0005B6 28 11            [12] 1468 	jr	Z, 00226$
      0005B8 FAr13r00         [16] 1469 	ld	a, (#_sin)
      0005BB EE 80            [ 8] 1470 	xor	a, #0x80
      0005BD D6 B6            [ 8] 1471 	sub	a, #0xb6
      0005BF 30 08            [12] 1472 	jr	NC, 00226$
                           0005C1  1473 	C$SpriteHorse.c$230$3_2$238	= .
                                   1474 	.globl	C$SpriteHorse.c$230$3_2$238
                                   1475 ;SpriteHorse.c:230: vy = -1;
      0005C1 21r02r00         [12] 1476 	ld	hl, #_vy
      0005C4 36 FF            [12] 1477 	ld	(hl), #0xff
      0005C6 C3r99r06         [16] 1478 	jp	00231$
      0005C9                       1479 00226$:
                           0005C9  1480 	C$SpriteHorse.c$231$2_2$228	= .
                                   1481 	.globl	C$SpriteHorse.c$231$2_2$228
                                   1482 ;SpriteHorse.c:231: }else if(sin > 54 && sin < 78){// tratto come se stesse andando a 66 gradi
      0005C9 21r13r00         [12] 1483 	ld	hl, #_sin
      0005CC 5E               [ 8] 1484 	ld	e, (hl)
      0005CD 3E 36            [ 8] 1485 	ld	a,#0x36
      0005CF 57               [ 4] 1486 	ld	d,a
      0005D0 96               [ 8] 1487 	sub	a, (hl)
      0005D1 CB 7B            [ 8] 1488 	bit	7, e
      0005D3 28 07            [12] 1489 	jr	Z, 01066$
      0005D5 CB 7A            [ 8] 1490 	bit	7, d
      0005D7 20 08            [12] 1491 	jr	NZ, 01067$
      0005D9 BF               [ 4] 1492 	cp	a, a
      0005DA 18 05            [12] 1493 	jr	01067$
      0005DC                       1494 01066$:
      0005DC CB 7A            [ 8] 1495 	bit	7, d
      0005DE 28 01            [12] 1496 	jr	Z, 01067$
      0005E0 37               [ 4] 1497 	scf
      0005E1                       1498 01067$:
      0005E1 30 11            [12] 1499 	jr	NC, 00222$
      0005E3 FAr13r00         [16] 1500 	ld	a, (#_sin)
      0005E6 EE 80            [ 8] 1501 	xor	a, #0x80
      0005E8 D6 CE            [ 8] 1502 	sub	a, #0xce
      0005EA 30 08            [12] 1503 	jr	NC, 00222$
                           0005EC  1504 	C$SpriteHorse.c$232$3_2$239	= .
                                   1505 	.globl	C$SpriteHorse.c$232$3_2$239
                                   1506 ;SpriteHorse.c:232: vy = -1;
      0005EC 21r02r00         [12] 1507 	ld	hl, #_vy
      0005EF 36 FF            [12] 1508 	ld	(hl), #0xff
      0005F1 C3r99r06         [16] 1509 	jp	00231$
      0005F4                       1510 00222$:
                           0005F4  1511 	C$SpriteHorse.c$233$2_2$228	= .
                                   1512 	.globl	C$SpriteHorse.c$233$2_2$228
                                   1513 ;SpriteHorse.c:233: }else if(sin > 78){ // tratto come se stesse andando verticale alto
      0005F4 21r13r00         [12] 1514 	ld	hl, #_sin
      0005F7 5E               [ 8] 1515 	ld	e, (hl)
      0005F8 3E 4E            [ 8] 1516 	ld	a,#0x4e
      0005FA 57               [ 4] 1517 	ld	d,a
      0005FB 96               [ 8] 1518 	sub	a, (hl)
      0005FC CB 7B            [ 8] 1519 	bit	7, e
      0005FE 28 07            [12] 1520 	jr	Z, 01068$
      000600 CB 7A            [ 8] 1521 	bit	7, d
      000602 20 08            [12] 1522 	jr	NZ, 01069$
      000604 BF               [ 4] 1523 	cp	a, a
      000605 18 05            [12] 1524 	jr	01069$
      000607                       1525 01068$:
      000607 CB 7A            [ 8] 1526 	bit	7, d
      000609 28 01            [12] 1527 	jr	Z, 01069$
      00060B 37               [ 4] 1528 	scf
      00060C                       1529 01069$:
      00060C 30 08            [12] 1530 	jr	NC, 00219$
                           00060E  1531 	C$SpriteHorse.c$234$3_2$240	= .
                                   1532 	.globl	C$SpriteHorse.c$234$3_2$240
                                   1533 ;SpriteHorse.c:234: vy = -2;
      00060E 21r02r00         [12] 1534 	ld	hl, #_vy
      000611 36 FE            [12] 1535 	ld	(hl), #0xfe
      000613 C3r99r06         [16] 1536 	jp	00231$
      000616                       1537 00219$:
                           000616  1538 	C$SpriteHorse.c$235$2_2$228	= .
                                   1539 	.globl	C$SpriteHorse.c$235$2_2$228
                                   1540 ;SpriteHorse.c:235: }else if(sin < 0 && sin > -30){//tratto come se stesse andando orizzontale
      000616 78               [ 4] 1541 	ld	a, b
      000617 B7               [ 4] 1542 	or	a, a
      000618 28 21            [12] 1543 	jr	Z, 00215$
      00061A 21r13r00         [12] 1544 	ld	hl, #_sin
      00061D 5E               [ 8] 1545 	ld	e, (hl)
      00061E 3E E2            [ 8] 1546 	ld	a,#0xe2
      000620 57               [ 4] 1547 	ld	d,a
      000621 96               [ 8] 1548 	sub	a, (hl)
      000622 CB 7B            [ 8] 1549 	bit	7, e
      000624 28 07            [12] 1550 	jr	Z, 01070$
      000626 CB 7A            [ 8] 1551 	bit	7, d
      000628 20 08            [12] 1552 	jr	NZ, 01071$
      00062A BF               [ 4] 1553 	cp	a, a
      00062B 18 05            [12] 1554 	jr	01071$
      00062D                       1555 01070$:
      00062D CB 7A            [ 8] 1556 	bit	7, d
      00062F 28 01            [12] 1557 	jr	Z, 01071$
      000631 37               [ 4] 1558 	scf
      000632                       1559 01071$:
      000632 30 07            [12] 1560 	jr	NC, 00215$
                           000634  1561 	C$SpriteHorse.c$236$3_2$241	= .
                                   1562 	.globl	C$SpriteHorse.c$236$3_2$241
                                   1563 ;SpriteHorse.c:236: vy = 0;
      000634 21r02r00         [12] 1564 	ld	hl, #_vy
      000637 36 00            [12] 1565 	ld	(hl), #0x00
      000639 18 5E            [12] 1566 	jr	00231$
      00063B                       1567 00215$:
                           00063B  1568 	C$SpriteHorse.c$237$2_2$228	= .
                                   1569 	.globl	C$SpriteHorse.c$237$2_2$228
                                   1570 ;SpriteHorse.c:237: }else if(sin < -30 && sin > -54){// tratto come se stesse andando a -33 gradi 
      00063B 21r13r00         [12] 1571 	ld	hl, #_sin
      00063E 7E               [ 8] 1572 	ld	a, (hl)
      00063F EE 80            [ 8] 1573 	xor	a, #0x80
      000641 D6 62            [ 8] 1574 	sub	a, #0x62
      000643 30 1E            [12] 1575 	jr	NC, 00211$
      000645 5E               [ 8] 1576 	ld	e, (hl)
      000646 3E CA            [ 8] 1577 	ld	a,#0xca
      000648 57               [ 4] 1578 	ld	d,a
      000649 96               [ 8] 1579 	sub	a, (hl)
      00064A CB 7B            [ 8] 1580 	bit	7, e
      00064C 28 07            [12] 1581 	jr	Z, 01072$
      00064E CB 7A            [ 8] 1582 	bit	7, d
      000650 20 08            [12] 1583 	jr	NZ, 01073$
      000652 BF               [ 4] 1584 	cp	a, a
      000653 18 05            [12] 1585 	jr	01073$
      000655                       1586 01072$:
      000655 CB 7A            [ 8] 1587 	bit	7, d
      000657 28 01            [12] 1588 	jr	Z, 01073$
      000659 37               [ 4] 1589 	scf
      00065A                       1590 01073$:
      00065A 30 07            [12] 1591 	jr	NC, 00211$
                           00065C  1592 	C$SpriteHorse.c$238$3_2$242	= .
                                   1593 	.globl	C$SpriteHorse.c$238$3_2$242
                                   1594 ;SpriteHorse.c:238: vy = 1;
      00065C 21r02r00         [12] 1595 	ld	hl, #_vy
      00065F 36 01            [12] 1596 	ld	(hl), #0x01
      000661 18 36            [12] 1597 	jr	00231$
      000663                       1598 00211$:
                           000663  1599 	C$SpriteHorse.c$239$2_2$228	= .
                                   1600 	.globl	C$SpriteHorse.c$239$2_2$228
                                   1601 ;SpriteHorse.c:239: }else if(sin < -54 && sin > -78){// tratto come se stesse andando a -66 gradi 
      000663 21r13r00         [12] 1602 	ld	hl, #_sin
      000666 7E               [ 8] 1603 	ld	a, (hl)
      000667 EE 80            [ 8] 1604 	xor	a, #0x80
      000669 D6 4A            [ 8] 1605 	sub	a, #0x4a
      00066B 30 1E            [12] 1606 	jr	NC, 00207$
      00066D 5E               [ 8] 1607 	ld	e, (hl)
      00066E 3E B2            [ 8] 1608 	ld	a,#0xb2
      000670 57               [ 4] 1609 	ld	d,a
      000671 96               [ 8] 1610 	sub	a, (hl)
      000672 CB 7B            [ 8] 1611 	bit	7, e
      000674 28 07            [12] 1612 	jr	Z, 01074$
      000676 CB 7A            [ 8] 1613 	bit	7, d
      000678 20 08            [12] 1614 	jr	NZ, 01075$
      00067A BF               [ 4] 1615 	cp	a, a
      00067B 18 05            [12] 1616 	jr	01075$
      00067D                       1617 01074$:
      00067D CB 7A            [ 8] 1618 	bit	7, d
      00067F 28 01            [12] 1619 	jr	Z, 01075$
      000681 37               [ 4] 1620 	scf
      000682                       1621 01075$:
      000682 30 07            [12] 1622 	jr	NC, 00207$
                           000684  1623 	C$SpriteHorse.c$240$3_2$243	= .
                                   1624 	.globl	C$SpriteHorse.c$240$3_2$243
                                   1625 ;SpriteHorse.c:240: vy = 1;
      000684 21r02r00         [12] 1626 	ld	hl, #_vy
      000687 36 01            [12] 1627 	ld	(hl), #0x01
      000689 18 0E            [12] 1628 	jr	00231$
      00068B                       1629 00207$:
                           00068B  1630 	C$SpriteHorse.c$241$2_2$228	= .
                                   1631 	.globl	C$SpriteHorse.c$241$2_2$228
                                   1632 ;SpriteHorse.c:241: }else if(sin < -78){ // tratto come se stesse andando verticale basso
      00068B FAr13r00         [16] 1633 	ld	a, (#_sin)
      00068E EE 80            [ 8] 1634 	xor	a, #0x80
      000690 D6 32            [ 8] 1635 	sub	a, #0x32
      000692 30 05            [12] 1636 	jr	NC, 00231$
                           000694  1637 	C$SpriteHorse.c$242$3_2$244	= .
                                   1638 	.globl	C$SpriteHorse.c$242$3_2$244
                                   1639 ;SpriteHorse.c:242: vy = 2;
      000694 21r02r00         [12] 1640 	ld	hl, #_vy
      000697 36 02            [12] 1641 	ld	(hl), #0x02
      000699                       1642 00231$:
                           000699  1643 	C$SpriteHorse.c$245$2_3$245	= .
                                   1644 	.globl	C$SpriteHorse.c$245$2_3$245
                                   1645 ;SpriteHorse.c:245: INT8 horse_coll = TranslateSprite(THIS, vx << delta_time, vy << delta_time);
      000699 21r00r00         [12] 1646 	ld	hl, #_delta_time
      00069C 46               [ 8] 1647 	ld	b, (hl)
      00069D FAr02r00         [16] 1648 	ld	a, (#_vy)
      0006A0 04               [ 4] 1649 	inc	b
      0006A1 18 01            [12] 1650 	jr	01077$
      0006A3                       1651 01076$:
      0006A3 87               [ 4] 1652 	add	a, a
      0006A4                       1653 01077$:
      0006A4 05               [ 4] 1654 	dec	b
      0006A5 20 FC            [12] 1655 	jr	NZ,01076$
      0006A7 21r00r00         [12] 1656 	ld	hl, #_delta_time
      0006AA 46               [ 8] 1657 	ld	b, (hl)
      0006AB 21r03r00         [12] 1658 	ld	hl, #_vx
      0006AE 4E               [ 8] 1659 	ld	c, (hl)
      0006AF 04               [ 4] 1660 	inc	b
      0006B0 18 02            [12] 1661 	jr	01079$
      0006B2                       1662 01078$:
      0006B2 CB 21            [ 8] 1663 	sla	c
      0006B4                       1664 01079$:
      0006B4 05               [ 4] 1665 	dec	b
      0006B5 20 FB            [12] 1666 	jr	NZ,01078$
      0006B7 F5               [16] 1667 	push	af
      0006B8 33               [ 8] 1668 	inc	sp
      0006B9 79               [ 4] 1669 	ld	a, c
      0006BA 21r00r00         [12] 1670 	ld	hl, #_THIS
      0006BD 5E               [ 8] 1671 	ld	e, (hl)
      0006BE 23               [ 8] 1672 	inc	hl
      0006BF 56               [ 8] 1673 	ld	d, (hl)
      0006C0 CDr00r00         [24] 1674 	call	_TranslateSprite
                           0006C3  1675 	C$SpriteHorse.c$247$2_3$245	= .
                                   1676 	.globl	C$SpriteHorse.c$247$2_3$245
                                   1677 ;SpriteHorse.c:247: if(horse_coll){//collido con tile ambiente di collisione
                           0006C3  1678 	C$SpriteHorse.c$248$3_3$246	= .
                                   1679 	.globl	C$SpriteHorse.c$248$3_3$246
                                   1680 ;SpriteHorse.c:248: if(horse_coll == 118 || horse_coll == 119 || horse_coll == 121){//FINE TRACCIA!!
      0006C3 4F               [ 4] 1681 	ld	c,a
      0006C4 B7               [ 4] 1682 	or	a,a
      0006C5 28 64            [12] 1683 	jr	Z, 00284$
      0006C7 D6 76            [ 8] 1684 	sub	a, #0x76
      0006C9 28 09            [12] 1685 	jr	Z, 00236$
      0006CB 79               [ 4] 1686 	ld	a,c
      0006CC FE 77            [ 8] 1687 	cp	a,#0x77
      0006CE 28 04            [12] 1688 	jr	Z, 00236$
      0006D0 D6 79            [ 8] 1689 	sub	a, #0x79
      0006D2 20 08            [12] 1690 	jr	NZ, 00237$
      0006D4                       1691 00236$:
                           0006D4  1692 	C$SpriteHorse.c$249$4_3$247	= .
                                   1693 	.globl	C$SpriteHorse.c$249$4_3$247
                                   1694 ;SpriteHorse.c:249: track_ended = 1u;
      0006D4 21r00r00         [12] 1695 	ld	hl, #_track_ended
      0006D7 36 01            [12] 1696 	ld	(hl), #0x01
      0006D9 C3r12r0A         [16] 1697 	jp	00285$
      0006DC                       1698 00237$:
                           0006DC  1699 	C$SpriteHorse.c$251$4_3$248	= .
                                   1700 	.globl	C$SpriteHorse.c$251$4_3$248
                                   1701 ;SpriteHorse.c:251: past_coll_tile = horse_coll;
      0006DC 21r16r00         [12] 1702 	ld	hl, #_past_coll_tile
      0006DF 71               [ 8] 1703 	ld	(hl), c
                           0006E0  1704 	C$SpriteHorse.c$252$4_4$249	= .
                                   1705 	.globl	C$SpriteHorse.c$252$4_4$249
                                   1706 ;SpriteHorse.c:252: INT8 vxbounce = vx * (-1); 
      0006E0 AF               [ 4] 1707 	xor	a, a
      0006E1 21r03r00         [12] 1708 	ld	hl, #_vx
      0006E4 96               [ 8] 1709 	sub	a, (hl)
      0006E5 47               [ 4] 1710 	ld	b, a
                           0006E6  1711 	C$SpriteHorse.c$253$4_4$249	= .
                                   1712 	.globl	C$SpriteHorse.c$253$4_4$249
                                   1713 ;SpriteHorse.c:253: INT8 vybounce = vy * (-1);
      0006E6 AF               [ 4] 1714 	xor	a, a
      0006E7 21r02r00         [12] 1715 	ld	hl, #_vy
      0006EA 96               [ 8] 1716 	sub	a, (hl)
      0006EB 4F               [ 4] 1717 	ld	c, a
                           0006EC  1718 	C$SpriteHorse.c$254$4_4$249	= .
                                   1719 	.globl	C$SpriteHorse.c$254$4_4$249
                                   1720 ;SpriteHorse.c:254: if(vx < 2){
      0006EC FAr03r00         [16] 1721 	ld	a, (#_vx)
      0006EF EE 80            [ 8] 1722 	xor	a, #0x80
      0006F1 D6 82            [ 8] 1723 	sub	a, #0x82
      0006F3 30 1B            [12] 1724 	jr	NC, 00234$
                           0006F5  1725 	C$SpriteHorse.c$255$5_4$250	= .
                                   1726 	.globl	C$SpriteHorse.c$255$5_4$250
                                   1727 ;SpriteHorse.c:255: TranslateSprite(THIS, vxbounce << delta_time, 0);
      0006F5 FAr00r00         [16] 1728 	ld	a, (#_delta_time)
      0006F8 3C               [ 4] 1729 	inc	a
      0006F9 18 02            [12] 1730 	jr	01085$
      0006FB                       1731 01084$:
      0006FB CB 20            [ 8] 1732 	sla	b
      0006FD                       1733 01085$:
      0006FD 3D               [ 4] 1734 	dec	a
      0006FE 20 FB            [12] 1735 	jr	NZ,01084$
      000700 AF               [ 4] 1736 	xor	a, a
      000701 F5               [16] 1737 	push	af
      000702 33               [ 8] 1738 	inc	sp
      000703 78               [ 4] 1739 	ld	a, b
      000704 21r00r00         [12] 1740 	ld	hl, #_THIS
      000707 5E               [ 8] 1741 	ld	e, (hl)
      000708 23               [ 8] 1742 	inc	hl
      000709 56               [ 8] 1743 	ld	d, (hl)
      00070A CDr00r00         [24] 1744 	call	_TranslateSprite
      00070D C3r12r0A         [16] 1745 	jp	00285$
      000710                       1746 00234$:
                           000710  1747 	C$SpriteHorse.c$257$5_4$251	= .
                                   1748 	.globl	C$SpriteHorse.c$257$5_4$251
                                   1749 ;SpriteHorse.c:257: TranslateSprite(THIS, 0, vybounce << delta_time);
      000710 21r00r00         [12] 1750 	ld	hl, #_delta_time
      000713 46               [ 8] 1751 	ld	b, (hl)
      000714 79               [ 4] 1752 	ld	a, c
      000715 04               [ 4] 1753 	inc	b
      000716 18 01            [12] 1754 	jr	01087$
      000718                       1755 01086$:
      000718 87               [ 4] 1756 	add	a, a
      000719                       1757 01087$:
      000719 05               [ 4] 1758 	dec	b
      00071A 20 FC            [12] 1759 	jr	NZ,01086$
      00071C F5               [16] 1760 	push	af
      00071D 33               [ 8] 1761 	inc	sp
      00071E AF               [ 4] 1762 	xor	a, a
      00071F 21r00r00         [12] 1763 	ld	hl, #_THIS
      000722 5E               [ 8] 1764 	ld	e, (hl)
      000723 23               [ 8] 1765 	inc	hl
      000724 56               [ 8] 1766 	ld	d, (hl)
      000725 CDr00r00         [24] 1767 	call	_TranslateSprite
      000728 C3r12r0A         [16] 1768 	jp	00285$
      00072B                       1769 00284$:
                           00072B  1770 	C$SpriteHorse.c$80$2_3$194	= .
                                   1771 	.globl	C$SpriteHorse.c$80$2_3$194
                                   1772 ;SpriteHorse.c:80: THIS->x += vx;
      00072B 21r00r00         [12] 1773 	ld	hl, #_THIS
      00072E 2A               [ 8] 1774 	ld	a, (hl+)
      00072F 4F               [ 4] 1775 	ld	c, a
      000730 46               [ 8] 1776 	ld	b, (hl)
                           000731  1777 	C$SpriteHorse.c$261$3_3$252	= .
                                   1778 	.globl	C$SpriteHorse.c$261$3_3$252
                                   1779 ;SpriteHorse.c:261: UINT8 tile_over = GetScrollTile((THIS->x + 4) >> 3, (THIS->y+4) >> 3);
      000731 21 0E 00         [12] 1780 	ld	hl, #0x000e
      000734 09               [ 8] 1781 	add	hl, bc
      000735 2A               [ 8] 1782 	ld	a, (hl+)
      000736 6E               [ 8] 1783 	ld	l, (hl)
                                   1784 ;	spillPairReg hl
      000737 C6 04            [ 8] 1785 	add	a, #0x04
      000739 5F               [ 4] 1786 	ld	e, a
      00073A 7D               [ 4] 1787 	ld	a, l
      00073B CE 00            [ 8] 1788 	adc	a, #0x00
      00073D 57               [ 4] 1789 	ld	d, a
      00073E F8 07            [12] 1790 	ldhl	sp,	#7
      000740 73               [ 8] 1791 	ld	(hl), e
      000741 23               [ 8] 1792 	inc	hl
      000742 72               [ 8] 1793 	ld	(hl), d
      000743 CB 3E            [16] 1794 	srl	(hl)
      000745 2B               [ 8] 1795 	dec	hl
      000746 CB 1E            [16] 1796 	rr	(hl)
      000748 23               [ 8] 1797 	inc	hl
      000749 CB 3E            [16] 1798 	srl	(hl)
      00074B 2B               [ 8] 1799 	dec	hl
      00074C CB 1E            [16] 1800 	rr	(hl)
      00074E 23               [ 8] 1801 	inc	hl
      00074F CB 3E            [16] 1802 	srl	(hl)
      000751 2B               [ 8] 1803 	dec	hl
      000752 CB 1E            [16] 1804 	rr	(hl)
      000754 21 0C 00         [12] 1805 	ld	hl, #0x000c
      000757 09               [ 8] 1806 	add	hl, bc
      000758 4E               [ 8] 1807 	ld	c, (hl)
      000759 23               [ 8] 1808 	inc	hl
      00075A 46               [ 8] 1809 	ld	b, (hl)
      00075B 03               [ 8] 1810 	inc	bc
      00075C 03               [ 8] 1811 	inc	bc
      00075D 03               [ 8] 1812 	inc	bc
      00075E 03               [ 8] 1813 	inc	bc
      00075F 59               [ 4] 1814 	ld	e, c
      000760 50               [ 4] 1815 	ld	d, b
      000761 CB 3A            [ 8] 1816 	srl	d
      000763 CB 1B            [ 8] 1817 	rr	e
      000765 CB 3A            [ 8] 1818 	srl	d
      000767 CB 1B            [ 8] 1819 	rr	e
      000769 CB 3A            [ 8] 1820 	srl	d
      00076B CB 1B            [ 8] 1821 	rr	e
      00076D F8 07            [12] 1822 	ldhl	sp,	#7
      00076F 4E               [ 8] 1823 	ld	c, (hl)
      000770 23               [ 8] 1824 	inc	hl
      000771 46               [ 8] 1825 	ld	b, (hl)
      000772 CDr00r00         [24] 1826 	call	_GetScrollTile
      000775 F8 00            [12] 1827 	ldhl	sp,	#0
      000777 77               [ 8] 1828 	ld	(hl), a
                           000778  1829 	C$SpriteHorse.c$262$3_3$252	= .
                                   1830 	.globl	C$SpriteHorse.c$262$3_3$252
                                   1831 ;SpriteHorse.c:262: if(vx < 0){
      000778 FAr03r00         [16] 1832 	ld	a, (#_vx)
      00077B CB 7F            [ 8] 1833 	bit	7, a
      00077D 28 5D            [12] 1834 	jr	Z, 00242$
                           00077F  1835 	C$SpriteHorse.c$80$2_3$194	= .
                                   1836 	.globl	C$SpriteHorse.c$80$2_3$194
                                   1837 ;SpriteHorse.c:80: THIS->x += vx;
      00077F FAr00r00         [16] 1838 	ld	a, (#_THIS)
      000782 F8 05            [12] 1839 	ldhl	sp,	#5
      000784 77               [ 8] 1840 	ld	(hl), a
      000785 FAr01r00         [16] 1841 	ld	a, (#_THIS + 1)
      000788 F8 06            [12] 1842 	ldhl	sp,	#6
                           00078A  1843 	C$SpriteHorse.c$263$4_3$253	= .
                                   1844 	.globl	C$SpriteHorse.c$263$4_3$253
                                   1845 ;SpriteHorse.c:263: tile_over = GetScrollTile((THIS->x + 4) >> 3, (THIS->y+4) >> 3);
      00078A 32               [ 8] 1846 	ld	(hl-), a
      00078B 2A               [ 8] 1847 	ld	a, (hl+)
      00078C 5F               [ 4] 1848 	ld	e, a
      00078D 56               [ 8] 1849 	ld	d, (hl)
      00078E 21 0E 00         [12] 1850 	ld	hl, #0x000e
      000791 19               [ 8] 1851 	add	hl, de
      000792 2A               [ 8] 1852 	ld	a, (hl+)
      000793 4F               [ 4] 1853 	ld	c, a
      000794 46               [ 8] 1854 	ld	b, (hl)
      000795 03               [ 8] 1855 	inc	bc
      000796 03               [ 8] 1856 	inc	bc
      000797 03               [ 8] 1857 	inc	bc
      000798 03               [ 8] 1858 	inc	bc
      000799 CB 38            [ 8] 1859 	srl	b
      00079B CB 19            [ 8] 1860 	rr	c
      00079D CB 38            [ 8] 1861 	srl	b
      00079F CB 19            [ 8] 1862 	rr	c
      0007A1 CB 38            [ 8] 1863 	srl	b
      0007A3 CB 19            [ 8] 1864 	rr	c
      0007A5 F8 05            [12] 1865 	ldhl	sp,#5
      0007A7 2A               [ 8] 1866 	ld	a, (hl+)
      0007A8 5F               [ 4] 1867 	ld	e, a
      0007A9 56               [ 8] 1868 	ld	d, (hl)
      0007AA 21 0C 00         [12] 1869 	ld	hl, #0x000c
      0007AD 19               [ 8] 1870 	add	hl, de
      0007AE E5               [16] 1871 	push	hl
      0007AF 7D               [ 4] 1872 	ld	a, l
      0007B0 F8 09            [12] 1873 	ldhl	sp,	#9
      0007B2 77               [ 8] 1874 	ld	(hl), a
      0007B3 E1               [12] 1875 	pop	hl
      0007B4 7C               [ 4] 1876 	ld	a, h
      0007B5 F8 08            [12] 1877 	ldhl	sp,	#8
      0007B7 32               [ 8] 1878 	ld	(hl-), a
      0007B8 2A               [ 8] 1879 	ld	a, (hl+)
      0007B9 5F               [ 4] 1880 	ld	e, a
      0007BA 3A               [ 8] 1881 	ld	a, (hl-)
      0007BB 57               [ 4] 1882 	ld	d, a
      0007BC 1A               [ 8] 1883 	ld	a, (de)
      0007BD 22               [ 8] 1884 	ld	(hl+), a
      0007BE 13               [ 8] 1885 	inc	de
      0007BF 1A               [ 8] 1886 	ld	a, (de)
      0007C0 32               [ 8] 1887 	ld	(hl-), a
      0007C1 5E               [ 8] 1888 	ld	e, (hl)
      0007C2 23               [ 8] 1889 	inc	hl
      0007C3 56               [ 8] 1890 	ld	d, (hl)
      0007C4 21 04 00         [12] 1891 	ld	hl, #0x0004
      0007C7 19               [ 8] 1892 	add	hl, de
      0007C8 5D               [ 4] 1893 	ld	e, l
      0007C9 54               [ 4] 1894 	ld	d, h
      0007CA CB 3A            [ 8] 1895 	srl	d
      0007CC CB 1B            [ 8] 1896 	rr	e
      0007CE CB 3A            [ 8] 1897 	srl	d
      0007D0 CB 1B            [ 8] 1898 	rr	e
      0007D2 CB 3A            [ 8] 1899 	srl	d
      0007D4 CB 1B            [ 8] 1900 	rr	e
      0007D6 CDr00r00         [24] 1901 	call	_GetScrollTile
      0007D9 F8 00            [12] 1902 	ldhl	sp,	#0
      0007DB 77               [ 8] 1903 	ld	(hl), a
      0007DC                       1904 00242$:
                           0007DC  1905 	C$SpriteHorse.c$80$2_3$194	= .
                                   1906 	.globl	C$SpriteHorse.c$80$2_3$194
                                   1907 ;SpriteHorse.c:80: THIS->x += vx;
      0007DC 21r00r00         [12] 1908 	ld	hl, #_THIS
      0007DF 2A               [ 8] 1909 	ld	a, (hl+)
      0007E0 4F               [ 4] 1910 	ld	c, a
      0007E1 46               [ 8] 1911 	ld	b, (hl)
                           0007E2  1912 	C$SpriteHorse.c$268$2_3$194	= .
                                   1913 	.globl	C$SpriteHorse.c$268$2_3$194
                                   1914 ;SpriteHorse.c:268: if(onfire_countdown == -1){//non sta impazzendo
      0007E2 21r19r00         [12] 1915 	ld	hl, #_onfire_countdown
      0007E5 7E               [ 8] 1916 	ld	a, (hl)
      0007E6 3C               [ 4] 1917 	inc	a
      0007E7 20 07            [12] 1918 	jr	NZ, 01088$
      0007E9 23               [ 8] 1919 	inc	hl
      0007EA 7E               [ 8] 1920 	ld	a, (hl)
      0007EB 3C               [ 4] 1921 	inc	a
      0007EC 3E 01            [ 8] 1922 	ld	a, #0x01
      0007EE 28 01            [12] 1923 	jr	Z, 01089$
      0007F0                       1924 01088$:
      0007F0 AF               [ 4] 1925 	xor	a, a
      0007F1                       1926 01089$:
      0007F1 F8 01            [12] 1927 	ldhl	sp,	#1
      0007F3 77               [ 8] 1928 	ld	(hl), a
                           0007F4  1929 	C$SpriteHorse.c$275$2_3$194	= .
                                   1930 	.globl	C$SpriteHorse.c$275$2_3$194
                                   1931 ;SpriteHorse.c:275: if(vx > 0){
      0007F4 21r03r00         [12] 1932 	ld	hl, #_vx
      0007F7 5E               [ 8] 1933 	ld	e, (hl)
      0007F8 AF               [ 4] 1934 	xor	a, a
      0007F9 57               [ 4] 1935 	ld	d, a
      0007FA 96               [ 8] 1936 	sub	a, (hl)
      0007FB CB 7B            [ 8] 1937 	bit	7, e
      0007FD 28 07            [12] 1938 	jr	Z, 01090$
      0007FF CB 7A            [ 8] 1939 	bit	7, d
      000801 20 08            [12] 1940 	jr	NZ, 01091$
      000803 BF               [ 4] 1941 	cp	a, a
      000804 18 05            [12] 1942 	jr	01091$
      000806                       1943 01090$:
      000806 CB 7A            [ 8] 1944 	bit	7, d
      000808 28 01            [12] 1945 	jr	Z, 01091$
      00080A 37               [ 4] 1946 	scf
      00080B                       1947 01091$:
      00080B 3E 00            [ 8] 1948 	ld	a, #0x00
      00080D 17               [ 4] 1949 	rla
      00080E F8 02            [12] 1950 	ldhl	sp,	#2
      000810 77               [ 8] 1951 	ld	(hl), a
                           000811  1952 	C$SpriteHorse.c$80$2_3$194	= .
                                   1953 	.globl	C$SpriteHorse.c$80$2_3$194
                                   1954 ;SpriteHorse.c:80: THIS->x += vx;
      000811 21 0C 00         [12] 1955 	ld	hl, #0x000c
      000814 09               [ 8] 1956 	add	hl, bc
      000815 E5               [16] 1957 	push	hl
      000816 7D               [ 4] 1958 	ld	a, l
      000817 F8 05            [12] 1959 	ldhl	sp,	#5
      000819 77               [ 8] 1960 	ld	(hl), a
      00081A E1               [12] 1961 	pop	hl
      00081B 7C               [ 4] 1962 	ld	a, h
      00081C F8 04            [12] 1963 	ldhl	sp,	#4
      00081E 77               [ 8] 1964 	ld	(hl), a
                           00081F  1965 	C$SpriteHorse.c$81$2_3$194	= .
                                   1966 	.globl	C$SpriteHorse.c$81$2_3$194
                                   1967 ;SpriteHorse.c:81: THIS->y += vy;
      00081F 21 0E 00         [12] 1968 	ld	hl, #0x000e
      000822 09               [ 8] 1969 	add	hl, bc
      000823 E5               [16] 1970 	push	hl
      000824 7D               [ 4] 1971 	ld	a, l
      000825 F8 07            [12] 1972 	ldhl	sp,	#7
      000827 77               [ 8] 1973 	ld	(hl), a
      000828 E1               [12] 1974 	pop	hl
      000829 7C               [ 4] 1975 	ld	a, h
      00082A F8 06            [12] 1976 	ldhl	sp,	#6
      00082C 77               [ 8] 1977 	ld	(hl), a
                           00082D  1978 	C$SpriteHorse.c$271$2_3$194	= .
                                   1979 	.globl	C$SpriteHorse.c$271$2_3$194
                                   1980 ;SpriteHorse.c:271: if(THIS->anim_frame == 1 || THIS->anim_frame == 5){
      00082D 21 09 00         [12] 1981 	ld	hl, #0x0009
      000830 09               [ 8] 1982 	add	hl, bc
      000831 E5               [16] 1983 	push	hl
      000832 7D               [ 4] 1984 	ld	a, l
      000833 F8 09            [12] 1985 	ldhl	sp,	#9
      000835 77               [ 8] 1986 	ld	(hl), a
      000836 E1               [12] 1987 	pop	hl
      000837 7C               [ 4] 1988 	ld	a, h
      000838 F8 08            [12] 1989 	ldhl	sp,	#8
      00083A 77               [ 8] 1990 	ld	(hl), a
                           00083B  1991 	C$SpriteHorse.c$265$3_3$252	= .
                                   1992 	.globl	C$SpriteHorse.c$265$3_3$252
                                   1993 ;SpriteHorse.c:265: switch(tile_over){
      00083B F8 00            [12] 1994 	ldhl	sp,	#0
      00083D 7E               [ 8] 1995 	ld	a, (hl)
      00083E D6 03            [ 8] 1996 	sub	a, #0x03
      000840 28 33            [12] 1997 	jr	Z, 00243$
      000842 F8 00            [12] 1998 	ldhl	sp,	#0
      000844 7E               [ 8] 1999 	ld	a, (hl)
      000845 D6 08            [ 8] 2000 	sub	a, #0x08
      000847 CAr25r09         [16] 2001 	jp	Z,00262$
      00084A F8 00            [12] 2002 	ldhl	sp,	#0
      00084C 7E               [ 8] 2003 	ld	a, (hl)
      00084D D6 09            [ 8] 2004 	sub	a, #0x09
      00084F CAr25r09         [16] 2005 	jp	Z,00262$
      000852 F8 00            [12] 2006 	ldhl	sp,	#0
      000854 7E               [ 8] 2007 	ld	a, (hl)
      000855 D6 0A            [ 8] 2008 	sub	a, #0x0a
      000857 CAr25r09         [16] 2009 	jp	Z,00262$
      00085A F8 00            [12] 2010 	ldhl	sp,	#0
      00085C 7E               [ 8] 2011 	ld	a, (hl)
      00085D D6 0B            [ 8] 2012 	sub	a, #0x0b
      00085F CAr25r09         [16] 2013 	jp	Z,00262$
      000862 F8 00            [12] 2014 	ldhl	sp,	#0
      000864 7E               [ 8] 2015 	ld	a, (hl)
      000865 D6 0C            [ 8] 2016 	sub	a, #0x0c
      000867 CAr25r09         [16] 2017 	jp	Z,00262$
      00086A F8 00            [12] 2018 	ldhl	sp,	#0
      00086C 7E               [ 8] 2019 	ld	a, (hl)
      00086D D6 0D            [ 8] 2020 	sub	a, #0x0d
      00086F CAr25r09         [16] 2021 	jp	Z,00262$
      000872 C3r06r0A         [16] 2022 	jp	00279$
                           000875  2023 	C$SpriteHorse.c$266$4_3$254	= .
                                   2024 	.globl	C$SpriteHorse.c$266$4_3$254
                                   2025 ;SpriteHorse.c:266: case 3: //ghiaia: incrementa il frameskip
      000875                       2026 00243$:
                           000875  2027 	C$SpriteHorse.c$268$4_3$254	= .
                                   2028 	.globl	C$SpriteHorse.c$268$4_3$254
                                   2029 ;SpriteHorse.c:268: if(onfire_countdown == -1){//non sta impazzendo
      000875 F8 01            [12] 2030 	ldhl	sp,	#1
      000877 7E               [ 8] 2031 	ld	a, (hl)
      000878 B7               [ 4] 2032 	or	a, a
      000879 28 07            [12] 2033 	jr	Z, 00245$
                           00087B  2034 	C$SpriteHorse.c$269$5_3$255	= .
                                   2035 	.globl	C$SpriteHorse.c$269$5_3$255
                                   2036 ;SpriteHorse.c:269: frm_skip+=4;
      00087B 21r04r00         [12] 2037 	ld	hl, #_frm_skip
      00087E 34               [12] 2038 	inc	(hl)
      00087F 34               [12] 2039 	inc	(hl)
      000880 34               [12] 2040 	inc	(hl)
      000881 34               [12] 2041 	inc	(hl)
      000882                       2042 00245$:
                           000882  2043 	C$SpriteHorse.c$271$2_3$194	= .
                                   2044 	.globl	C$SpriteHorse.c$271$2_3$194
                                   2045 ;SpriteHorse.c:271: if(THIS->anim_frame == 1 || THIS->anim_frame == 5){
      000882 F8 07            [12] 2046 	ldhl	sp,#7
      000884 2A               [ 8] 2047 	ld	a, (hl+)
      000885 5F               [ 4] 2048 	ld	e, a
      000886 56               [ 8] 2049 	ld	d, (hl)
      000887 1A               [ 8] 2050 	ld	a, (de)
      000888 FE 01            [ 8] 2051 	cp	a, #0x01
      00088A 28 05            [12] 2052 	jr	Z, 00253$
      00088C D6 05            [ 8] 2053 	sub	a, #0x05
      00088E C2r1Dr09         [16] 2054 	jp	NZ,00254$
      000891                       2055 00253$:
                           000891  2056 	C$SpriteHorse.c$272$5_3$256	= .
                                   2057 	.globl	C$SpriteHorse.c$272$5_3$256
                                   2058 ;SpriteHorse.c:272: if(orme_spawned == 0){
      000891 FAr18r00         [16] 2059 	ld	a, (#_orme_spawned)
      000894 B7               [ 4] 2060 	or	a, a
      000895 C2r12r0A         [16] 2061 	jp	NZ, 00285$
                           000898  2062 	C$SpriteHorse.c$273$6_3$257	= .
                                   2063 	.globl	C$SpriteHorse.c$273$6_3$257
                                   2064 ;SpriteHorse.c:273: UINT16 orma_posy = THIS->y-9;
      000898 F8 05            [12] 2065 	ldhl	sp,#5
      00089A 2A               [ 8] 2066 	ld	a, (hl+)
      00089B 5F               [ 4] 2067 	ld	e, a
      00089C 56               [ 8] 2068 	ld	d, (hl)
      00089D 1A               [ 8] 2069 	ld	a, (de)
      00089E 4F               [ 4] 2070 	ld	c, a
      00089F 13               [ 8] 2071 	inc	de
      0008A0 1A               [ 8] 2072 	ld	a, (de)
      0008A1 47               [ 4] 2073 	ld	b, a
      0008A2 79               [ 4] 2074 	ld	a, c
      0008A3 C6 F7            [ 8] 2075 	add	a, #0xf7
      0008A5 4F               [ 4] 2076 	ld	c, a
      0008A6 78               [ 4] 2077 	ld	a, b
      0008A7 CE FF            [ 8] 2078 	adc	a, #0xff
      0008A9 47               [ 4] 2079 	ld	b, a
                           0008AA  2080 	C$SpriteHorse.c$274$6_3$257	= .
                                   2081 	.globl	C$SpriteHorse.c$274$6_3$257
                                   2082 ;SpriteHorse.c:274: orme_spawned = 1;
      0008AA 21r18r00         [12] 2083 	ld	hl, #_orme_spawned
      0008AD 36 01            [12] 2084 	ld	(hl), #0x01
                           0008AF  2085 	C$SpriteHorse.c$275$6_3$257	= .
                                   2086 	.globl	C$SpriteHorse.c$275$6_3$257
                                   2087 ;SpriteHorse.c:275: if(vx > 0){
      0008AF F8 02            [12] 2088 	ldhl	sp,	#2
      0008B1 7E               [ 8] 2089 	ld	a, (hl)
      0008B2 B7               [ 4] 2090 	or	a, a
      0008B3 28 30            [12] 2091 	jr	Z, 00249$
                           0008B5  2092 	C$SpriteHorse.c$276$7_3$258	= .
                                   2093 	.globl	C$SpriteHorse.c$276$7_3$258
                                   2094 ;SpriteHorse.c:276: SpriteManagerAdd(SpriteStep, THIS->x - 2, orma_posy);
      0008B5 23               [ 8] 2095 	inc	hl
      0008B6 2A               [ 8] 2096 	ld	a, (hl+)
      0008B7 5F               [ 4] 2097 	ld	e, a
      0008B8 56               [ 8] 2098 	ld	d, (hl)
      0008B9 1A               [ 8] 2099 	ld	a, (de)
      0008BA 6F               [ 4] 2100 	ld	l, a
                                   2101 ;	spillPairReg hl
                                   2102 ;	spillPairReg hl
      0008BB 13               [ 8] 2103 	inc	de
      0008BC 1A               [ 8] 2104 	ld	a, (de)
      0008BD 5D               [ 4] 2105 	ld	e, l
      0008BE 57               [ 4] 2106 	ld	d, a
      0008BF 1B               [ 8] 2107 	dec	de
      0008C0 1B               [ 8] 2108 	dec	de
      0008C1 C5               [16] 2109 	push	bc
      0008C2 C5               [16] 2110 	push	bc
      0008C3 3E 02            [ 8] 2111 	ld	a, #0x02
      0008C5 CDr00r00         [24] 2112 	call	_SpriteManagerAdd
      0008C8 C1               [12] 2113 	pop	bc
                           0008C9  2114 	C$SpriteHorse.c$277$7_3$258	= .
                                   2115 	.globl	C$SpriteHorse.c$277$7_3$258
                                   2116 ;SpriteHorse.c:277: SpriteManagerAdd(SpriteStep, THIS->x + 8, orma_posy);
      0008C9 21r00r00         [12] 2117 	ld	hl, #_THIS
      0008CC 2A               [ 8] 2118 	ld	a, (hl+)
      0008CD 5F               [ 4] 2119 	ld	e, a
      0008CE 56               [ 8] 2120 	ld	d, (hl)
      0008CF 21 0C 00         [12] 2121 	ld	hl, #0x000c
      0008D2 19               [ 8] 2122 	add	hl, de
      0008D3 2A               [ 8] 2123 	ld	a, (hl+)
      0008D4 6E               [ 8] 2124 	ld	l, (hl)
                                   2125 ;	spillPairReg hl
      0008D5 C6 08            [ 8] 2126 	add	a, #0x08
      0008D7 5F               [ 4] 2127 	ld	e, a
      0008D8 7D               [ 4] 2128 	ld	a, l
      0008D9 CE 00            [ 8] 2129 	adc	a, #0x00
      0008DB 57               [ 4] 2130 	ld	d, a
      0008DC C5               [16] 2131 	push	bc
      0008DD 3E 02            [ 8] 2132 	ld	a, #0x02
      0008DF CDr00r00         [24] 2133 	call	_SpriteManagerAdd
      0008E2 C3r12r0A         [16] 2134 	jp	00285$
      0008E5                       2135 00249$:
                           0008E5  2136 	C$SpriteHorse.c$278$6_3$257	= .
                                   2137 	.globl	C$SpriteHorse.c$278$6_3$257
                                   2138 ;SpriteHorse.c:278: }else if(vx < 0){
      0008E5 FAr03r00         [16] 2139 	ld	a, (#_vx)
      0008E8 CB 7F            [ 8] 2140 	bit	7, a
      0008EA CAr12r0A         [16] 2141 	jp	Z, 00285$
                           0008ED  2142 	C$SpriteHorse.c$279$7_3$259	= .
                                   2143 	.globl	C$SpriteHorse.c$279$7_3$259
                                   2144 ;SpriteHorse.c:279: SpriteManagerAdd(SpriteStep, THIS->x, orma_posy);
      0008ED F8 03            [12] 2145 	ldhl	sp,#3
      0008EF 2A               [ 8] 2146 	ld	a, (hl+)
      0008F0 5F               [ 4] 2147 	ld	e, a
      0008F1 56               [ 8] 2148 	ld	d, (hl)
      0008F2 1A               [ 8] 2149 	ld	a, (de)
      0008F3 6F               [ 4] 2150 	ld	l, a
                                   2151 ;	spillPairReg hl
                                   2152 ;	spillPairReg hl
      0008F4 13               [ 8] 2153 	inc	de
      0008F5 1A               [ 8] 2154 	ld	a, (de)
      0008F6 67               [ 4] 2155 	ld	h, a
                                   2156 ;	spillPairReg hl
                                   2157 ;	spillPairReg hl
      0008F7 C5               [16] 2158 	push	bc
      0008F8 C5               [16] 2159 	push	bc
      0008F9 5D               [ 4] 2160 	ld	e, l
      0008FA 54               [ 4] 2161 	ld	d, h
      0008FB 3E 02            [ 8] 2162 	ld	a, #0x02
      0008FD CDr00r00         [24] 2163 	call	_SpriteManagerAdd
      000900 C1               [12] 2164 	pop	bc
                           000901  2165 	C$SpriteHorse.c$280$7_3$259	= .
                                   2166 	.globl	C$SpriteHorse.c$280$7_3$259
                                   2167 ;SpriteHorse.c:280: SpriteManagerAdd(SpriteStep, THIS->x + 8, orma_posy);
      000901 21r00r00         [12] 2168 	ld	hl, #_THIS
      000904 2A               [ 8] 2169 	ld	a, (hl+)
      000905 5F               [ 4] 2170 	ld	e, a
      000906 56               [ 8] 2171 	ld	d, (hl)
      000907 21 0C 00         [12] 2172 	ld	hl, #0x000c
      00090A 19               [ 8] 2173 	add	hl, de
      00090B 2A               [ 8] 2174 	ld	a, (hl+)
      00090C 6E               [ 8] 2175 	ld	l, (hl)
                                   2176 ;	spillPairReg hl
      00090D C6 08            [ 8] 2177 	add	a, #0x08
      00090F 5F               [ 4] 2178 	ld	e, a
      000910 7D               [ 4] 2179 	ld	a, l
      000911 CE 00            [ 8] 2180 	adc	a, #0x00
      000913 57               [ 4] 2181 	ld	d, a
      000914 C5               [16] 2182 	push	bc
      000915 3E 02            [ 8] 2183 	ld	a, #0x02
      000917 CDr00r00         [24] 2184 	call	_SpriteManagerAdd
      00091A C3r12r0A         [16] 2185 	jp	00285$
      00091D                       2186 00254$:
                           00091D  2187 	C$SpriteHorse.c$283$5_3$260	= .
                                   2188 	.globl	C$SpriteHorse.c$283$5_3$260
                                   2189 ;SpriteHorse.c:283: }else{orme_spawned = 0;}
      00091D 21r18r00         [12] 2190 	ld	hl, #_orme_spawned
      000920 36 00            [12] 2191 	ld	(hl), #0x00
                           000922  2192 	C$SpriteHorse.c$284$4_3$254	= .
                                   2193 	.globl	C$SpriteHorse.c$284$4_3$254
                                   2194 ;SpriteHorse.c:284: break;
      000922 C3r12r0A         [16] 2195 	jp	00285$
                           000925  2196 	C$SpriteHorse.c$286$4_3$254	= .
                                   2197 	.globl	C$SpriteHorse.c$286$4_3$254
                                   2198 ;SpriteHorse.c:286: case 11: case 12: case 13: //acqua: simula pantano limitando stamina
      000925                       2199 00262$:
                           000925  2200 	C$SpriteHorse.c$287$4_3$254	= .
                                   2201 	.globl	C$SpriteHorse.c$287$4_3$254
                                   2202 ;SpriteHorse.c:287: onwater_countdown = 80;
      000925 21r1Dr00         [12] 2203 	ld	hl, #_onwater_countdown
      000928 36 50            [12] 2204 	ld	(hl), #0x50
                           00092A  2205 	C$SpriteHorse.c$288$4_3$254	= .
                                   2206 	.globl	C$SpriteHorse.c$288$4_3$254
                                   2207 ;SpriteHorse.c:288: if(onfire_countdown > 0){//sono onfire!
      00092A 21r19r00         [12] 2208 	ld	hl, #_onfire_countdown
      00092D AF               [ 4] 2209 	xor	a, a
      00092E 96               [ 8] 2210 	sub	a, (hl)
      00092F 23               [ 8] 2211 	inc	hl
      000930 3E 00            [ 8] 2212 	ld	a, #0x00
      000932 9E               [ 8] 2213 	sbc	a, (hl)
      000933 3E 00            [ 8] 2214 	ld	a, #0x00
      000935 57               [ 4] 2215 	ld	d, a
      000936 CB 7E            [12] 2216 	bit	7, (hl)
      000938 28 07            [12] 2217 	jr	Z, 01102$
      00093A CB 7A            [ 8] 2218 	bit	7, d
      00093C 20 08            [12] 2219 	jr	NZ, 01103$
      00093E BF               [ 4] 2220 	cp	a, a
      00093F 18 05            [12] 2221 	jr	01103$
      000941                       2222 01102$:
      000941 CB 7A            [ 8] 2223 	bit	7, d
      000943 28 01            [12] 2224 	jr	Z, 01103$
      000945 37               [ 4] 2225 	scf
      000946                       2226 01103$:
      000946 30 08            [12] 2227 	jr	NC, 00268$
                           000948  2228 	C$SpriteHorse.c$289$5_3$261	= .
                                   2229 	.globl	C$SpriteHorse.c$289$5_3$261
                                   2230 ;SpriteHorse.c:289: onfire_countdown = 0;
      000948 AF               [ 4] 2231 	xor	a, a
      000949 21r19r00         [12] 2232 	ld	hl, #_onfire_countdown
      00094C 22               [ 8] 2233 	ld	(hl+), a
      00094D 77               [ 8] 2234 	ld	(hl), a
      00094E 18 30            [12] 2235 	jr	00269$
      000950                       2236 00268$:
                           000950  2237 	C$SpriteHorse.c$290$4_3$254	= .
                                   2238 	.globl	C$SpriteHorse.c$290$4_3$254
                                   2239 ;SpriteHorse.c:290: }else if(onfire_countdown == -1){
      000950 F8 01            [12] 2240 	ldhl	sp,	#1
      000952 7E               [ 8] 2241 	ld	a, (hl)
      000953 B7               [ 4] 2242 	or	a, a
      000954 28 2A            [12] 2243 	jr	Z, 00269$
                           000956  2244 	C$SpriteHorse.c$291$5_3$262	= .
                                   2245 	.globl	C$SpriteHorse.c$291$5_3$262
                                   2246 ;SpriteHorse.c:291: if(stamina_current > (euphoria_min >> 1)){
      000956 FAr08r00         [16] 2247 	ld	a, (#_euphoria_min)
      000959 F8 00            [12] 2248 	ldhl	sp,	#0
      00095B 77               [ 8] 2249 	ld	(hl), a
      00095C FAr09r00         [16] 2250 	ld	a, (#_euphoria_min + 1)
      00095F F8 01            [12] 2251 	ldhl	sp,	#1
      000961 77               [ 8] 2252 	ld	(hl), a
      000962 CB 3E            [16] 2253 	srl	(hl)
      000964 2B               [ 8] 2254 	dec	hl
      000965 CB 1E            [16] 2255 	rr	(hl)
      000967 21r0Cr00         [12] 2256 	ld	hl, #_stamina_current
      00096A 2A               [ 8] 2257 	ld	a, (hl+)
      00096B 4F               [ 4] 2258 	ld	c, a
      00096C 46               [ 8] 2259 	ld	b, (hl)
      00096D F8 00            [12] 2260 	ldhl	sp,	#0
      00096F 2A               [ 8] 2261 	ld	a, (hl+)
      000970 91               [ 4] 2262 	sub	a, c
      000971 7E               [ 8] 2263 	ld	a, (hl)
      000972 98               [ 4] 2264 	sbc	a, b
      000973 30 0B            [12] 2265 	jr	NC, 00269$
                           000975  2266 	C$SpriteHorse.c$292$6_3$263	= .
                                   2267 	.globl	C$SpriteHorse.c$292$6_3$263
                                   2268 ;SpriteHorse.c:292: stamina_current = (euphoria_min >> 1);
      000975 2B               [ 8] 2269 	dec	hl
      000976 7E               [ 8] 2270 	ld	a, (hl)
      000977 EAr0Cr00         [16] 2271 	ld	(#_stamina_current),a
      00097A F8 01            [12] 2272 	ldhl	sp,	#1
      00097C 7E               [ 8] 2273 	ld	a, (hl)
      00097D EAr0Dr00         [16] 2274 	ld	(#_stamina_current + 1),a
      000980                       2275 00269$:
                           000980  2276 	C$SpriteHorse.c$271$2_3$194	= .
                                   2277 	.globl	C$SpriteHorse.c$271$2_3$194
                                   2278 ;SpriteHorse.c:271: if(THIS->anim_frame == 1 || THIS->anim_frame == 5){
      000980 F8 07            [12] 2279 	ldhl	sp,#7
      000982 2A               [ 8] 2280 	ld	a, (hl+)
      000983 5F               [ 4] 2281 	ld	e, a
      000984 56               [ 8] 2282 	ld	d, (hl)
      000985 1A               [ 8] 2283 	ld	a, (de)
                           000986  2284 	C$SpriteHorse.c$295$4_3$254	= .
                                   2285 	.globl	C$SpriteHorse.c$295$4_3$254
                                   2286 ;SpriteHorse.c:295: if(THIS->anim_frame == 0 || THIS->anim_frame == 2 || THIS->anim_frame == 4){
      000986 B7               [ 4] 2287 	or	a, a
      000987 28 08            [12] 2288 	jr	Z, 00274$
      000989 FE 02            [ 8] 2289 	cp	a, #0x02
      00098B 28 04            [12] 2290 	jr	Z, 00274$
      00098D D6 04            [ 8] 2291 	sub	a, #0x04
      00098F 20 6E            [12] 2292 	jr	NZ, 00275$
      000991                       2293 00274$:
                           000991  2294 	C$SpriteHorse.c$296$5_3$264	= .
                                   2295 	.globl	C$SpriteHorse.c$296$5_3$264
                                   2296 ;SpriteHorse.c:296: if(orme_spawned == 0){
      000991 21r18r00         [12] 2297 	ld	hl, #_orme_spawned
      000994 7E               [ 8] 2298 	ld	a, (hl)
      000995 B7               [ 4] 2299 	or	a, a
      000996 20 7A            [12] 2300 	jr	NZ, 00285$
                           000998  2301 	C$SpriteHorse.c$297$6_3$265	= .
                                   2302 	.globl	C$SpriteHorse.c$297$6_3$265
                                   2303 ;SpriteHorse.c:297: orme_spawned = 1;
      000998 36 01            [12] 2304 	ld	(hl), #0x01
                           00099A  2305 	C$SpriteHorse.c$80$2_3$194	= .
                                   2306 	.globl	C$SpriteHorse.c$80$2_3$194
                                   2307 ;SpriteHorse.c:80: THIS->x += vx;
      00099A F8 03            [12] 2308 	ldhl	sp,#3
      00099C 2A               [ 8] 2309 	ld	a, (hl+)
      00099D 5F               [ 4] 2310 	ld	e, a
      00099E 56               [ 8] 2311 	ld	d, (hl)
      00099F 1A               [ 8] 2312 	ld	a, (de)
      0009A0 4F               [ 4] 2313 	ld	c, a
      0009A1 13               [ 8] 2314 	inc	de
      0009A2 1A               [ 8] 2315 	ld	a, (de)
      0009A3 47               [ 4] 2316 	ld	b, a
                           0009A4  2317 	C$SpriteHorse.c$298$6_4$266	= .
                                   2318 	.globl	C$SpriteHorse.c$298$6_4$266
                                   2319 ;SpriteHorse.c:298: UINT16 orma0_posx = THIS->x - 2;
      0009A4 11 02 00         [12] 2320 	ld	de, #0x0002
      0009A7 79               [ 4] 2321 	ld	a, c
      0009A8 93               [ 4] 2322 	sub	a, e
      0009A9 5F               [ 4] 2323 	ld	e, a
      0009AA 78               [ 4] 2324 	ld	a, b
      0009AB 9A               [ 4] 2325 	sbc	a, d
      0009AC F8 08            [12] 2326 	ldhl	sp,	#8
      0009AE 32               [ 8] 2327 	ld	(hl-), a
                           0009AF  2328 	C$SpriteHorse.c$299$6_4$266	= .
                                   2329 	.globl	C$SpriteHorse.c$299$6_4$266
                                   2330 ;SpriteHorse.c:299: UINT16 orma_posy = THIS->y-9;
      0009AF 7B               [ 4] 2331 	ld	a, e
      0009B0 32               [ 8] 2332 	ld	(hl-), a
      0009B1 2B               [ 8] 2333 	dec	hl
      0009B2 2A               [ 8] 2334 	ld	a, (hl+)
      0009B3 5F               [ 4] 2335 	ld	e, a
      0009B4 56               [ 8] 2336 	ld	d, (hl)
      0009B5 1A               [ 8] 2337 	ld	a, (de)
      0009B6 6F               [ 4] 2338 	ld	l, a
                                   2339 ;	spillPairReg hl
                                   2340 ;	spillPairReg hl
      0009B7 13               [ 8] 2341 	inc	de
      0009B8 1A               [ 8] 2342 	ld	a, (de)
      0009B9 67               [ 4] 2343 	ld	h, a
                                   2344 ;	spillPairReg hl
                                   2345 ;	spillPairReg hl
      0009BA 11 F7 FF         [12] 2346 	ld	de, #0xfff7
      0009BD 19               [ 8] 2347 	add	hl, de
      0009BE 5D               [ 4] 2348 	ld	e, l
      0009BF 54               [ 4] 2349 	ld	d, h
                           0009C0  2350 	C$SpriteHorse.c$300$6_4$266	= .
                                   2351 	.globl	C$SpriteHorse.c$300$6_4$266
                                   2352 ;SpriteHorse.c:300: UINT16 orma1_posx = THIS->x + 8;
      0009C0 21 08 00         [12] 2353 	ld	hl, #0x0008
      0009C3 09               [ 8] 2354 	add	hl, bc
      0009C4 E5               [16] 2355 	push	hl
      0009C5 7D               [ 4] 2356 	ld	a, l
      0009C6 F8 07            [12] 2357 	ldhl	sp,	#7
      0009C8 77               [ 8] 2358 	ld	(hl), a
      0009C9 E1               [12] 2359 	pop	hl
      0009CA 7C               [ 4] 2360 	ld	a, h
      0009CB F8 06            [12] 2361 	ldhl	sp,	#6
      0009CD 77               [ 8] 2362 	ld	(hl), a
                           0009CE  2363 	C$SpriteHorse.c$301$6_4$266	= .
                                   2364 	.globl	C$SpriteHorse.c$301$6_4$266
                                   2365 ;SpriteHorse.c:301: if(vx <= 0){
      0009CE F8 02            [12] 2366 	ldhl	sp,	#2
                                   2367 ;	spillPairReg hl
                                   2368 ;	spillPairReg hl
      0009D0 CB 46            [12] 2369 	bit	0, (hl)
      0009D2 20 05            [12] 2370 	jr	NZ, 00271$
                           0009D4  2371 	C$SpriteHorse.c$302$7_4$267	= .
                                   2372 	.globl	C$SpriteHorse.c$302$7_4$267
                                   2373 ;SpriteHorse.c:302: orma0_posx = THIS->x;
      0009D4 F8 07            [12] 2374 	ldhl	sp,	#7
      0009D6 79               [ 4] 2375 	ld	a, c
      0009D7 22               [ 8] 2376 	ld	(hl+), a
      0009D8 70               [ 8] 2377 	ld	(hl), b
      0009D9                       2378 00271$:
                           0009D9  2379 	C$SpriteHorse.c$304$6_5$268	= .
                                   2380 	.globl	C$SpriteHorse.c$304$6_5$268
                                   2381 ;SpriteHorse.c:304: Sprite* s_orma0 = SpriteManagerAdd(SpriteStep, orma0_posx, orma_posy);
      0009D9 D5               [16] 2382 	push	de
      0009DA D5               [16] 2383 	push	de
      0009DB F8 0B            [12] 2384 	ldhl	sp,	#11
      0009DD 2A               [ 8] 2385 	ld	a, (hl+)
      0009DE 5F               [ 4] 2386 	ld	e, a
      0009DF 56               [ 8] 2387 	ld	d, (hl)
      0009E0 3E 02            [ 8] 2388 	ld	a, #0x02
      0009E2 CDr00r00         [24] 2389 	call	_SpriteManagerAdd
      0009E5 D1               [12] 2390 	pop	de
                           0009E6  2391 	C$SpriteHorse.c$305$6_5$268	= .
                                   2392 	.globl	C$SpriteHorse.c$305$6_5$268
                                   2393 ;SpriteHorse.c:305: struct ItemData* orma0_data = (struct ItemData*)s_orma0->custom_data;
                           0009E6  2394 	C$SpriteHorse.c$306$6_5$268	= .
                                   2395 	.globl	C$SpriteHorse.c$306$6_5$268
                                   2396 ;SpriteHorse.c:306: orma0_data->configured = 1;
      0009E6 21 1E 00         [12] 2397 	ld	hl,#0x1e
      0009E9 09               [ 8] 2398 	add	hl,bc
      0009EA 36 01            [12] 2399 	ld	(hl), #0x01
                           0009EC  2400 	C$SpriteHorse.c$307$6_6$269	= .
                                   2401 	.globl	C$SpriteHorse.c$307$6_6$269
                                   2402 ;SpriteHorse.c:307: Sprite* s_orma1 = SpriteManagerAdd(SpriteStep, orma1_posx, orma_posy);
      0009EC D5               [16] 2403 	push	de
      0009ED F8 07            [12] 2404 	ldhl	sp,	#7
      0009EF 2A               [ 8] 2405 	ld	a, (hl+)
      0009F0 5F               [ 4] 2406 	ld	e, a
      0009F1 56               [ 8] 2407 	ld	d, (hl)
      0009F2 3E 02            [ 8] 2408 	ld	a, #0x02
      0009F4 CDr00r00         [24] 2409 	call	_SpriteManagerAdd
                           0009F7  2410 	C$SpriteHorse.c$308$6_6$269	= .
                                   2411 	.globl	C$SpriteHorse.c$308$6_6$269
                                   2412 ;SpriteHorse.c:308: struct ItemData* orma1_data = (struct ItemData*) s_orma1->custom_data;
                           0009F7  2413 	C$SpriteHorse.c$309$6_6$269	= .
                                   2414 	.globl	C$SpriteHorse.c$309$6_6$269
                                   2415 ;SpriteHorse.c:309: orma1_data->configured = 1;
      0009F7 21 1E 00         [12] 2416 	ld	hl,#0x1e
      0009FA 09               [ 8] 2417 	add	hl,bc
      0009FB 36 01            [12] 2418 	ld	(hl), #0x01
      0009FD 18 13            [12] 2419 	jr	00285$
      0009FF                       2420 00275$:
                           0009FF  2421 	C$SpriteHorse.c$311$5_3$270	= .
                                   2422 	.globl	C$SpriteHorse.c$311$5_3$270
                                   2423 ;SpriteHorse.c:311: }else{orme_spawned = 0;}
      0009FF 21r18r00         [12] 2424 	ld	hl, #_orme_spawned
      000A02 36 00            [12] 2425 	ld	(hl), #0x00
                           000A04  2426 	C$SpriteHorse.c$312$4_3$254	= .
                                   2427 	.globl	C$SpriteHorse.c$312$4_3$254
                                   2428 ;SpriteHorse.c:312: break;
      000A04 18 0C            [12] 2429 	jr	00285$
                           000A06  2430 	C$SpriteHorse.c$313$4_3$254	= .
                                   2431 	.globl	C$SpriteHorse.c$313$4_3$254
                                   2432 ;SpriteHorse.c:313: default:
      000A06                       2433 00279$:
                           000A06  2434 	C$SpriteHorse.c$314$4_3$254	= .
                                   2435 	.globl	C$SpriteHorse.c$314$4_3$254
                                   2436 ;SpriteHorse.c:314: if(onfire_countdown == 0){//se ho spento il fuoco con l'acqua rimettimi il countdown negativo
      000A06 21r1Ar00         [12] 2437 	ld	hl, #_onfire_countdown + 1
      000A09 3A               [ 8] 2438 	ld	a, (hl-)
      000A0A B6               [ 8] 2439 	or	a, (hl)
      000A0B 20 05            [12] 2440 	jr	NZ, 00285$
                           000A0D  2441 	C$SpriteHorse.c$315$5_3$271	= .
                                   2442 	.globl	C$SpriteHorse.c$315$5_3$271
                                   2443 ;SpriteHorse.c:315: onfire_countdown = -1;
      000A0D 3E FF            [ 8] 2444 	ld	a, #0xff
      000A0F 22               [ 8] 2445 	ld	(hl+), a
      000A10 36 FF            [12] 2446 	ld	(hl), #0xff
                           000A12  2447 	C$SpriteHorse.c$318$2_3$245	= .
                                   2448 	.globl	C$SpriteHorse.c$318$2_3$245
                                   2449 ;SpriteHorse.c:318: }
      000A12                       2450 00285$:
                           000A12  2451 	C$SpriteHorse.c$321$2_3$245	= .
                                   2452 	.globl	C$SpriteHorse.c$321$2_3$245
                                   2453 ;SpriteHorse.c:321: if(stamina_current < 60){
      000A12 21r0Cr00         [12] 2454 	ld	hl, #_stamina_current
      000A15 2A               [ 8] 2455 	ld	a, (hl+)
      000A16 D6 3C            [ 8] 2456 	sub	a, #0x3c
      000A18 7E               [ 8] 2457 	ld	a, (hl)
      000A19 DE 00            [ 8] 2458 	sbc	a, #0x00
      000A1B 56               [ 8] 2459 	ld	d, (hl)
      000A1C 3E 00            [ 8] 2460 	ld	a, #0x00
      000A1E CB 7F            [ 8] 2461 	bit	7,a
      000A20 28 07            [12] 2462 	jr	Z, 01107$
      000A22 CB 7A            [ 8] 2463 	bit	7, d
      000A24 20 08            [12] 2464 	jr	NZ, 01108$
      000A26 BF               [ 4] 2465 	cp	a, a
      000A27 18 05            [12] 2466 	jr	01108$
      000A29                       2467 01107$:
      000A29 CB 7A            [ 8] 2468 	bit	7, d
      000A2B 28 01            [12] 2469 	jr	Z, 01108$
      000A2D 37               [ 4] 2470 	scf
      000A2E                       2471 01108$:
      000A2E 30 12            [12] 2472 	jr	NC, 00287$
                           000A30  2473 	C$SpriteHorse.c$322$3_3$272	= .
                                   2474 	.globl	C$SpriteHorse.c$322$3_3$272
                                   2475 ;SpriteHorse.c:322: SetSpriteAnim(THIS, a_horse_h_idle,4u);
      000A30 3E 04            [ 8] 2476 	ld	a, #0x04
      000A32 F5               [16] 2477 	push	af
      000A33 33               [ 8] 2478 	inc	sp
      000A34 01r60r00         [12] 2479 	ld	bc, #_a_horse_h_idle
      000A37 21r00r00         [12] 2480 	ld	hl, #_THIS
      000A3A 2A               [ 8] 2481 	ld	a, (hl+)
      000A3B 5F               [ 4] 2482 	ld	e, a
      000A3C 56               [ 8] 2483 	ld	d, (hl)
      000A3D CDr00r00         [24] 2484 	call	_SetSpriteAnim
      000A40 18 10            [12] 2485 	jr	00288$
      000A42                       2486 00287$:
                           000A42  2487 	C$SpriteHorse.c$324$3_3$273	= .
                                   2488 	.globl	C$SpriteHorse.c$324$3_3$273
                                   2489 ;SpriteHorse.c:324: SetSpriteAnim(THIS, a_horse_h,4u);
      000A42 3E 04            [ 8] 2490 	ld	a, #0x04
      000A44 F5               [16] 2491 	push	af
      000A45 33               [ 8] 2492 	inc	sp
      000A46 01r47r00         [12] 2493 	ld	bc, #_a_horse_h
      000A49 21r00r00         [12] 2494 	ld	hl, #_THIS
      000A4C 2A               [ 8] 2495 	ld	a, (hl+)
      000A4D 5F               [ 4] 2496 	ld	e, a
      000A4E 56               [ 8] 2497 	ld	d, (hl)
      000A4F CDr00r00         [24] 2498 	call	_SetSpriteAnim
      000A52                       2499 00288$:
                           000A52  2500 	C$SpriteHorse.c$326$2_3$245	= .
                                   2501 	.globl	C$SpriteHorse.c$326$2_3$245
                                   2502 ;SpriteHorse.c:326: THIS->anim_speed = stamina_current >> 5;
      000A52 21r00r00         [12] 2503 	ld	hl, #_THIS
      000A55 2A               [ 8] 2504 	ld	a, (hl+)
      000A56 46               [ 8] 2505 	ld	b, (hl)
      000A57 C6 08            [ 8] 2506 	add	a, #0x08
      000A59 4F               [ 4] 2507 	ld	c, a
      000A5A 30 01            [12] 2508 	jr	NC, 01109$
      000A5C 04               [ 4] 2509 	inc	b
      000A5D                       2510 01109$:
      000A5D 21r0Cr00         [12] 2511 	ld	hl, #_stamina_current
      000A60 2A               [ 8] 2512 	ld	a, (hl+)
      000A61 5F               [ 4] 2513 	ld	e, a
      000A62 56               [ 8] 2514 	ld	d, (hl)
      000A63 CB 2A            [ 8] 2515 	sra	d
      000A65 CB 1B            [ 8] 2516 	rr	e
      000A67 CB 2A            [ 8] 2517 	sra	d
      000A69 CB 1B            [ 8] 2518 	rr	e
      000A6B CB 2A            [ 8] 2519 	sra	d
      000A6D CB 1B            [ 8] 2520 	rr	e
      000A6F CB 2A            [ 8] 2521 	sra	d
      000A71 CB 1B            [ 8] 2522 	rr	e
      000A73 CB 2A            [ 8] 2523 	sra	d
      000A75 CB 1B            [ 8] 2524 	rr	e
      000A77 7B               [ 4] 2525 	ld	a, e
      000A78 02               [ 8] 2526 	ld	(bc), a
      000A79                       2527 00290$:
                           000A79  2528 	C$SpriteHorse.c$80$2_3$194	= .
                                   2529 	.globl	C$SpriteHorse.c$80$2_3$194
                                   2530 ;SpriteHorse.c:80: THIS->x += vx;
      000A79 21r00r00         [12] 2531 	ld	hl, #_THIS
      000A7C 2A               [ 8] 2532 	ld	a, (hl+)
      000A7D 46               [ 8] 2533 	ld	b, (hl)
                           000A7E  2534 	C$SpriteHorse.c$331$2_3$194	= .
                                   2535 	.globl	C$SpriteHorse.c$331$2_3$194
                                   2536 ;SpriteHorse.c:331: THIS->mirror = NO_MIRROR;
      000A7E C6 10            [ 8] 2537 	add	a, #0x10
      000A80 4F               [ 4] 2538 	ld	c, a
      000A81 30 01            [12] 2539 	jr	NC, 01110$
      000A83 04               [ 4] 2540 	inc	b
      000A84                       2541 01110$:
                           000A84  2542 	C$SpriteHorse.c$330$1_2$227	= .
                                   2543 	.globl	C$SpriteHorse.c$330$1_2$227
                                   2544 ;SpriteHorse.c:330: if(vx > 0){
      000A84 21r03r00         [12] 2545 	ld	hl, #_vx
      000A87 5E               [ 8] 2546 	ld	e, (hl)
      000A88 AF               [ 4] 2547 	xor	a, a
      000A89 57               [ 4] 2548 	ld	d, a
      000A8A 96               [ 8] 2549 	sub	a, (hl)
      000A8B CB 7B            [ 8] 2550 	bit	7, e
      000A8D 28 07            [12] 2551 	jr	Z, 01111$
      000A8F CB 7A            [ 8] 2552 	bit	7, d
      000A91 20 08            [12] 2553 	jr	NZ, 01112$
      000A93 BF               [ 4] 2554 	cp	a, a
      000A94 18 05            [12] 2555 	jr	01112$
      000A96                       2556 01111$:
      000A96 CB 7A            [ 8] 2557 	bit	7, d
      000A98 28 01            [12] 2558 	jr	Z, 01112$
      000A9A 37               [ 4] 2559 	scf
      000A9B                       2560 01112$:
      000A9B 30 04            [12] 2561 	jr	NC, 00294$
                           000A9D  2562 	C$SpriteHorse.c$331$2_2$274	= .
                                   2563 	.globl	C$SpriteHorse.c$331$2_2$274
                                   2564 ;SpriteHorse.c:331: THIS->mirror = NO_MIRROR;
      000A9D AF               [ 4] 2565 	xor	a, a
      000A9E 02               [ 8] 2566 	ld	(bc), a
      000A9F 18 0A            [12] 2567 	jr	00295$
      000AA1                       2568 00294$:
                           000AA1  2569 	C$SpriteHorse.c$332$1_2$227	= .
                                   2570 	.globl	C$SpriteHorse.c$332$1_2$227
                                   2571 ;SpriteHorse.c:332: }else if (vx < 0){
      000AA1 FAr03r00         [16] 2572 	ld	a, (#_vx)
      000AA4 CB 7F            [ 8] 2573 	bit	7, a
      000AA6 28 03            [12] 2574 	jr	Z, 00295$
                           000AA8  2575 	C$SpriteHorse.c$333$2_2$275	= .
                                   2576 	.globl	C$SpriteHorse.c$333$2_2$275
                                   2577 ;SpriteHorse.c:333: THIS->mirror = V_MIRROR;
      000AA8 3E 02            [ 8] 2578 	ld	a, #0x02
      000AAA 02               [ 8] 2579 	ld	(bc), a
      000AAB                       2580 00295$:
                           000AAB  2581 	C$SpriteHorse.c$339$2_3$277	= .
                                   2582 	.globl	C$SpriteHorse.c$339$2_3$277
                                   2583 ;SpriteHorse.c:339: SPRITEMANAGER_ITERATE(scroll_o_tile, iospr) {
      000AAB FAr01r00         [16] 2584 	ld	a, (#(_sprite_manager_updatables + 1) + 0)
      000AAE 6F               [ 4] 2585 	ld	l, a
                                   2586 ;	spillPairReg hl
                                   2587 ;	spillPairReg hl
      000AAF 26 00            [ 8] 2588 	ld	h, #0x00
                                   2589 ;	spillPairReg hl
                                   2590 ;	spillPairReg hl
      000AB1 29               [ 8] 2591 	add	hl, hl
      000AB2 11r00r00         [12] 2592 	ld	de, #_sprite_manager_sprites
      000AB5 19               [ 8] 2593 	add	hl, de
      000AB6 2A               [ 8] 2594 	ld	a, (hl+)
      000AB7 4F               [ 4] 2595 	ld	c, a
      000AB8 46               [ 8] 2596 	ld	b, (hl)
      000AB9 F8 08            [12] 2597 	ldhl	sp,	#8
      000ABB 36 00            [12] 2598 	ld	(hl), #0x00
      000ABD                       2599 00307$:
      000ABD FAr00r00         [16] 2600 	ld	a, (#_sprite_manager_updatables + 0)
      000AC0 F8 07            [12] 2601 	ldhl	sp,	#7
      000AC2 77               [ 8] 2602 	ld	(hl), a
      000AC3 F8 08            [12] 2603 	ldhl	sp,	#8
      000AC5 3A               [ 8] 2604 	ld	a, (hl-)
      000AC6 96               [ 8] 2605 	sub	a, (hl)
      000AC7 CAr4Cr0B         [16] 2606 	jp	Z,00309$
                           000ACA  2607 	C$SpriteHorse.c$340$3_3$278	= .
                                   2608 	.globl	C$SpriteHorse.c$340$3_3$278
                                   2609 ;SpriteHorse.c:340: if(CheckCollision(THIS, iospr)) {
      000ACA C5               [16] 2610 	push	bc
      000ACB 21r00r00         [12] 2611 	ld	hl, #_THIS
      000ACE 5E               [ 8] 2612 	ld	e, (hl)
      000ACF 23               [ 8] 2613 	inc	hl
      000AD0 56               [ 8] 2614 	ld	d, (hl)
      000AD1 CDr00r00         [24] 2615 	call	_CheckCollision
      000AD4 C1               [12] 2616 	pop	bc
      000AD5 B7               [ 4] 2617 	or	a, a
      000AD6 28 5B            [12] 2618 	jr	Z, 00308$
                           000AD8  2619 	C$SpriteHorse.c$341$4_3$279	= .
                                   2620 	.globl	C$SpriteHorse.c$341$4_3$279
                                   2621 ;SpriteHorse.c:341: switch(iospr->type){
      000AD8 21 13 00         [12] 2622 	ld	hl, #0x0013
      000ADB 09               [ 8] 2623 	add	hl, bc
      000ADC 7E               [ 8] 2624 	ld	a, (hl)
      000ADD D6 05            [ 8] 2625 	sub	a, #0x05
      000ADF 20 52            [12] 2626 	jr	NZ, 00308$
                           000AE1  2627 	C$SpriteHorse.c$343$5_3$280	= .
                                   2628 	.globl	C$SpriteHorse.c$343$5_3$280
                                   2629 ;SpriteHorse.c:343: if(onfire_countdown == -1){//if not already, go onfire!
      000AE1 21r19r00         [12] 2630 	ld	hl, #_onfire_countdown
      000AE4 7E               [ 8] 2631 	ld	a, (hl)
      000AE5 3C               [ 4] 2632 	inc	a
      000AE6 20 4B            [12] 2633 	jr	NZ, 00308$
      000AE8 23               [ 8] 2634 	inc	hl
      000AE9 7E               [ 8] 2635 	ld	a, (hl)
      000AEA 3C               [ 4] 2636 	inc	a
      000AEB 20 46            [12] 2637 	jr	NZ, 00308$
                           000AED  2638 	C$SpriteHorse.c$344$6_3$281	= .
                                   2639 	.globl	C$SpriteHorse.c$344$6_3$281
                                   2640 ;SpriteHorse.c:344: if(weapon_def == CAPE){
      000AED FAr00r00         [16] 2641 	ld	a, (#_weapon_def)
      000AF0 D6 08            [ 8] 2642 	sub	a, #0x08
      000AF2 20 14            [12] 2643 	jr	NZ, 00298$
                           000AF4  2644 	C$SpriteHorse.c$345$7_3$282	= .
                                   2645 	.globl	C$SpriteHorse.c$345$7_3$282
                                   2646 ;SpriteHorse.c:345: use_weapon(1);
      000AF4 C5               [16] 2647 	push	bc
      000AF5 3E 01            [ 8] 2648 	ld	a, #0x01
      000AF7 F5               [16] 2649 	push	af
      000AF8 33               [ 8] 2650 	inc	sp
      000AF9 1Er00            [ 8] 2651 	ld	e, #b_use_weapon
      000AFB 21r00r00         [12] 2652 	ld	hl, #_use_weapon
      000AFE CDr00r00         [24] 2653 	call	___sdcc_bcall_ehl
      000B01 33               [ 8] 2654 	inc	sp
                           000B02  2655 	C$SpriteHorse.c$346$7_3$282	= .
                                   2656 	.globl	C$SpriteHorse.c$346$7_3$282
                                   2657 ;SpriteHorse.c:346: SpriteManagerRemoveSprite(iospr);
      000B02 D1               [12] 2658 	pop	de
      000B03 CDr00r00         [24] 2659 	call	_SpriteManagerRemoveSprite
      000B06 18 2B            [12] 2660 	jr	00308$
      000B08                       2661 00298$:
                           000B08  2662 	C$SpriteHorse.c$348$7_3$283	= .
                                   2663 	.globl	C$SpriteHorse.c$348$7_3$283
                                   2664 ;SpriteHorse.c:348: onfire_countdown = ONFIRE_COUNTDOWN_MAX;
      000B08 21r19r00         [12] 2665 	ld	hl, #_onfire_countdown
      000B0B 3E 90            [ 8] 2666 	ld	a, #0x90
      000B0D 22               [ 8] 2667 	ld	(hl+), a
      000B0E 36 01            [12] 2668 	ld	(hl), #0x01
                           000B10  2669 	C$SpriteHorse.c$349$7_3$283	= .
                                   2670 	.globl	C$SpriteHorse.c$349$7_3$283
                                   2671 ;SpriteHorse.c:349: stamina_current = euphoria_min >> 2;
      000B10 FAr08r00         [16] 2672 	ld	a, (#_euphoria_min)
      000B13 EAr0Cr00         [16] 2673 	ld	(#_stamina_current),a
      000B16 FAr09r00         [16] 2674 	ld	a, (#_euphoria_min + 1)
      000B19 21r0Dr00         [12] 2675 	ld	hl, #_stamina_current + 1
      000B1C 77               [ 8] 2676 	ld	(hl), a
      000B1D CB 3E            [16] 2677 	srl	(hl)
      000B1F 2B               [ 8] 2678 	dec	hl
      000B20 CB 1E            [16] 2679 	rr	(hl)
      000B22 23               [ 8] 2680 	inc	hl
      000B23 CB 3E            [16] 2681 	srl	(hl)
      000B25 2B               [ 8] 2682 	dec	hl
      000B26 CB 1E            [16] 2683 	rr	(hl)
                           000B28  2684 	C$SpriteHorse.c$350$7_3$283	= .
                                   2685 	.globl	C$SpriteHorse.c$350$7_3$283
                                   2686 ;SpriteHorse.c:350: whip_power_over_stamina = 1;
      000B28 21r05r00         [12] 2687 	ld	hl, #_whip_power_over_stamina
      000B2B 36 01            [12] 2688 	ld	(hl), #0x01
                           000B2D  2689 	C$SpriteHorse.c$351$7_3$283	= .
                                   2690 	.globl	C$SpriteHorse.c$351$7_3$283
                                   2691 ;SpriteHorse.c:351: s_flame = iospr;
      000B2D 21r1Br00         [12] 2692 	ld	hl, #_s_flame
      000B30 79               [ 4] 2693 	ld	a, c
      000B31 22               [ 8] 2694 	ld	(hl+), a
      000B32 70               [ 8] 2695 	ld	(hl), b
                           000B33  2696 	C$SpriteHorse.c$355$3_3$278	= .
                                   2697 	.globl	C$SpriteHorse.c$355$3_3$278
                                   2698 ;SpriteHorse.c:355: }
      000B33                       2699 00308$:
                           000B33  2700 	C$SpriteHorse.c$339$2_3$277	= .
                                   2701 	.globl	C$SpriteHorse.c$339$2_3$277
                                   2702 ;SpriteHorse.c:339: SPRITEMANAGER_ITERATE(scroll_o_tile, iospr) {
      000B33 F8 08            [12] 2703 	ldhl	sp,	#8
      000B35 34               [12] 2704 	inc	(hl)
      000B36 4E               [ 8] 2705 	ld	c, (hl)
      000B37 06 00            [ 8] 2706 	ld	b, #0x00
      000B39 03               [ 8] 2707 	inc	bc
      000B3A 21r00r00         [12] 2708 	ld	hl, #_sprite_manager_updatables
      000B3D 09               [ 8] 2709 	add	hl, bc
      000B3E 6E               [ 8] 2710 	ld	l, (hl)
                                   2711 ;	spillPairReg hl
      000B3F 26 00            [ 8] 2712 	ld	h, #0x00
                                   2713 ;	spillPairReg hl
                                   2714 ;	spillPairReg hl
      000B41 29               [ 8] 2715 	add	hl, hl
      000B42 11r00r00         [12] 2716 	ld	de, #_sprite_manager_sprites
      000B45 19               [ 8] 2717 	add	hl, de
      000B46 2A               [ 8] 2718 	ld	a, (hl+)
      000B47 4F               [ 4] 2719 	ld	c, a
      000B48 46               [ 8] 2720 	ld	b, (hl)
      000B49 C3rBDr0A         [16] 2721 	jp	00307$
      000B4C                       2722 00309$:
                           000B4C  2723 	C$SpriteHorse.c$358$2_3$194	= .
                                   2724 	.globl	C$SpriteHorse.c$358$2_3$194
                                   2725 ;SpriteHorse.c:358: }
      000B4C E8 09            [16] 2726 	add	sp, #9
                           000B4E  2727 	C$SpriteHorse.c$358$2_3$194	= .
                                   2728 	.globl	C$SpriteHorse.c$358$2_3$194
                           000B4E  2729 	XG$Update_SpriteHorse$0$0	= .
                                   2730 	.globl	XG$Update_SpriteHorse$0$0
      000B4E C9               [16] 2731 	ret
                           000B4F  2732 	G$Destroy_SpriteHorse$0$0	= .
                                   2733 	.globl	G$Destroy_SpriteHorse$0$0
                           000B4F  2734 	C$SpriteHorse.c$360$2_3$285	= .
                                   2735 	.globl	C$SpriteHorse.c$360$2_3$285
                                   2736 ;SpriteHorse.c:360: void DESTROY() {
                                   2737 ;	---------------------------------
                                   2738 ; Function Destroy_SpriteHorse
                                   2739 ; ---------------------------------
      000B4F                       2740 _Destroy_SpriteHorse::
                           000B4F  2741 	C$SpriteHorse.c$361$2_3$285	= .
                                   2742 	.globl	C$SpriteHorse.c$361$2_3$285
                                   2743 ;SpriteHorse.c:361: }
                           000B4F  2744 	C$SpriteHorse.c$361$2_3$285	= .
                                   2745 	.globl	C$SpriteHorse.c$361$2_3$285
                           000B4F  2746 	XG$Destroy_SpriteHorse$0$0	= .
                                   2747 	.globl	XG$Destroy_SpriteHorse$0$0
      000B4F C9               [16] 2748 	ret
                                   2749 	.area _CODE_255
                                   2750 	.area _INITIALIZER
                           000000  2751 FSpriteHorse$__xinit_velocity_counter$0_0$0 == .
      000000                       2752 __xinit__velocity_counter:
      000000 02                    2753 	.db #0x02	;  2
                           000001  2754 FSpriteHorse$__xinit_velocity$0_0$0 == .
      000001                       2755 __xinit__velocity:
      000001 01                    2756 	.db #0x01	;  1
                           000002  2757 FSpriteHorse$__xinit_vy$0_0$0 == .
      000002                       2758 __xinit__vy:
      000002 00                    2759 	.db #0x00	;  0
                           000003  2760 FSpriteHorse$__xinit_vx$0_0$0 == .
      000003                       2761 __xinit__vx:
      000003 00                    2762 	.db #0x00	;  0
                           000004  2763 FSpriteHorse$__xinit_frm_skip$0_0$0 == .
      000004                       2764 __xinit__frm_skip:
      000004 00                    2765 	.db #0x00	;  0
                           000005  2766 FSpriteHorse$__xinit_whip_power_over_stamina$0_0$0 == .
      000005                       2767 __xinit__whip_power_over_stamina:
      000005 03                    2768 	.db #0x03	;  3
                           000006  2769 FSpriteHorse$__xinit_whip_counter$0_0$0 == .
      000006                       2770 __xinit__whip_counter:
      000006 00                    2771 	.db #0x00	;  0
                           000007  2772 FSpriteHorse$__xinit_whip_counter_max$0_0$0 == .
      000007                       2773 __xinit__whip_counter_max:
      000007 24                    2774 	.db #0x24	;  36
                           000008  2775 FSpriteHorse$__xinit_euphoria_min$0_0$0 == .
      000008                       2776 __xinit__euphoria_min:
      000008 90 01                 2777 	.dw #0x0190
                           00000A  2778 FSpriteHorse$__xinit_euphoria_max$0_0$0 == .
      00000A                       2779 __xinit__euphoria_max:
      00000A 94 02                 2780 	.dw #0x0294
                           00000C  2781 FSpriteHorse$__xinit_stamina_current$0_0$0 == .
      00000C                       2782 __xinit__stamina_current:
      00000C 00 00                 2783 	.dw #0x0000
                           00000E  2784 FSpriteHorse$__xinit_stamina_verso$0_0$0 == .
      00000E                       2785 __xinit__stamina_verso:
      00000E 00                    2786 	.db #0x00	;  0
                           00000F  2787 FSpriteHorse$__xinit_no_whip_counter$0_0$0 == .
      00000F                       2788 __xinit__no_whip_counter:
      00000F 00                    2789 	.db #0x00	;  0
                           000010  2790 FSpriteHorse$__xinit_no_whip_over_stamina$0_0$0 == .
      000010                       2791 __xinit__no_whip_over_stamina:
      000010 F8                    2792 	.db #0xf8	; -8
                           000011  2793 FSpriteHorse$__xinit_no_whip_counter_max$0_0$0 == .
      000011                       2794 __xinit__no_whip_counter_max:
      000011 0A                    2795 	.db #0x0a	;  10
                           000012  2796 FSpriteHorse$__xinit_turn$0_0$0 == .
      000012                       2797 __xinit__turn:
      000012 00                    2798 	.db #0x00	; 0
                           000013  2799 FSpriteHorse$__xinit_sin$0_0$0 == .
      000013                       2800 __xinit__sin:
      000013 00                    2801 	.db #0x00	;  0
                           000014  2802 FSpriteHorse$__xinit_cos$0_0$0 == .
      000014                       2803 __xinit__cos:
      000014 00                    2804 	.db #0x00	;  0
                           000015  2805 FSpriteHorse$__xinit_turn_samepressure_counter$0_0$0 == .
      000015                       2806 __xinit__turn_samepressure_counter:
      000015 00                    2807 	.db #0x00	;  0
                           000016  2808 FSpriteHorse$__xinit_past_coll_tile$0_0$0 == .
      000016                       2809 __xinit__past_coll_tile:
      000016 00                    2810 	.db #0x00	; 0
                           000017  2811 FSpriteHorse$__xinit_turn_verse$0_0$0 == .
      000017                       2812 __xinit__turn_verse:
      000017 00                    2813 	.db #0x00	; 0
                           000018  2814 FSpriteHorse$__xinit_orme_spawned$0_0$0 == .
      000018                       2815 __xinit__orme_spawned:
      000018 00                    2816 	.db #0x00	; 0
                           000019  2817 FSpriteHorse$__xinit_onfire_countdown$0_0$0 == .
      000019                       2818 __xinit__onfire_countdown:
      000019 FF FF                 2819 	.dw #0xffff
                           00001B  2820 FSpriteHorse$__xinit_s_flame$0_0$0 == .
      00001B                       2821 __xinit__s_flame:
      00001B 00 00                 2822 	.dw #0x0000
                           00001D  2823 FSpriteHorse$__xinit_onwater_countdown$0_0$0 == .
      00001D                       2824 __xinit__onwater_countdown:
      00001D FF                    2825 	.db #0xff	; -1
                                   2826 	.area _CABS (ABS)
