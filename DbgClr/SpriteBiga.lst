                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14228 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module SpriteBiga
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _Destroy_SpriteBiga
                                     12 	.globl _Update_SpriteBiga
                                     13 	.globl _Start_SpriteBiga
                                     14 	.globl b_use_weapon
                                     15 	.globl _use_weapon
                                     16 	.globl b_update_time_max
                                     17 	.globl _update_time_max
                                     18 	.globl b_update_hp_max
                                     19 	.globl _update_hp_max
                                     20 	.globl b_update_weapon
                                     21 	.globl _update_weapon
                                     22 	.globl _SpriteManagerRemoveSprite
                                     23 	.globl _CheckCollision
                                     24 	.globl _SetSpriteAnim
                                     25 	.globl _a_biga_up
                                     26 	.globl _a_biga_down
                                     27 	.globl _a_biga_hit
                                     28 	.globl _a_biga_h
                                     29 	.globl ___bank_SpriteBiga
                                     30 	.globl b_pickup
                                     31 	.globl _pickup
                                     32 ;--------------------------------------------------------
                                     33 ; special function registers
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area _DATA
                                     39 ;--------------------------------------------------------
                                     40 ; ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area _INITIALIZED
                                     43 ;--------------------------------------------------------
                                     44 ; absolute external ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area _DABS (ABS)
                                     47 ;--------------------------------------------------------
                                     48 ; global & static initialisations
                                     49 ;--------------------------------------------------------
                                     50 	.area _HOME
                                     51 	.area _GSINIT
                                     52 	.area _GSFINAL
                                     53 	.area _GSINIT
                                     54 ;--------------------------------------------------------
                                     55 ; Home
                                     56 ;--------------------------------------------------------
                                     57 	.area _HOME
                                     58 	.area _HOME
                                     59 ;--------------------------------------------------------
                                     60 ; code
                                     61 ;--------------------------------------------------------
                                     62 	.area _CODE_255
                           000000    63 	G$Start_SpriteBiga$0$0	= .
                                     64 	.globl	G$Start_SpriteBiga$0$0
                           000000    65 	C$SpriteBiga.c$40$0_0$180	= .
                                     66 	.globl	C$SpriteBiga.c$40$0_0$180
                                     67 ;SpriteBiga.c:40: void START() {
                                     68 ;	---------------------------------
                                     69 ; Function Start_SpriteBiga
                                     70 ; ---------------------------------
      000000                         71 _Start_SpriteBiga::
                           000000    72 	C$SpriteBiga.c$41$1_0$180	= .
                                     73 	.globl	C$SpriteBiga.c$41$1_0$180
                                     74 ;SpriteBiga.c:41: SetSpriteAnim(THIS, a_biga_h, 32u);
      000000 3E 20            [ 8]   75 	ld	a, #0x20
      000002 F5               [16]   76 	push	af
      000003 33               [ 8]   77 	inc	sp
      000004 01r2Fr00         [12]   78 	ld	bc, #_a_biga_h
      000007 21r00r00         [12]   79 	ld	hl, #_THIS
      00000A 2A               [ 8]   80 	ld	a, (hl+)
      00000B 5F               [ 4]   81 	ld	e, a
      00000C 56               [ 8]   82 	ld	d, (hl)
      00000D CDr00r00         [24]   83 	call	_SetSpriteAnim
                           000010    84 	C$SpriteBiga.c$42$1_0$180	= .
                                     85 	.globl	C$SpriteBiga.c$42$1_0$180
                                     86 ;SpriteBiga.c:42: THIS->lim_x = 100;
      000010 21r00r00         [12]   87 	ld	hl, #_THIS
      000013 2A               [ 8]   88 	ld	a, (hl+)
      000014 4F               [ 4]   89 	ld	c, a
      000015 46               [ 8]   90 	ld	b, (hl)
      000016 21 15 00         [12]   91 	ld	hl, #0x0015
      000019 09               [ 8]   92 	add	hl, bc
      00001A 3E 64            [ 8]   93 	ld	a, #0x64
      00001C 22               [ 8]   94 	ld	(hl+), a
      00001D 36 00            [12]   95 	ld	(hl), #0x00
                           00001F    96 	C$SpriteBiga.c$43$1_0$180	= .
                                     97 	.globl	C$SpriteBiga.c$43$1_0$180
                                     98 ;SpriteBiga.c:43: THIS->lim_y = 100;
      00001F 21r00r00         [12]   99 	ld	hl, #_THIS
      000022 2A               [ 8]  100 	ld	a, (hl+)
      000023 4F               [ 4]  101 	ld	c, a
      000024 46               [ 8]  102 	ld	b, (hl)
      000025 21 17 00         [12]  103 	ld	hl, #0x0017
      000028 09               [ 8]  104 	add	hl, bc
      000029 3E 64            [ 8]  105 	ld	a, #0x64
      00002B 22               [ 8]  106 	ld	(hl+), a
      00002C 36 00            [12]  107 	ld	(hl), #0x00
                           00002E   108 	C$SpriteBiga.c$44$1_0$180	= .
                                    109 	.globl	C$SpriteBiga.c$44$1_0$180
                                    110 ;SpriteBiga.c:44: }
                           00002E   111 	C$SpriteBiga.c$44$1_0$180	= .
                                    112 	.globl	C$SpriteBiga.c$44$1_0$180
                           00002E   113 	XG$Start_SpriteBiga$0$0	= .
                                    114 	.globl	XG$Start_SpriteBiga$0$0
      00002E C9               [16]  115 	ret
                           0000FF   116 G$__bank_SpriteBiga$0_0$0 == 0x00ff
                           0000FF   117 ___bank_SpriteBiga	=	0x00ff
                           00002F   118 G$a_biga_h$0_0$0 == .
      00002F                        119 _a_biga_h:
      00002F 03                     120 	.db #0x03	; 3
      000030 05                     121 	.db #0x05	; 5
      000031 01                     122 	.db #0x01	; 1
      000032 02                     123 	.db #0x02	; 2
                           000033   124 G$a_biga_hit$0_0$0 == .
      000033                        125 _a_biga_hit:
      000033 06                     126 	.db #0x06	; 6
      000034 00                     127 	.db #0x00	; 0
      000035 05                     128 	.db #0x05	; 5
      000036 00                     129 	.db #0x00	; 0
      000037 01                     130 	.db #0x01	; 1
      000038 00                     131 	.db #0x00	; 0
      000039 02                     132 	.db #0x02	; 2
                           00003A   133 G$a_biga_down$0_0$0 == .
      00003A                        134 _a_biga_down:
      00003A 01                     135 	.db #0x01	; 1
      00003B 03                     136 	.db #0x03	; 3
                           00003C   137 G$a_biga_up$0_0$0 == .
      00003C                        138 _a_biga_up:
      00003C 01                     139 	.db #0x01	; 1
      00003D 04                     140 	.db #0x04	; 4
                           00003E   141 	G$Update_SpriteBiga$0$0	= .
                                    142 	.globl	G$Update_SpriteBiga$0$0
                           00003E   143 	C$SpriteBiga.c$46$1_0$181	= .
                                    144 	.globl	C$SpriteBiga.c$46$1_0$181
                                    145 ;SpriteBiga.c:46: void UPDATE() {
                                    146 ;	---------------------------------
                                    147 ; Function Update_SpriteBiga
                                    148 ; ---------------------------------
      00003E                        149 _Update_SpriteBiga::
      00003E E8 F6            [16]  150 	add	sp, #-10
                           000040   151 	C$SpriteBiga.c$47$1_5$181	= .
                                    152 	.globl	C$SpriteBiga.c$47$1_5$181
                                    153 ;SpriteBiga.c:47: UINT16 final_pos_x = s_horse->x - DISTANCE_X_POSITIVE; //if vx >= 0
      000040 21r00r00         [12]  154 	ld	hl, #_s_horse
      000043 2A               [ 8]  155 	ld	a, (hl+)
      000044 4F               [ 4]  156 	ld	c, a
      000045 46               [ 8]  157 	ld	b, (hl)
      000046 21 0C 00         [12]  158 	ld	hl, #0x000c
      000049 09               [ 8]  159 	add	hl, bc
      00004A 5D               [ 4]  160 	ld	e, l
      00004B 54               [ 4]  161 	ld	d, h
      00004C 1A               [ 8]  162 	ld	a, (de)
      00004D F8 04            [12]  163 	ldhl	sp,	#4
      00004F 22               [ 8]  164 	ld	(hl+), a
      000050 13               [ 8]  165 	inc	de
      000051 1A               [ 8]  166 	ld	a, (de)
      000052 77               [ 8]  167 	ld	(hl), a
      000053 F8 04            [12]  168 	ldhl	sp,#4
      000055 2A               [ 8]  169 	ld	a, (hl+)
      000056 5F               [ 4]  170 	ld	e, a
      000057 56               [ 8]  171 	ld	d, (hl)
      000058 21 18 00         [12]  172 	ld	hl, #0x0018
      00005B 7B               [ 4]  173 	ld	a, e
      00005C 95               [ 4]  174 	sub	a, l
      00005D 5F               [ 4]  175 	ld	e, a
      00005E 7A               [ 4]  176 	ld	a, d
      00005F 9C               [ 4]  177 	sbc	a, h
      000060 F8 01            [12]  178 	ldhl	sp,	#1
      000062 32               [ 8]  179 	ld	(hl-), a
      000063 73               [ 8]  180 	ld	(hl), e
                           000064   181 	C$SpriteBiga.c$48$1_0$181	= .
                                    182 	.globl	C$SpriteBiga.c$48$1_0$181
                                    183 ;SpriteBiga.c:48: if (vx < 0){ final_pos_x = s_horse->x + DISTANCE_X_NEGATIVE;}
      000064 FAr00r00         [16]  184 	ld	a, (#_vx)
      000067 CB 7F            [ 8]  185 	bit	7, a
      000069 28 0C            [12]  186 	jr	Z, 00102$
      00006B F8 04            [12]  187 	ldhl	sp,#4
      00006D 2A               [ 8]  188 	ld	a, (hl+)
      00006E 5F               [ 4]  189 	ld	e, a
      00006F 56               [ 8]  190 	ld	d, (hl)
      000070 21 1C 00         [12]  191 	ld	hl, #0x001c
      000073 19               [ 8]  192 	add	hl, de
      000074 33               [ 8]  193 	inc	sp
      000075 33               [ 8]  194 	inc	sp
      000076 E5               [16]  195 	push	hl
      000077                        196 00102$:
                           000077   197 	C$SpriteBiga.c$49$1_5$181	= .
                                    198 	.globl	C$SpriteBiga.c$49$1_5$181
                                    199 ;SpriteBiga.c:49: UINT16 final_pos_y = s_horse->y - 1; //if vy == 0
      000077 21 0E 00         [12]  200 	ld	hl, #0x000e
      00007A 09               [ 8]  201 	add	hl, bc
      00007B 2A               [ 8]  202 	ld	a, (hl+)
      00007C 4F               [ 4]  203 	ld	c, a
      00007D 46               [ 8]  204 	ld	b, (hl)
      00007E 11 01 00         [12]  205 	ld	de, #0x0001
      000081 79               [ 4]  206 	ld	a, c
      000082 93               [ 4]  207 	sub	a, e
      000083 5F               [ 4]  208 	ld	e, a
      000084 78               [ 4]  209 	ld	a, b
      000085 9A               [ 4]  210 	sbc	a, d
      000086 F8 03            [12]  211 	ldhl	sp,	#3
      000088 32               [ 8]  212 	ld	(hl-), a
      000089 73               [ 8]  213 	ld	(hl), e
                           00008A   214 	C$SpriteBiga.c$50$1_1$183	= .
                                    215 	.globl	C$SpriteBiga.c$50$1_1$183
                                    216 ;SpriteBiga.c:50: if(vy < 0){ final_pos_y = s_horse->y + 8;
      00008A FAr00r00         [16]  217 	ld	a, (#_vy)
      00008D CB 7F            [ 8]  218 	bit	7, a
      00008F 28 10            [12]  219 	jr	Z, 00106$
      000091 21 08 00         [12]  220 	ld	hl, #0x0008
      000094 09               [ 8]  221 	add	hl, bc
      000095 E5               [16]  222 	push	hl
      000096 7D               [ 4]  223 	ld	a, l
      000097 F8 04            [12]  224 	ldhl	sp,	#4
      000099 77               [ 8]  225 	ld	(hl), a
      00009A E1               [12]  226 	pop	hl
      00009B 7C               [ 4]  227 	ld	a, h
      00009C F8 03            [12]  228 	ldhl	sp,	#3
      00009E 77               [ 8]  229 	ld	(hl), a
      00009F 18 25            [12]  230 	jr	00107$
      0000A1                        231 00106$:
                           0000A1   232 	C$SpriteBiga.c$51$1_1$183	= .
                                    233 	.globl	C$SpriteBiga.c$51$1_1$183
                                    234 ;SpriteBiga.c:51: }else if(vy > 0){final_pos_y = s_horse->y - 8;}
      0000A1 21r00r00         [12]  235 	ld	hl, #_vy
      0000A4 5E               [ 8]  236 	ld	e, (hl)
      0000A5 AF               [ 4]  237 	xor	a, a
      0000A6 57               [ 4]  238 	ld	d, a
      0000A7 96               [ 8]  239 	sub	a, (hl)
      0000A8 CB 7B            [ 8]  240 	bit	7, e
      0000AA 28 07            [12]  241 	jr	Z, 00340$
      0000AC CB 7A            [ 8]  242 	bit	7, d
      0000AE 20 08            [12]  243 	jr	NZ, 00341$
      0000B0 BF               [ 4]  244 	cp	a, a
      0000B1 18 05            [12]  245 	jr	00341$
      0000B3                        246 00340$:
      0000B3 CB 7A            [ 8]  247 	bit	7, d
      0000B5 28 01            [12]  248 	jr	Z, 00341$
      0000B7 37               [ 4]  249 	scf
      0000B8                        250 00341$:
      0000B8 30 0C            [12]  251 	jr	NC, 00107$
      0000BA 11 08 00         [12]  252 	ld	de, #0x0008
      0000BD 79               [ 4]  253 	ld	a, c
      0000BE 93               [ 4]  254 	sub	a, e
      0000BF 5F               [ 4]  255 	ld	e, a
      0000C0 78               [ 4]  256 	ld	a, b
      0000C1 9A               [ 4]  257 	sbc	a, d
      0000C2 F8 03            [12]  258 	ldhl	sp,	#3
      0000C4 32               [ 8]  259 	ld	(hl-), a
      0000C5 73               [ 8]  260 	ld	(hl), e
      0000C6                        261 00107$:
                           0000C6   262 	C$SpriteBiga.c$53$1_5$181	= .
                                    263 	.globl	C$SpriteBiga.c$53$1_5$181
                                    264 ;SpriteBiga.c:53: INT16 delta_x = s_horse->x - THIS->x;
      0000C6 21r00r00         [12]  265 	ld	hl, #_THIS
      0000C9 2A               [ 8]  266 	ld	a, (hl+)
      0000CA 4F               [ 4]  267 	ld	c, a
      0000CB 46               [ 8]  268 	ld	b, (hl)
      0000CC 21 0C 00         [12]  269 	ld	hl, #0x000c
      0000CF 09               [ 8]  270 	add	hl, bc
      0000D0 E5               [16]  271 	push	hl
      0000D1 7D               [ 4]  272 	ld	a, l
      0000D2 F8 08            [12]  273 	ldhl	sp,	#8
      0000D4 77               [ 8]  274 	ld	(hl), a
      0000D5 E1               [12]  275 	pop	hl
      0000D6 7C               [ 4]  276 	ld	a, h
      0000D7 F8 07            [12]  277 	ldhl	sp,	#7
      0000D9 32               [ 8]  278 	ld	(hl-), a
      0000DA 2A               [ 8]  279 	ld	a, (hl+)
      0000DB 5F               [ 4]  280 	ld	e, a
      0000DC 3A               [ 8]  281 	ld	a, (hl-)
      0000DD 2B               [ 8]  282 	dec	hl
      0000DE 2B               [ 8]  283 	dec	hl
      0000DF 57               [ 4]  284 	ld	d, a
      0000E0 1A               [ 8]  285 	ld	a, (de)
      0000E1 4F               [ 4]  286 	ld	c, a
      0000E2 13               [ 8]  287 	inc	de
      0000E3 1A               [ 8]  288 	ld	a, (de)
      0000E4 47               [ 4]  289 	ld	b, a
      0000E5 2A               [ 8]  290 	ld	a, (hl+)
      0000E6 5F               [ 4]  291 	ld	e, a
      0000E7 56               [ 8]  292 	ld	d, (hl)
      0000E8 7B               [ 4]  293 	ld	a, e
      0000E9 91               [ 4]  294 	sub	a, c
      0000EA 5F               [ 4]  295 	ld	e, a
      0000EB 7A               [ 4]  296 	ld	a, d
      0000EC 98               [ 4]  297 	sbc	a, b
      0000ED 4B               [ 4]  298 	ld	c, e
      0000EE 47               [ 4]  299 	ld	b, a
                           0000EF   300 	C$SpriteBiga.c$54$1_2$186	= .
                                    301 	.globl	C$SpriteBiga.c$54$1_2$186
                                    302 ;SpriteBiga.c:54: UINT8 off_limit_x = 0;
      0000EF F8 09            [12]  303 	ldhl	sp,	#9
      0000F1 36 00            [12]  304 	ld	(hl), #0x00
                           0000F3   305 	C$SpriteBiga.c$55$1_2$186	= .
                                    306 	.globl	C$SpriteBiga.c$55$1_2$186
                                    307 ;SpriteBiga.c:55: if(delta_x >= (DISTANCE_X_POSITIVE + DELTA_DISTANCE_MAX)){ //troppo lontano indietro a sinistra! metto un limite
      0000F3 79               [ 4]  308 	ld	a, c
      0000F4 D6 24            [ 8]  309 	sub	a, #0x24
      0000F6 78               [ 4]  310 	ld	a, b
      0000F7 17               [ 4]  311 	rla
      0000F8 3F               [ 4]  312 	ccf
      0000F9 1F               [ 4]  313 	rra
      0000FA DE 80            [ 8]  314 	sbc	a, #0x80
      0000FC 38 1E            [12]  315 	jr	C, 00109$
                           0000FE   316 	C$SpriteBiga.c$56$2_2$187	= .
                                    317 	.globl	C$SpriteBiga.c$56$2_2$187
                                    318 ;SpriteBiga.c:56: THIS->x = s_horse->x - (DISTANCE_X_POSITIVE + DELTA_DISTANCE_MAX);
      0000FE F8 04            [12]  319 	ldhl	sp,#4
      000100 2A               [ 8]  320 	ld	a, (hl+)
      000101 5F               [ 4]  321 	ld	e, a
      000102 56               [ 8]  322 	ld	d, (hl)
      000103 21 24 00         [12]  323 	ld	hl, #0x0024
      000106 7B               [ 4]  324 	ld	a, e
      000107 95               [ 4]  325 	sub	a, l
      000108 5F               [ 4]  326 	ld	e, a
      000109 7A               [ 4]  327 	ld	a, d
      00010A 9C               [ 4]  328 	sbc	a, h
      00010B F8 09            [12]  329 	ldhl	sp,	#9
      00010D 32               [ 8]  330 	ld	(hl-), a
      00010E 7B               [ 4]  331 	ld	a, e
      00010F 32               [ 8]  332 	ld	(hl-), a
      000110 2B               [ 8]  333 	dec	hl
      000111 2A               [ 8]  334 	ld	a, (hl+)
      000112 5F               [ 4]  335 	ld	e, a
      000113 2A               [ 8]  336 	ld	a, (hl+)
      000114 57               [ 4]  337 	ld	d, a
      000115 2A               [ 8]  338 	ld	a, (hl+)
      000116 12               [ 8]  339 	ld	(de), a
      000117 13               [ 8]  340 	inc	de
      000118 7E               [ 8]  341 	ld	a, (hl)
      000119 12               [ 8]  342 	ld	(de), a
                           00011A   343 	C$SpriteBiga.c$57$2_2$187	= .
                                    344 	.globl	C$SpriteBiga.c$57$2_2$187
                                    345 ;SpriteBiga.c:57: off_limit_x = 1u;
      00011A 36 01            [12]  346 	ld	(hl), #0x01
      00011C                        347 00109$:
                           00011C   348 	C$SpriteBiga.c$59$1_2$186	= .
                                    349 	.globl	C$SpriteBiga.c$59$1_2$186
                                    350 ;SpriteBiga.c:59: if(delta_x <= -((DISTANCE_X_NEGATIVE + DELTA_DISTANCE_MAX))){ // troppo lontano indietro a destra! metto un limite
      00011C 58               [ 4]  351 	ld	e, b
      00011D 16 FF            [ 8]  352 	ld	d, #0xff
      00011F 3E D8            [ 8]  353 	ld	a, #0xd8
      000121 B9               [ 4]  354 	cp	a, c
      000122 3E FF            [ 8]  355 	ld	a, #0xff
      000124 98               [ 4]  356 	sbc	a, b
      000125 CB 7B            [ 8]  357 	bit	7, e
      000127 28 07            [12]  358 	jr	Z, 00342$
      000129 CB 7A            [ 8]  359 	bit	7, d
      00012B 20 08            [12]  360 	jr	NZ, 00343$
      00012D BF               [ 4]  361 	cp	a, a
      00012E 18 05            [12]  362 	jr	00343$
      000130                        363 00342$:
      000130 CB 7A            [ 8]  364 	bit	7, d
      000132 28 01            [12]  365 	jr	Z, 00343$
      000134 37               [ 4]  366 	scf
      000135                        367 00343$:
      000135 38 27            [12]  368 	jr	C, 00111$
                           000137   369 	C$SpriteBiga.c$60$2_2$188	= .
                                    370 	.globl	C$SpriteBiga.c$60$2_2$188
                                    371 ;SpriteBiga.c:60: THIS->x = s_horse->x + (DISTANCE_X_NEGATIVE + DELTA_DISTANCE_MAX);
      000137 21r00r00         [12]  372 	ld	hl, #_THIS
      00013A 2A               [ 8]  373 	ld	a, (hl+)
      00013B 46               [ 8]  374 	ld	b, (hl)
      00013C C6 0C            [ 8]  375 	add	a, #0x0c
      00013E 4F               [ 4]  376 	ld	c, a
      00013F 30 01            [12]  377 	jr	NC, 00344$
      000141 04               [ 4]  378 	inc	b
      000142                        379 00344$:
      000142 21r00r00         [12]  380 	ld	hl, #_s_horse
      000145 2A               [ 8]  381 	ld	a, (hl+)
      000146 5F               [ 4]  382 	ld	e, a
      000147 56               [ 8]  383 	ld	d, (hl)
      000148 21 0C 00         [12]  384 	ld	hl, #0x000c
      00014B 19               [ 8]  385 	add	hl, de
      00014C 2A               [ 8]  386 	ld	a, (hl+)
      00014D 6E               [ 8]  387 	ld	l, (hl)
                                    388 ;	spillPairReg hl
      00014E C6 28            [ 8]  389 	add	a, #0x28
      000150 5F               [ 4]  390 	ld	e, a
      000151 7D               [ 4]  391 	ld	a, l
      000152 CE 00            [ 8]  392 	adc	a, #0x00
      000154 57               [ 4]  393 	ld	d, a
      000155 7B               [ 4]  394 	ld	a, e
      000156 02               [ 8]  395 	ld	(bc), a
      000157 03               [ 8]  396 	inc	bc
      000158 7A               [ 4]  397 	ld	a, d
      000159 02               [ 8]  398 	ld	(bc), a
                           00015A   399 	C$SpriteBiga.c$61$2_2$188	= .
                                    400 	.globl	C$SpriteBiga.c$61$2_2$188
                                    401 ;SpriteBiga.c:61: off_limit_x = 1;
      00015A F8 09            [12]  402 	ldhl	sp,	#9
      00015C 36 01            [12]  403 	ld	(hl), #0x01
      00015E                        404 00111$:
                           00015E   405 	C$SpriteBiga.c$63$1_2$186	= .
                                    406 	.globl	C$SpriteBiga.c$63$1_2$186
                                    407 ;SpriteBiga.c:63: if(off_limit_x == 0){ //se il limite non è stato infranto, mi sposto verso
      00015E F8 09            [12]  408 	ldhl	sp,	#9
      000160 7E               [ 8]  409 	ld	a, (hl)
      000161 B7               [ 4]  410 	or	a, a
      000162 20 4E            [12]  411 	jr	NZ, 00118$
                           000164   412 	C$SpriteBiga.c$53$1_5$181	= .
                                    413 	.globl	C$SpriteBiga.c$53$1_5$181
                                    414 ;SpriteBiga.c:53: INT16 delta_x = s_horse->x - THIS->x;
      000164 21r00r00         [12]  415 	ld	hl, #_THIS
      000167 2A               [ 8]  416 	ld	a, (hl+)
      000168 4F               [ 4]  417 	ld	c, a
      000169 46               [ 8]  418 	ld	b, (hl)
      00016A 21 0C 00         [12]  419 	ld	hl, #0x000c
      00016D 09               [ 8]  420 	add	hl, bc
      00016E E5               [16]  421 	push	hl
      00016F 7D               [ 4]  422 	ld	a, l
      000170 F8 08            [12]  423 	ldhl	sp,	#8
      000172 77               [ 8]  424 	ld	(hl), a
      000173 E1               [12]  425 	pop	hl
      000174 7C               [ 4]  426 	ld	a, h
      000175 F8 07            [12]  427 	ldhl	sp,	#7
      000177 32               [ 8]  428 	ld	(hl-), a
      000178 2A               [ 8]  429 	ld	a, (hl+)
      000179 5F               [ 4]  430 	ld	e, a
      00017A 56               [ 8]  431 	ld	d, (hl)
      00017B 1A               [ 8]  432 	ld	a, (de)
      00017C 4F               [ 4]  433 	ld	c, a
      00017D 13               [ 8]  434 	inc	de
      00017E 1A               [ 8]  435 	ld	a, (de)
      00017F 47               [ 4]  436 	ld	b, a
                           000180   437 	C$SpriteBiga.c$65$2_2$189	= .
                                    438 	.globl	C$SpriteBiga.c$65$2_2$189
                                    439 ;SpriteBiga.c:65: if(THIS->x > (final_pos_x+1) ){THIS->x-=2;}
      000180 D1               [12]  440 	pop	de
      000181 D5               [16]  441 	push	de
      000182 13               [ 8]  442 	inc	de
      000183 7B               [ 4]  443 	ld	a, e
      000184 91               [ 4]  444 	sub	a, c
      000185 7A               [ 4]  445 	ld	a, d
      000186 98               [ 4]  446 	sbc	a, b
      000187 30 0A            [12]  447 	jr	NC, 00115$
      000189 0B               [ 8]  448 	dec	bc
      00018A 0B               [ 8]  449 	dec	bc
      00018B 3A               [ 8]  450 	ld	a, (hl-)
      00018C 6E               [ 8]  451 	ld	l, (hl)
      00018D 67               [ 4]  452 	ld	h, a
      00018E 79               [ 4]  453 	ld	a, c
      00018F 22               [ 8]  454 	ld	(hl+), a
      000190 70               [ 8]  455 	ld	(hl), b
      000191 18 1F            [12]  456 	jr	00118$
      000193                        457 00115$:
                           000193   458 	C$SpriteBiga.c$66$2_2$189	= .
                                    459 	.globl	C$SpriteBiga.c$66$2_2$189
                                    460 ;SpriteBiga.c:66: else if (THIS->x < (final_pos_x -1 )){THIS->x+=2;}
      000193 D1               [12]  461 	pop	de
      000194 D5               [16]  462 	push	de
      000195 21 01 00         [12]  463 	ld	hl, #0x0001
      000198 7B               [ 4]  464 	ld	a, e
      000199 95               [ 4]  465 	sub	a, l
      00019A 5F               [ 4]  466 	ld	e, a
      00019B 7A               [ 4]  467 	ld	a, d
      00019C 9C               [ 4]  468 	sbc	a, h
      00019D F8 09            [12]  469 	ldhl	sp,	#9
      00019F 32               [ 8]  470 	ld	(hl-), a
      0001A0 73               [ 8]  471 	ld	(hl), e
      0001A1 79               [ 4]  472 	ld	a, c
      0001A2 96               [ 8]  473 	sub	a, (hl)
      0001A3 23               [ 8]  474 	inc	hl
      0001A4 78               [ 4]  475 	ld	a, b
      0001A5 9E               [ 8]  476 	sbc	a, (hl)
      0001A6 30 0A            [12]  477 	jr	NC, 00118$
      0001A8 03               [ 8]  478 	inc	bc
      0001A9 03               [ 8]  479 	inc	bc
      0001AA F8 06            [12]  480 	ldhl	sp,	#6
      0001AC 2A               [ 8]  481 	ld	a,	(hl+)
      0001AD 66               [ 8]  482 	ld	h, (hl)
      0001AE 6F               [ 4]  483 	ld	l, a
      0001AF 79               [ 4]  484 	ld	a, c
      0001B0 22               [ 8]  485 	ld	(hl+), a
      0001B1 70               [ 8]  486 	ld	(hl), b
      0001B2                        487 00118$:
                           0001B2   488 	C$SpriteBiga.c$47$1_5$181	= .
                                    489 	.globl	C$SpriteBiga.c$47$1_5$181
                                    490 ;SpriteBiga.c:47: UINT16 final_pos_x = s_horse->x - DISTANCE_X_POSITIVE; //if vx >= 0
      0001B2 21r00r00         [12]  491 	ld	hl, #_s_horse
      0001B5 2A               [ 8]  492 	ld	a, (hl+)
      0001B6 4F               [ 4]  493 	ld	c, a
      0001B7 46               [ 8]  494 	ld	b, (hl)
                           0001B8   495 	C$SpriteBiga.c$49$1_5$181	= .
                                    496 	.globl	C$SpriteBiga.c$49$1_5$181
                                    497 ;SpriteBiga.c:49: UINT16 final_pos_y = s_horse->y - 1; //if vy == 0
      0001B8 21 0E 00         [12]  498 	ld	hl, #0x000e
      0001BB 09               [ 8]  499 	add	hl, bc
      0001BC 5D               [ 4]  500 	ld	e, l
      0001BD 54               [ 4]  501 	ld	d, h
      0001BE 1A               [ 8]  502 	ld	a, (de)
      0001BF F8 04            [12]  503 	ldhl	sp,	#4
      0001C1 22               [ 8]  504 	ld	(hl+), a
      0001C2 13               [ 8]  505 	inc	de
      0001C3 1A               [ 8]  506 	ld	a, (de)
      0001C4 77               [ 8]  507 	ld	(hl), a
                           0001C5   508 	C$SpriteBiga.c$53$1_5$181	= .
                                    509 	.globl	C$SpriteBiga.c$53$1_5$181
                                    510 ;SpriteBiga.c:53: INT16 delta_x = s_horse->x - THIS->x;
      0001C5 21r00r00         [12]  511 	ld	hl, #_THIS
      0001C8 2A               [ 8]  512 	ld	a, (hl+)
      0001C9 4F               [ 4]  513 	ld	c, a
      0001CA 46               [ 8]  514 	ld	b, (hl)
                           0001CB   515 	C$SpriteBiga.c$69$1_5$181	= .
                                    516 	.globl	C$SpriteBiga.c$69$1_5$181
                                    517 ;SpriteBiga.c:69: INT16 delta_y = s_horse->y - THIS->y;
      0001CB 21 0E 00         [12]  518 	ld	hl, #0x000e
      0001CE 09               [ 8]  519 	add	hl, bc
      0001CF E5               [16]  520 	push	hl
      0001D0 7D               [ 4]  521 	ld	a, l
      0001D1 F8 08            [12]  522 	ldhl	sp,	#8
      0001D3 77               [ 8]  523 	ld	(hl), a
      0001D4 E1               [12]  524 	pop	hl
      0001D5 7C               [ 4]  525 	ld	a, h
      0001D6 F8 07            [12]  526 	ldhl	sp,	#7
      0001D8 32               [ 8]  527 	ld	(hl-), a
      0001D9 2A               [ 8]  528 	ld	a, (hl+)
      0001DA 5F               [ 4]  529 	ld	e, a
      0001DB 3A               [ 8]  530 	ld	a, (hl-)
      0001DC 2B               [ 8]  531 	dec	hl
      0001DD 2B               [ 8]  532 	dec	hl
      0001DE 57               [ 4]  533 	ld	d, a
      0001DF 1A               [ 8]  534 	ld	a, (de)
      0001E0 4F               [ 4]  535 	ld	c, a
      0001E1 13               [ 8]  536 	inc	de
      0001E2 1A               [ 8]  537 	ld	a, (de)
      0001E3 47               [ 4]  538 	ld	b, a
      0001E4 2A               [ 8]  539 	ld	a, (hl+)
      0001E5 5F               [ 4]  540 	ld	e, a
      0001E6 56               [ 8]  541 	ld	d, (hl)
      0001E7 7B               [ 4]  542 	ld	a, e
      0001E8 91               [ 4]  543 	sub	a, c
      0001E9 5F               [ 4]  544 	ld	e, a
      0001EA 7A               [ 4]  545 	ld	a, d
      0001EB 98               [ 4]  546 	sbc	a, b
      0001EC 4B               [ 4]  547 	ld	c, e
      0001ED 47               [ 4]  548 	ld	b, a
                           0001EE   549 	C$SpriteBiga.c$70$1_3$192	= .
                                    550 	.globl	C$SpriteBiga.c$70$1_3$192
                                    551 ;SpriteBiga.c:70: UINT8 off_limit_y = 0;
      0001EE F8 09            [12]  552 	ldhl	sp,	#9
      0001F0 36 00            [12]  553 	ld	(hl), #0x00
                           0001F2   554 	C$SpriteBiga.c$71$1_3$192	= .
                                    555 	.globl	C$SpriteBiga.c$71$1_3$192
                                    556 ;SpriteBiga.c:71: if(delta_y >= 30){ //troppo lontano indietro in su! metto un limite
      0001F2 79               [ 4]  557 	ld	a, c
      0001F3 D6 1E            [ 8]  558 	sub	a, #0x1e
      0001F5 78               [ 4]  559 	ld	a, b
      0001F6 17               [ 4]  560 	rla
      0001F7 3F               [ 4]  561 	ccf
      0001F8 1F               [ 4]  562 	rra
      0001F9 DE 80            [ 8]  563 	sbc	a, #0x80
      0001FB 38 1E            [12]  564 	jr	C, 00120$
                           0001FD   565 	C$SpriteBiga.c$72$2_3$193	= .
                                    566 	.globl	C$SpriteBiga.c$72$2_3$193
                                    567 ;SpriteBiga.c:72: THIS->y = s_horse->y - 15;
      0001FD F8 04            [12]  568 	ldhl	sp,#4
      0001FF 2A               [ 8]  569 	ld	a, (hl+)
      000200 5F               [ 4]  570 	ld	e, a
      000201 56               [ 8]  571 	ld	d, (hl)
      000202 21 0F 00         [12]  572 	ld	hl, #0x000f
      000205 7B               [ 4]  573 	ld	a, e
      000206 95               [ 4]  574 	sub	a, l
      000207 5F               [ 4]  575 	ld	e, a
      000208 7A               [ 4]  576 	ld	a, d
      000209 9C               [ 4]  577 	sbc	a, h
      00020A F8 09            [12]  578 	ldhl	sp,	#9
      00020C 32               [ 8]  579 	ld	(hl-), a
      00020D 7B               [ 4]  580 	ld	a, e
      00020E 32               [ 8]  581 	ld	(hl-), a
      00020F 2B               [ 8]  582 	dec	hl
      000210 2A               [ 8]  583 	ld	a, (hl+)
      000211 5F               [ 4]  584 	ld	e, a
      000212 2A               [ 8]  585 	ld	a, (hl+)
      000213 57               [ 4]  586 	ld	d, a
      000214 2A               [ 8]  587 	ld	a, (hl+)
      000215 12               [ 8]  588 	ld	(de), a
      000216 13               [ 8]  589 	inc	de
      000217 7E               [ 8]  590 	ld	a, (hl)
      000218 12               [ 8]  591 	ld	(de), a
                           000219   592 	C$SpriteBiga.c$73$2_3$193	= .
                                    593 	.globl	C$SpriteBiga.c$73$2_3$193
                                    594 ;SpriteBiga.c:73: off_limit_y = 1u;
      000219 36 01            [12]  595 	ld	(hl), #0x01
      00021B                        596 00120$:
                           00021B   597 	C$SpriteBiga.c$75$1_3$192	= .
                                    598 	.globl	C$SpriteBiga.c$75$1_3$192
                                    599 ;SpriteBiga.c:75: if(delta_y < -30){ //troppo lontano indietro in giù! metto un limite
      00021B 79               [ 4]  600 	ld	a, c
      00021C D6 E2            [ 8]  601 	sub	a, #0xe2
      00021E 78               [ 4]  602 	ld	a, b
      00021F 17               [ 4]  603 	rla
      000220 3F               [ 4]  604 	ccf
      000221 1F               [ 4]  605 	rra
      000222 DE 7F            [ 8]  606 	sbc	a, #0x7f
      000224 30 27            [12]  607 	jr	NC, 00122$
                           000226   608 	C$SpriteBiga.c$76$2_3$194	= .
                                    609 	.globl	C$SpriteBiga.c$76$2_3$194
                                    610 ;SpriteBiga.c:76: THIS->y = s_horse->y + 15;
      000226 21r00r00         [12]  611 	ld	hl, #_THIS
      000229 2A               [ 8]  612 	ld	a, (hl+)
      00022A 46               [ 8]  613 	ld	b, (hl)
      00022B C6 0E            [ 8]  614 	add	a, #0x0e
      00022D 4F               [ 4]  615 	ld	c, a
      00022E 30 01            [12]  616 	jr	NC, 00345$
      000230 04               [ 4]  617 	inc	b
      000231                        618 00345$:
      000231 21r00r00         [12]  619 	ld	hl, #_s_horse
      000234 2A               [ 8]  620 	ld	a, (hl+)
      000235 5F               [ 4]  621 	ld	e, a
      000236 56               [ 8]  622 	ld	d, (hl)
      000237 21 0E 00         [12]  623 	ld	hl, #0x000e
      00023A 19               [ 8]  624 	add	hl, de
      00023B 2A               [ 8]  625 	ld	a, (hl+)
      00023C 6E               [ 8]  626 	ld	l, (hl)
                                    627 ;	spillPairReg hl
      00023D C6 0F            [ 8]  628 	add	a, #0x0f
      00023F 5F               [ 4]  629 	ld	e, a
      000240 7D               [ 4]  630 	ld	a, l
      000241 CE 00            [ 8]  631 	adc	a, #0x00
      000243 57               [ 4]  632 	ld	d, a
      000244 7B               [ 4]  633 	ld	a, e
      000245 02               [ 8]  634 	ld	(bc), a
      000246 03               [ 8]  635 	inc	bc
      000247 7A               [ 4]  636 	ld	a, d
      000248 02               [ 8]  637 	ld	(bc), a
                           000249   638 	C$SpriteBiga.c$77$2_3$194	= .
                                    639 	.globl	C$SpriteBiga.c$77$2_3$194
                                    640 ;SpriteBiga.c:77: off_limit_y = 1u;
      000249 F8 09            [12]  641 	ldhl	sp,	#9
      00024B 36 01            [12]  642 	ld	(hl), #0x01
      00024D                        643 00122$:
                           00024D   644 	C$SpriteBiga.c$80$1_3$192	= .
                                    645 	.globl	C$SpriteBiga.c$80$1_3$192
                                    646 ;SpriteBiga.c:80: if(off_limit_y == 0){ //se il limite non è stato infranto, mi sposto verso
      00024D F8 09            [12]  647 	ldhl	sp,	#9
      00024F 7E               [ 8]  648 	ld	a, (hl)
      000250 B7               [ 4]  649 	or	a, a
      000251 20 41            [12]  650 	jr	NZ, 00129$
                           000253   651 	C$SpriteBiga.c$53$1_5$181	= .
                                    652 	.globl	C$SpriteBiga.c$53$1_5$181
                                    653 ;SpriteBiga.c:53: INT16 delta_x = s_horse->x - THIS->x;
      000253 21r00r00         [12]  654 	ld	hl, #_THIS
      000256 2A               [ 8]  655 	ld	a, (hl+)
      000257 4F               [ 4]  656 	ld	c, a
      000258 46               [ 8]  657 	ld	b, (hl)
                           000259   658 	C$SpriteBiga.c$69$1_5$181	= .
                                    659 	.globl	C$SpriteBiga.c$69$1_5$181
                                    660 ;SpriteBiga.c:69: INT16 delta_y = s_horse->y - THIS->y;
      000259 21 0E 00         [12]  661 	ld	hl, #0x000e
      00025C 09               [ 8]  662 	add	hl, bc
      00025D E5               [16]  663 	push	hl
      00025E 7D               [ 4]  664 	ld	a, l
      00025F F8 0A            [12]  665 	ldhl	sp,	#10
      000261 77               [ 8]  666 	ld	(hl), a
      000262 E1               [12]  667 	pop	hl
      000263 7C               [ 4]  668 	ld	a, h
      000264 F8 09            [12]  669 	ldhl	sp,	#9
      000266 32               [ 8]  670 	ld	(hl-), a
      000267 2A               [ 8]  671 	ld	a, (hl+)
      000268 5F               [ 4]  672 	ld	e, a
      000269 56               [ 8]  673 	ld	d, (hl)
      00026A 1A               [ 8]  674 	ld	a, (de)
      00026B 4F               [ 4]  675 	ld	c, a
      00026C 13               [ 8]  676 	inc	de
      00026D 1A               [ 8]  677 	ld	a, (de)
      00026E 47               [ 4]  678 	ld	b, a
                           00026F   679 	C$SpriteBiga.c$81$2_3$195	= .
                                    680 	.globl	C$SpriteBiga.c$81$2_3$195
                                    681 ;SpriteBiga.c:81: if(THIS->y > final_pos_y){THIS->y--;}
      00026F F8 02            [12]  682 	ldhl	sp,	#2
      000271 2A               [ 8]  683 	ld	a, (hl+)
      000272 91               [ 4]  684 	sub	a, c
      000273 7E               [ 8]  685 	ld	a, (hl)
      000274 98               [ 4]  686 	sbc	a, b
      000275 30 0B            [12]  687 	jr	NC, 00126$
      000277 0B               [ 8]  688 	dec	bc
      000278 F8 08            [12]  689 	ldhl	sp,	#8
      00027A 2A               [ 8]  690 	ld	a,	(hl+)
      00027B 66               [ 8]  691 	ld	h, (hl)
      00027C 6F               [ 4]  692 	ld	l, a
      00027D 79               [ 4]  693 	ld	a, c
      00027E 22               [ 8]  694 	ld	(hl+), a
      00027F 70               [ 8]  695 	ld	(hl), b
      000280 18 12            [12]  696 	jr	00129$
      000282                        697 00126$:
                           000282   698 	C$SpriteBiga.c$82$2_3$195	= .
                                    699 	.globl	C$SpriteBiga.c$82$2_3$195
                                    700 ;SpriteBiga.c:82: else if (THIS->y < final_pos_y){THIS->y++;}
      000282 F8 02            [12]  701 	ldhl	sp,	#2
      000284 79               [ 4]  702 	ld	a, c
      000285 96               [ 8]  703 	sub	a, (hl)
      000286 23               [ 8]  704 	inc	hl
      000287 78               [ 4]  705 	ld	a, b
      000288 9E               [ 8]  706 	sbc	a, (hl)
      000289 30 09            [12]  707 	jr	NC, 00129$
      00028B 03               [ 8]  708 	inc	bc
      00028C F8 08            [12]  709 	ldhl	sp,	#8
      00028E 2A               [ 8]  710 	ld	a,	(hl+)
      00028F 66               [ 8]  711 	ld	h, (hl)
      000290 6F               [ 4]  712 	ld	l, a
      000291 79               [ 4]  713 	ld	a, c
      000292 22               [ 8]  714 	ld	(hl+), a
      000293 70               [ 8]  715 	ld	(hl), b
      000294                        716 00129$:
                           000294   717 	C$SpriteBiga.c$84$1_3$192	= .
                                    718 	.globl	C$SpriteBiga.c$84$1_3$192
                                    719 ;SpriteBiga.c:84: THIS->anim_speed = stamina_current >> 6;
      000294 21r00r00         [12]  720 	ld	hl, #_THIS
      000297 2A               [ 8]  721 	ld	a, (hl+)
      000298 46               [ 8]  722 	ld	b, (hl)
      000299 C6 08            [ 8]  723 	add	a, #0x08
      00029B 4F               [ 4]  724 	ld	c, a
      00029C 30 01            [12]  725 	jr	NC, 00346$
      00029E 04               [ 4]  726 	inc	b
      00029F                        727 00346$:
      00029F 21r00r00         [12]  728 	ld	hl, #_stamina_current
      0002A2 2A               [ 8]  729 	ld	a, (hl+)
      0002A3 5F               [ 4]  730 	ld	e, a
      0002A4 56               [ 8]  731 	ld	d, (hl)
      0002A5 CB 2A            [ 8]  732 	sra	d
      0002A7 CB 1B            [ 8]  733 	rr	e
      0002A9 CB 2A            [ 8]  734 	sra	d
      0002AB CB 1B            [ 8]  735 	rr	e
      0002AD CB 2A            [ 8]  736 	sra	d
      0002AF CB 1B            [ 8]  737 	rr	e
      0002B1 CB 2A            [ 8]  738 	sra	d
      0002B3 CB 1B            [ 8]  739 	rr	e
      0002B5 CB 2A            [ 8]  740 	sra	d
      0002B7 CB 1B            [ 8]  741 	rr	e
      0002B9 CB 2A            [ 8]  742 	sra	d
      0002BB CB 1B            [ 8]  743 	rr	e
      0002BD 7B               [ 4]  744 	ld	a, e
      0002BE 02               [ 8]  745 	ld	(bc), a
                           0002BF   746 	C$SpriteBiga.c$85$1_3$192	= .
                                    747 	.globl	C$SpriteBiga.c$85$1_3$192
                                    748 ;SpriteBiga.c:85: THIS->mirror = s_horse->mirror;
      0002BF 21r00r00         [12]  749 	ld	hl, #_THIS
      0002C2 2A               [ 8]  750 	ld	a, (hl+)
      0002C3 46               [ 8]  751 	ld	b, (hl)
      0002C4 C6 10            [ 8]  752 	add	a, #0x10
      0002C6 4F               [ 4]  753 	ld	c, a
      0002C7 30 01            [12]  754 	jr	NC, 00347$
      0002C9 04               [ 4]  755 	inc	b
      0002CA                        756 00347$:
      0002CA 21r00r00         [12]  757 	ld	hl, #_s_horse
      0002CD 2A               [ 8]  758 	ld	a, (hl+)
      0002CE 5F               [ 4]  759 	ld	e, a
      0002CF 56               [ 8]  760 	ld	d, (hl)
      0002D0 21 10 00         [12]  761 	ld	hl, #0x0010
      0002D3 19               [ 8]  762 	add	hl, de
      0002D4 7E               [ 8]  763 	ld	a, (hl)
      0002D5 02               [ 8]  764 	ld	(bc), a
                           0002D6   765 	C$SpriteBiga.c$87$1_4$198	= .
                                    766 	.globl	C$SpriteBiga.c$87$1_4$198
                                    767 ;SpriteBiga.c:87: INT16 to_final_x = THIS->x - final_pos_x;
      0002D6 21r00r00         [12]  768 	ld	hl, #_THIS
      0002D9 2A               [ 8]  769 	ld	a, (hl+)
      0002DA 4F               [ 4]  770 	ld	c, a
      0002DB 46               [ 8]  771 	ld	b, (hl)
      0002DC 21 0C 00         [12]  772 	ld	hl, #0x000c
      0002DF 09               [ 8]  773 	add	hl, bc
      0002E0 2A               [ 8]  774 	ld	a, (hl+)
      0002E1 46               [ 8]  775 	ld	b, (hl)
      0002E2 5F               [ 4]  776 	ld	e, a
      0002E3 50               [ 4]  777 	ld	d, b
      0002E4 E1               [12]  778 	pop	hl
      0002E5 E5               [16]  779 	push	hl
      0002E6 7B               [ 4]  780 	ld	a, e
      0002E7 95               [ 4]  781 	sub	a, l
      0002E8 5F               [ 4]  782 	ld	e, a
      0002E9 7A               [ 4]  783 	ld	a, d
      0002EA 9C               [ 4]  784 	sbc	a, h
      0002EB 4B               [ 4]  785 	ld	c, e
      0002EC 47               [ 4]  786 	ld	b, a
                           0002ED   787 	C$SpriteBiga.c$88$1_4$198	= .
                                    788 	.globl	C$SpriteBiga.c$88$1_4$198
                                    789 ;SpriteBiga.c:88: SetSpriteAnim(THIS, a_biga_h, 1);
      0002ED C5               [16]  790 	push	bc
      0002EE 3E 01            [ 8]  791 	ld	a, #0x01
      0002F0 F5               [16]  792 	push	af
      0002F1 33               [ 8]  793 	inc	sp
      0002F2 01r2Fr00         [12]  794 	ld	bc, #_a_biga_h
      0002F5 21r00r00         [12]  795 	ld	hl, #_THIS
      0002F8 2A               [ 8]  796 	ld	a, (hl+)
      0002F9 5F               [ 4]  797 	ld	e, a
      0002FA 56               [ 8]  798 	ld	d, (hl)
      0002FB CDr00r00         [24]  799 	call	_SetSpriteAnim
      0002FE C1               [12]  800 	pop	bc
                           0002FF   801 	C$SpriteBiga.c$89$1_4$198	= .
                                    802 	.globl	C$SpriteBiga.c$89$1_4$198
                                    803 ;SpriteBiga.c:89: if(to_final_x > 4){//devo andare a sinistra
      0002FF 58               [ 4]  804 	ld	e, b
      000300 16 00            [ 8]  805 	ld	d, #0x00
      000302 3E 04            [ 8]  806 	ld	a, #0x04
      000304 B9               [ 4]  807 	cp	a, c
      000305 3E 00            [ 8]  808 	ld	a, #0x00
      000307 98               [ 4]  809 	sbc	a, b
      000308 CB 7B            [ 8]  810 	bit	7, e
      00030A 28 07            [12]  811 	jr	Z, 00348$
      00030C CB 7A            [ 8]  812 	bit	7, d
      00030E 20 08            [12]  813 	jr	NZ, 00349$
      000310 BF               [ 4]  814 	cp	a, a
      000311 18 05            [12]  815 	jr	00349$
      000313                        816 00348$:
      000313 CB 7A            [ 8]  817 	bit	7, d
      000315 28 01            [12]  818 	jr	Z, 00349$
      000317 37               [ 4]  819 	scf
      000318                        820 00349$:
      000318 30 0C            [12]  821 	jr	NC, 00131$
                           00031A   822 	C$SpriteBiga.c$90$2_4$199	= .
                                    823 	.globl	C$SpriteBiga.c$90$2_4$199
                                    824 ;SpriteBiga.c:90: THIS->mirror = V_MIRROR;
      00031A 21r00r00         [12]  825 	ld	hl, #_THIS
      00031D 2A               [ 8]  826 	ld	a, (hl+)
      00031E 4F               [ 4]  827 	ld	c, a
      00031F 46               [ 8]  828 	ld	b, (hl)
      000320 21 10 00         [12]  829 	ld	hl, #0x0010
      000323 09               [ 8]  830 	add	hl, bc
      000324 36 02            [12]  831 	ld	(hl), #0x02
      000326                        832 00131$:
                           000326   833 	C$SpriteBiga.c$92$1_4$198	= .
                                    834 	.globl	C$SpriteBiga.c$92$1_4$198
                                    835 ;SpriteBiga.c:92: if(stamina_current < euphoria_max && stamina_current > euphoria_min){
      000326 21r00r00         [12]  836 	ld	hl, #_stamina_current
      000329 2A               [ 8]  837 	ld	a, (hl+)
      00032A 4F               [ 4]  838 	ld	c, a
      00032B 46               [ 8]  839 	ld	b, (hl)
      00032C 21r00r00         [12]  840 	ld	hl, #_euphoria_max
      00032F 79               [ 4]  841 	ld	a, c
      000330 96               [ 8]  842 	sub	a, (hl)
      000331 23               [ 8]  843 	inc	hl
      000332 78               [ 4]  844 	ld	a, b
      000333 9E               [ 8]  845 	sbc	a, (hl)
      000334 30 4E            [12]  846 	jr	NC, 00138$
      000336 21r00r00         [12]  847 	ld	hl, #_euphoria_min
      000339 2A               [ 8]  848 	ld	a, (hl+)
      00033A 91               [ 4]  849 	sub	a, c
      00033B 7E               [ 8]  850 	ld	a, (hl)
      00033C 98               [ 4]  851 	sbc	a, b
      00033D 30 45            [12]  852 	jr	NC, 00138$
                           00033F   853 	C$SpriteBiga.c$93$2_4$200	= .
                                    854 	.globl	C$SpriteBiga.c$93$2_4$200
                                    855 ;SpriteBiga.c:93: if(vy > 1){ //sto andando in giù
      00033F 21r00r00         [12]  856 	ld	hl, #_vy
      000342 5E               [ 8]  857 	ld	e, (hl)
      000343 3E 01            [ 8]  858 	ld	a,#0x01
      000345 57               [ 4]  859 	ld	d,a
      000346 96               [ 8]  860 	sub	a, (hl)
      000347 CB 7B            [ 8]  861 	bit	7, e
      000349 28 07            [12]  862 	jr	Z, 00350$
      00034B CB 7A            [ 8]  863 	bit	7, d
      00034D 20 08            [12]  864 	jr	NZ, 00351$
      00034F BF               [ 4]  865 	cp	a, a
      000350 18 05            [12]  866 	jr	00351$
      000352                        867 00350$:
      000352 CB 7A            [ 8]  868 	bit	7, d
      000354 28 01            [12]  869 	jr	Z, 00351$
      000356 37               [ 4]  870 	scf
      000357                        871 00351$:
      000357 30 12            [12]  872 	jr	NC, 00135$
                           000359   873 	C$SpriteBiga.c$94$3_4$201	= .
                                    874 	.globl	C$SpriteBiga.c$94$3_4$201
                                    875 ;SpriteBiga.c:94: SetSpriteAnim(THIS, a_biga_down, 12);
      000359 3E 0C            [ 8]  876 	ld	a, #0x0c
      00035B F5               [16]  877 	push	af
      00035C 33               [ 8]  878 	inc	sp
      00035D 01r3Ar00         [12]  879 	ld	bc, #_a_biga_down
      000360 21r00r00         [12]  880 	ld	hl, #_THIS
      000363 2A               [ 8]  881 	ld	a, (hl+)
      000364 5F               [ 4]  882 	ld	e, a
      000365 56               [ 8]  883 	ld	d, (hl)
      000366 CDr00r00         [24]  884 	call	_SetSpriteAnim
      000369 18 19            [12]  885 	jr	00138$
      00036B                        886 00135$:
                           00036B   887 	C$SpriteBiga.c$95$2_4$200	= .
                                    888 	.globl	C$SpriteBiga.c$95$2_4$200
                                    889 ;SpriteBiga.c:95: }else if (vy < -1){//sto andando in su
      00036B FAr00r00         [16]  890 	ld	a, (#_vy)
      00036E EE 80            [ 8]  891 	xor	a, #0x80
      000370 D6 7F            [ 8]  892 	sub	a, #0x7f
      000372 30 10            [12]  893 	jr	NC, 00138$
                           000374   894 	C$SpriteBiga.c$96$3_4$202	= .
                                    895 	.globl	C$SpriteBiga.c$96$3_4$202
                                    896 ;SpriteBiga.c:96: SetSpriteAnim(THIS, a_biga_up, 12);
      000374 3E 0C            [ 8]  897 	ld	a, #0x0c
      000376 F5               [16]  898 	push	af
      000377 33               [ 8]  899 	inc	sp
      000378 01r3Cr00         [12]  900 	ld	bc, #_a_biga_up
      00037B 21r00r00         [12]  901 	ld	hl, #_THIS
      00037E 2A               [ 8]  902 	ld	a, (hl+)
      00037F 5F               [ 4]  903 	ld	e, a
      000380 56               [ 8]  904 	ld	d, (hl)
      000381 CDr00r00         [24]  905 	call	_SetSpriteAnim
      000384                        906 00138$:
                           000384   907 	C$SpriteBiga.c$102$2_5$204	= .
                                    908 	.globl	C$SpriteBiga.c$102$2_5$204
                                    909 ;SpriteBiga.c:102: SPRITEMANAGER_ITERATE(scroll_b_tile, ibspr) {
      000384 FAr01r00         [16]  910 	ld	a, (#(_sprite_manager_updatables + 1) + 0)
      000387 6F               [ 4]  911 	ld	l, a
                                    912 ;	spillPairReg hl
                                    913 ;	spillPairReg hl
      000388 26 00            [ 8]  914 	ld	h, #0x00
                                    915 ;	spillPairReg hl
                                    916 ;	spillPairReg hl
      00038A 29               [ 8]  917 	add	hl, hl
      00038B 11r00r00         [12]  918 	ld	de, #_sprite_manager_sprites
      00038E 19               [ 8]  919 	add	hl, de
      00038F 2A               [ 8]  920 	ld	a, (hl+)
      000390 4F               [ 4]  921 	ld	c, a
      000391 46               [ 8]  922 	ld	b, (hl)
      000392 F8 09            [12]  923 	ldhl	sp,	#9
      000394 36 00            [12]  924 	ld	(hl), #0x00
      000396                        925 00153$:
      000396 FAr00r00         [16]  926 	ld	a, (#_sprite_manager_updatables + 0)
      000399 F8 08            [12]  927 	ldhl	sp,	#8
      00039B 77               [ 8]  928 	ld	(hl), a
      00039C F8 09            [12]  929 	ldhl	sp,	#9
      00039E 3A               [ 8]  930 	ld	a, (hl-)
      00039F 96               [ 8]  931 	sub	a, (hl)
      0003A0 28 42            [12]  932 	jr	Z, 00146$
                           0003A2   933 	C$SpriteBiga.c$103$3_5$205	= .
                                    934 	.globl	C$SpriteBiga.c$103$3_5$205
                                    935 ;SpriteBiga.c:103: if(CheckCollision(THIS, ibspr)) {
      0003A2 C5               [16]  936 	push	bc
      0003A3 21r00r00         [12]  937 	ld	hl, #_THIS
      0003A6 5E               [ 8]  938 	ld	e, (hl)
      0003A7 23               [ 8]  939 	inc	hl
      0003A8 56               [ 8]  940 	ld	d, (hl)
      0003A9 CDr00r00         [24]  941 	call	_CheckCollision
      0003AC C1               [12]  942 	pop	bc
      0003AD B7               [ 4]  943 	or	a, a
      0003AE 28 1C            [12]  944 	jr	Z, 00154$
                           0003B0   945 	C$SpriteBiga.c$104$4_5$206	= .
                                    946 	.globl	C$SpriteBiga.c$104$4_5$206
                                    947 ;SpriteBiga.c:104: switch(ibspr->type){
      0003B0 21 13 00         [12]  948 	ld	hl, #0x0013
      0003B3 09               [ 8]  949 	add	hl, bc
      0003B4 7E               [ 8]  950 	ld	a, (hl)
      0003B5 D6 08            [ 8]  951 	sub	a, #0x08
      0003B7 20 13            [12]  952 	jr	NZ, 00154$
                           0003B9   953 	C$SpriteBiga.c$106$6_5$208	= .
                                    954 	.globl	C$SpriteBiga.c$106$6_5$208
                                    955 ;SpriteBiga.c:106: struct ItemData* item_data = (struct ItemData*) ibspr->custom_data;
                           0003B9   956 	C$SpriteBiga.c$107$6_5$208	= .
                                    957 	.globl	C$SpriteBiga.c$107$6_5$208
                                    958 ;SpriteBiga.c:107: if(item_data->configured == 2){
      0003B9 21 1E 00         [12]  959 	ld	hl,#0x1e
      0003BC 09               [ 8]  960 	add	hl,bc
      0003BD 7E               [ 8]  961 	ld	a, (hl)
      0003BE D6 02            [ 8]  962 	sub	a, #0x02
      0003C0 20 0A            [12]  963 	jr	NZ, 00154$
                           0003C2   964 	C$SpriteBiga.c$108$7_5$209	= .
                                    965 	.globl	C$SpriteBiga.c$108$7_5$209
                                    966 ;SpriteBiga.c:108: pickup(ibspr);
      0003C2 C5               [16]  967 	push	bc
      0003C3 1Er00            [ 8]  968 	ld	e, #b_pickup
      0003C5 21r0Br04         [12]  969 	ld	hl, #_pickup
      0003C8 CDr00r00         [24]  970 	call	___sdcc_bcall_ehl
      0003CB E1               [12]  971 	pop	hl
                           0003CC   972 	C$SpriteBiga.c$111$3_5$205	= .
                                    973 	.globl	C$SpriteBiga.c$111$3_5$205
                                    974 ;SpriteBiga.c:111: }
      0003CC                        975 00154$:
                           0003CC   976 	C$SpriteBiga.c$102$2_5$204	= .
                                    977 	.globl	C$SpriteBiga.c$102$2_5$204
                                    978 ;SpriteBiga.c:102: SPRITEMANAGER_ITERATE(scroll_b_tile, ibspr) {
      0003CC F8 09            [12]  979 	ldhl	sp,	#9
      0003CE 34               [12]  980 	inc	(hl)
      0003CF 4E               [ 8]  981 	ld	c, (hl)
      0003D0 06 00            [ 8]  982 	ld	b, #0x00
      0003D2 03               [ 8]  983 	inc	bc
      0003D3 21r00r00         [12]  984 	ld	hl, #_sprite_manager_updatables
      0003D6 09               [ 8]  985 	add	hl, bc
      0003D7 6E               [ 8]  986 	ld	l, (hl)
                                    987 ;	spillPairReg hl
      0003D8 26 00            [ 8]  988 	ld	h, #0x00
                                    989 ;	spillPairReg hl
                                    990 ;	spillPairReg hl
      0003DA 29               [ 8]  991 	add	hl, hl
      0003DB 11r00r00         [12]  992 	ld	de, #_sprite_manager_sprites
      0003DE 19               [ 8]  993 	add	hl, de
      0003DF 2A               [ 8]  994 	ld	a, (hl+)
      0003E0 4F               [ 4]  995 	ld	c, a
      0003E1 46               [ 8]  996 	ld	b, (hl)
      0003E2 18 B2            [12]  997 	jr	00153$
      0003E4                        998 00146$:
                           0003E4   999 	C$SpriteBiga.c$115$1_5$203	= .
                                   1000 	.globl	C$SpriteBiga.c$115$1_5$203
                                   1001 ;SpriteBiga.c:115: if(KEY_TICKED(J_ATK)){
      0003E4 FAr00r00         [16] 1002 	ld	a, (#_keys)
      0003E7 21r00r00         [12] 1003 	ld	hl, #_J_ATK
      0003EA A6               [ 8] 1004 	and	a,(hl)
      0003EB 28 1B            [12] 1005 	jr	Z, 00155$
      0003ED FAr00r00         [16] 1006 	ld	a, (#_previous_keys)
      0003F0 21r00r00         [12] 1007 	ld	hl, #_J_ATK
      0003F3 A6               [ 8] 1008 	and	a,(hl)
      0003F4 20 12            [12] 1009 	jr	NZ, 00155$
                           0003F6  1010 	C$SpriteBiga.c$116$2_5$210	= .
                                   1011 	.globl	C$SpriteBiga.c$116$2_5$210
                                   1012 ;SpriteBiga.c:116: if(weapon_atk != NONE){
      0003F6 FAr00r00         [16] 1013 	ld	a, (#_weapon_atk)
      0003F9 B7               [ 4] 1014 	or	a, a
      0003FA 28 0C            [12] 1015 	jr	Z, 00155$
                           0003FC  1016 	C$SpriteBiga.c$117$3_5$211	= .
                                   1017 	.globl	C$SpriteBiga.c$117$3_5$211
                                   1018 ;SpriteBiga.c:117: use_weapon(0);
      0003FC AF               [ 4] 1019 	xor	a, a
      0003FD F5               [16] 1020 	push	af
      0003FE 33               [ 8] 1021 	inc	sp
      0003FF 1Er00            [ 8] 1022 	ld	e, #b_use_weapon
      000401 21r00r00         [12] 1023 	ld	hl, #_use_weapon
      000404 CDr00r00         [24] 1024 	call	___sdcc_bcall_ehl
      000407 33               [ 8] 1025 	inc	sp
      000408                       1026 00155$:
                           000408  1027 	C$SpriteBiga.c$120$1_5$181	= .
                                   1028 	.globl	C$SpriteBiga.c$120$1_5$181
                                   1029 ;SpriteBiga.c:120: }
      000408 E8 0A            [16] 1030 	add	sp, #10
                           00040A  1031 	C$SpriteBiga.c$120$1_5$181	= .
                                   1032 	.globl	C$SpriteBiga.c$120$1_5$181
                           00040A  1033 	XG$Update_SpriteBiga$0$0	= .
                                   1034 	.globl	XG$Update_SpriteBiga$0$0
      00040A C9               [16] 1035 	ret
                           00040B  1036 	G$pickup$0$0	= .
                                   1037 	.globl	G$pickup$0$0
                           00040B  1038 	C$SpriteBiga.c$122$1_5$213	= .
                                   1039 	.globl	C$SpriteBiga.c$122$1_5$213
                                   1040 ;SpriteBiga.c:122: void pickup(Sprite* s_arg_item) BANKED{
                                   1041 ;	---------------------------------
                                   1042 ; Function pickup
                                   1043 ; ---------------------------------
                           0000FF  1044 	b_pickup	= 255
      00040B                       1045 _pickup::
                           00040B  1046 	C$SpriteBiga.c$123$1_0$213	= .
                                   1047 	.globl	C$SpriteBiga.c$123$1_0$213
                                   1048 ;SpriteBiga.c:123: struct ItemData* item_data = (struct ItemData*) s_arg_item->custom_data;
      00040B F8 06            [12] 1049 	ldhl	sp,	#6
      00040D 2A               [ 8] 1050 	ld	a, (hl+)
      00040E 5F               [ 4] 1051 	ld	e, a
      00040F 56               [ 8] 1052 	ld	d, (hl)
      000410 21 1B 00         [12] 1053 	ld	hl, #0x001b
      000413 19               [ 8] 1054 	add	hl, de
                           000414  1055 	C$SpriteBiga.c$124$1_0$213	= .
                                   1056 	.globl	C$SpriteBiga.c$124$1_0$213
                                   1057 ;SpriteBiga.c:124: switch(item_data->itemtype){
      000414 01 04 00         [12] 1058 	ld	bc, #0x0004
      000417 09               [ 8] 1059 	add	hl, bc
      000418 4E               [ 8] 1060 	ld	c, (hl)
      000419 79               [ 4] 1061 	ld	a, c
      00041A D6 03            [ 8] 1062 	sub	a, #0x03
      00041C DAr00r00         [16] 1063 	jp	C,_SpriteManagerRemoveSprite
      00041F 3E 0A            [ 8] 1064 	ld	a, #0x0a
      000421 91               [ 4] 1065 	sub	a, c
      000422 DAr00r00         [16] 1066 	jp	C,_SpriteManagerRemoveSprite
      000425 79               [ 4] 1067 	ld	a, c
      000426 C6 FD            [ 8] 1068 	add	a, #0xfd
      000428 47               [ 4] 1069 	ld	b, a
      000429 D5               [16] 1070 	push	de
      00042A 58               [ 4] 1071 	ld	e, b
      00042B 16 00            [ 8] 1072 	ld	d, #0x00
      00042D 21r35r04         [12] 1073 	ld	hl, #00126$
      000430 19               [ 8] 1074 	add	hl, de
      000431 19               [ 8] 1075 	add	hl, de
      000432 19               [ 8] 1076 	add	hl, de
      000433 D1               [12] 1077 	pop	de
      000434 E9               [ 4] 1078 	jp	(hl)
      000435                       1079 00126$:
      000435 C3r4Dr04         [16] 1080 	jp	00103$
      000438 C3r4Dr04         [16] 1081 	jp	00103$
      00043B C3r4Dr04         [16] 1082 	jp	00103$
      00043E C3r5Er04         [16] 1083 	jp	00106$
      000441 C3r5Er04         [16] 1084 	jp	00106$
      000444 C3r5Er04         [16] 1085 	jp	00106$
      000447 C3r6Fr04         [16] 1086 	jp	00107$
      00044A C3r7Cr04         [16] 1087 	jp	00108$
                           00044D  1088 	C$SpriteBiga.c$125$2_0$214	= .
                                   1089 	.globl	C$SpriteBiga.c$125$2_0$214
                                   1090 ;SpriteBiga.c:125: case GLADIO: case LANCE: case FLAME:
      00044D                       1091 00103$:
                           00044D  1092 	C$SpriteBiga.c$126$2_0$214	= .
                                   1093 	.globl	C$SpriteBiga.c$126$2_0$214
                                   1094 ;SpriteBiga.c:126: weapon_atk = item_data->itemtype;
      00044D 21r00r00         [12] 1095 	ld	hl, #_weapon_atk
      000450 71               [ 8] 1096 	ld	(hl), c
                           000451  1097 	C$SpriteBiga.c$127$2_0$214	= .
                                   1098 	.globl	C$SpriteBiga.c$127$2_0$214
                                   1099 ;SpriteBiga.c:127: update_weapon();
      000451 D5               [16] 1100 	push	de
      000452 1Er00            [ 8] 1101 	ld	e, #b_update_weapon
      000454 21r00r00         [12] 1102 	ld	hl, #_update_weapon
      000457 CDr00r00         [24] 1103 	call	___sdcc_bcall_ehl
      00045A D1               [12] 1104 	pop	de
                           00045B  1105 	C$SpriteBiga.c$128$2_0$214	= .
                                   1106 	.globl	C$SpriteBiga.c$128$2_0$214
                                   1107 ;SpriteBiga.c:128: break;
      00045B C3r00r00         [16] 1108 	jp	_SpriteManagerRemoveSprite
                           00045E  1109 	C$SpriteBiga.c$129$2_0$214	= .
                                   1110 	.globl	C$SpriteBiga.c$129$2_0$214
                                   1111 ;SpriteBiga.c:129: case ELMET: case SHIELD: case CAPE:
      00045E                       1112 00106$:
                           00045E  1113 	C$SpriteBiga.c$130$2_0$214	= .
                                   1114 	.globl	C$SpriteBiga.c$130$2_0$214
                                   1115 ;SpriteBiga.c:130: weapon_def = item_data->itemtype;
      00045E 21r00r00         [12] 1116 	ld	hl, #_weapon_def
      000461 71               [ 8] 1117 	ld	(hl), c
                           000462  1118 	C$SpriteBiga.c$131$2_0$214	= .
                                   1119 	.globl	C$SpriteBiga.c$131$2_0$214
                                   1120 ;SpriteBiga.c:131: update_weapon();
      000462 D5               [16] 1121 	push	de
      000463 1Er00            [ 8] 1122 	ld	e, #b_update_weapon
      000465 21r00r00         [12] 1123 	ld	hl, #_update_weapon
      000468 CDr00r00         [24] 1124 	call	___sdcc_bcall_ehl
      00046B D1               [12] 1125 	pop	de
                           00046C  1126 	C$SpriteBiga.c$132$2_0$214	= .
                                   1127 	.globl	C$SpriteBiga.c$132$2_0$214
                                   1128 ;SpriteBiga.c:132: break;
      00046C C3r00r00         [16] 1129 	jp	_SpriteManagerRemoveSprite
                           00046F  1130 	C$SpriteBiga.c$133$2_0$214	= .
                                   1131 	.globl	C$SpriteBiga.c$133$2_0$214
                                   1132 ;SpriteBiga.c:133: case HP:
      00046F                       1133 00107$:
                           00046F  1134 	C$SpriteBiga.c$134$2_0$214	= .
                                   1135 	.globl	C$SpriteBiga.c$134$2_0$214
                                   1136 ;SpriteBiga.c:134: update_hp_max();
      00046F D5               [16] 1137 	push	de
      000470 1Er00            [ 8] 1138 	ld	e, #b_update_hp_max
      000472 21r00r00         [12] 1139 	ld	hl, #_update_hp_max
      000475 CDr00r00         [24] 1140 	call	___sdcc_bcall_ehl
      000478 D1               [12] 1141 	pop	de
                           000479  1142 	C$SpriteBiga.c$135$2_0$214	= .
                                   1143 	.globl	C$SpriteBiga.c$135$2_0$214
                                   1144 ;SpriteBiga.c:135: break;
      000479 C3r00r00         [16] 1145 	jp	_SpriteManagerRemoveSprite
                           00047C  1146 	C$SpriteBiga.c$136$2_0$214	= .
                                   1147 	.globl	C$SpriteBiga.c$136$2_0$214
                                   1148 ;SpriteBiga.c:136: case TIME:
      00047C                       1149 00108$:
                           00047C  1150 	C$SpriteBiga.c$137$2_0$214	= .
                                   1151 	.globl	C$SpriteBiga.c$137$2_0$214
                                   1152 ;SpriteBiga.c:137: update_time_max();
      00047C D5               [16] 1153 	push	de
      00047D 1Er00            [ 8] 1154 	ld	e, #b_update_time_max
      00047F 21r00r00         [12] 1155 	ld	hl, #_update_time_max
      000482 CDr00r00         [24] 1156 	call	___sdcc_bcall_ehl
      000485 D1               [12] 1157 	pop	de
                           000486  1158 	C$SpriteBiga.c$139$1_0$213	= .
                                   1159 	.globl	C$SpriteBiga.c$139$1_0$213
                                   1160 ;SpriteBiga.c:139: }    
                           000486  1161 	C$SpriteBiga.c$140$1_0$213	= .
                                   1162 	.globl	C$SpriteBiga.c$140$1_0$213
                                   1163 ;SpriteBiga.c:140: SpriteManagerRemoveSprite(s_arg_item);
                           000486  1164 	C$SpriteBiga.c$141$1_0$213	= .
                                   1165 	.globl	C$SpriteBiga.c$141$1_0$213
                                   1166 ;SpriteBiga.c:141: }
                           000486  1167 	C$SpriteBiga.c$141$1_0$213	= .
                                   1168 	.globl	C$SpriteBiga.c$141$1_0$213
                           000486  1169 	XG$pickup$0$0	= .
                                   1170 	.globl	XG$pickup$0$0
      000486 C3r00r00         [16] 1171 	jp	_SpriteManagerRemoveSprite
                           000489  1172 	G$Destroy_SpriteBiga$0$0	= .
                                   1173 	.globl	G$Destroy_SpriteBiga$0$0
                           000489  1174 	C$SpriteBiga.c$143$1_0$216	= .
                                   1175 	.globl	C$SpriteBiga.c$143$1_0$216
                                   1176 ;SpriteBiga.c:143: void DESTROY() {
                                   1177 ;	---------------------------------
                                   1178 ; Function Destroy_SpriteBiga
                                   1179 ; ---------------------------------
      000489                       1180 _Destroy_SpriteBiga::
                           000489  1181 	C$SpriteBiga.c$144$1_0$216	= .
                                   1182 	.globl	C$SpriteBiga.c$144$1_0$216
                                   1183 ;SpriteBiga.c:144: }
                           000489  1184 	C$SpriteBiga.c$144$1_0$216	= .
                                   1185 	.globl	C$SpriteBiga.c$144$1_0$216
                           000489  1186 	XG$Destroy_SpriteBiga$0$0	= .
                                   1187 	.globl	XG$Destroy_SpriteBiga$0$0
      000489 C9               [16] 1188 	ret
                                   1189 	.area _CODE_255
                                   1190 	.area _INITIALIZER
                                   1191 	.area _CABS (ABS)
