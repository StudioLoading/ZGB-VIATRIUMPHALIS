                                      1 ;-------------------------------------------------------------------------------
                                      2 ;
                                      3 ; GBT Player v2.1.3
                                      4 ;
                                      5 ; SPDX-License-Identifier: MIT
                                      6 ;
                                      7 ; Copyright (c) 2009-2020, Antonio Niño Díaz <antonio_nd@outlook.com>
                                      8 ;
                                      9 ;-------------------------------------------------------------------------------
                                     10 
                           00FF10    11 	.NR10 = 0xFF10
                           00FF11    12 	.NR11 = 0xFF11
                           00FF12    13 	.NR12 = 0xFF12
                           00FF13    14 	.NR13 = 0xFF13
                           00FF14    15 	.NR14 = 0xFF14
                           00FF16    16 	.NR21 = 0xFF16
                           00FF17    17 	.NR22 = 0xFF17
                           00FF18    18 	.NR23 = 0xFF18
                           00FF19    19 	.NR24 = 0xFF19
                           00FF1A    20 	.NR30 = 0xFF1A
                           00FF1B    21 	.NR31 = 0xFF1B
                           00FF1C    22 	.NR32 = 0xFF1C
                           00FF1D    23 	.NR33 = 0xFF1D
                           00FF1E    24 	.NR34 = 0xFF1E
                           00FF20    25 	.NR41 = 0xFF20
                           00FF21    26 	.NR42 = 0xFF21
                           00FF22    27 	.NR43 = 0xFF22
                           00FF23    28 	.NR44 = 0xFF23
                           00FF24    29 	.NR50 = 0xFF24
                           00FF25    30 	.NR51 = 0xFF25
                           00FF26    31 	.NR52 = 0xFF26
                                     32 
                                     33 ;-------------------------------------------------------------------------------
                                     34 
                                     35 	.area	_DATA
                                     36 
                                     37 ;-------------------------------------------------------------------------------
                                     38 
      000000                         39 gbt_playing::
      000000                         40 	.ds	1
                                     41 
      000001                         42 gbt_song:: ; pointer to the pointer array
      000001                         43 	.ds	2
      000003                         44 gbt_bank:: ; bank with the data
      000003                         45 	.ds 1
      000004                         46 gbt_speed:: ; playing speed
      000004                         47 	.ds 1
                                     48 
                                     49 ; Up to 12 bytes per step are copied here to be handled in bank 1
      000005                         50 gbt_temp_play_data::
      000005                         51 	.ds 12
                                     52 
      000011                         53 gbt_loop_enabled::
      000011                         54 	.ds 1
      000012                         55 gbt_ticks_elapsed::
      000012                         56 	.ds	1
      000013                         57 gbt_current_step::
      000013                         58 	.ds	1
      000014                         59 gbt_current_pattern::
      000014                         60 	.ds	1
      000015                         61 gbt_current_step_data_ptr:: ; pointer to next step data
      000015                         62 	.ds 2
                                     63 
      000017                         64 gbt_channels_enabled::
      000017                         65 	.ds	1
                                     66 
      000018                         67 gbt_pan:: ; Ch 1-4
      000018                         68 	.ds	4*1
      00001C                         69 gbt_vol:: ; Ch 1-4
      00001C                         70 	.ds	4*1
      000020                         71 gbt_instr:: ; Ch 1-4
      000020                         72 	.ds	4*1
      000024                         73 gbt_freq:: ; Ch 1-3
      000024                         74 	.ds	3*2
                                     75 
      00002A                         76 gbt_channel3_loaded_instrument:: ; current loaded instrument ($FF if none)
      00002A                         77 	.ds	1
                                     78 
                                     79 ; Arpeggio -> Ch 1-3
      00002B                         80 gbt_arpeggio_freq_index::
      00002B                         81 	.ds 3*3 ; { base index, base index + x, base index + y } * 3
      000034                         82 gbt_arpeggio_enabled::
      000034                         83 	.ds 3*1 ; if 0, disabled
      000037                         84 gbt_arpeggio_tick::
      000037                         85 	.ds	3*1
                                     86 
                                     87 ; Cut note
      00003A                         88 gbt_cut_note_tick::
      00003A                         89 	.ds	4*1 ; If tick == gbt_cut_note_tick, stop note.
                                     90 
                                     91 ; Last step of last pattern this is set to 1
      00003E                         92 gbt_have_to_stop_next_step::
      00003E                         93 	.ds 1
                                     94 
      00003F                         95 gbt_update_pattern_pointers::
      00003F                         96 	.ds 1 ; set to 1 by jump effects
                                     97 
                                     98 ;-------------------------------------------------------------------------------
                                     99 
                                    100 	.area	_CODE
                                    101 
                                    102 ;-------------------------------------------------------------------------------
                                    103 
      000000                        104 gbt_get_pattern_ptr:: ; a = pattern number
                                    105 
                                    106 	; loads a pointer to pattern a into gbt_current_step_data_ptr
                                    107 
      000000 5F                     108 	ld	e,a
      000001 16 00                  109 	ld	d,#0
                                    110 
      000003 FAr03r00               111 	ld	a,(gbt_bank)
      000006 EA 00 20               112 	ld	(#0x2000),a ; MBC1, MBC3, MBC5 - Set bank
                                    113 
      000009 21r01r00               114 	ld	hl,#gbt_song
      00000C 2A                     115 	ld	a,(hl+)
      00000D 6E                     116 	ld	l,(hl)
      00000E 67                     117 	ld	h,a
                                    118 
                                    119 	; hl = pointer to list of pointers
                                    120 	; de = pattern number
                                    121 
      00000F 19                     122 	add	hl,de
      000010 19                     123 	add	hl,de
                                    124 
                                    125 	; hl = pointer to pattern a pointer
                                    126 
      000011 2A                     127 	ld	a,(hl+)
      000012 66                     128 	ld	h,(hl)
      000013 6F                     129 	ld	l,a
                                    130 
                                    131 	; hl = pointer to pattern a data
                                    132 
      000014 7D                     133 	ld	a,l
      000015 EAr15r00               134 	ld	(gbt_current_step_data_ptr),a
      000018 7C                     135 	ld	a,h
      000019 EAr16r00               136 	ld	(gbt_current_step_data_ptr+1),a
                                    137 
      00001C C9                     138 	ret
                                    139 
                                    140 ;-------------------------------------------------------------------------------
                                    141 
      00001D                        142 gbt_get_pattern_ptr_banked:: ; a = pattern number
                                    143 
                                    144 	; loads a pointer to pattern a into gbt_current_step_data_ptr
                                    145 
      00001D 4F                     146 	ld	c,a
      00001E 06 00                  147 	ld	b,#0
                                    148 
      000020 FAr03r00               149 	ld	a,(gbt_bank)
      000023 EA 00 20               150 	ld	(#0x2000),a ; MBC1, MBC3, MBC5 - Set bank
                                    151 
      000026 21r01r00               152 	ld	hl,#gbt_song
      000029 2A                     153 	ld	a,(hl+)
      00002A 6E                     154 	ld	l,(hl)
      00002B 67                     155 	ld	h,a
                                    156 
                                    157 	; hl = pointer to list of pointers
                                    158 	; de = pattern number
                                    159 
      00002C 09                     160 	add	hl,bc
      00002D 09                     161 	add	hl,bc
                                    162 
                                    163 	; hl = pointer to pattern a pointer
                                    164 
      00002E 2A                     165 	ld	a,(hl+)
      00002F 46                     166 	ld	b,(hl)
      000030 B0                     167 	or	a,b
      000031 20 03                  168 	jr	nz,dont_loop$
      000033 EAr14r00               169 	ld	(gbt_current_pattern), a ; a = 0
      000036                        170 dont_loop$:
      000036 3E 01                  171 	ld	a,#0x01
      000038 EA 00 20               172 	ld	(#0x2000),a ; MBC1, MBC3, MBC5 - Set bank
                                    173 
      00003B C9                     174 	ret
                                    175 
                                    176 ;-------------------------------------------------------------------------------
                                    177 
      00003C                        178 _gbt_play::
                                    179 
      00003C C5                     180 	push	bc
                                    181 
      00003D F8 04                  182 	lda	hl,4(sp)
      00003F 5E                     183 	ld	e,(hl)
      000040 23                     184 	inc	hl
      000041 56                     185 	ld	d,(hl)
      000042 23                     186 	inc	hl
      000043 4E                     187 	ld	c,(hl)
      000044 23                     188 	inc hl
      000045 46                     189 	ld	b,(hl)
                                    190 
                                    191 	; de = data
                                    192 	; b = speed , c = bank
                                    193 
      000046 21r01r00               194 	ld	hl,#gbt_song
      000049 72                     195 	ld	(hl),d
      00004A 23                     196 	inc	hl
      00004B 73                     197 	ld	(hl),e
                                    198 
      00004C 79                     199 	ld	a,c
      00004D EAr03r00               200 	ld	(gbt_bank),a
      000050 78                     201 	ld	a,b
      000051 EAr04r00               202 	ld	(gbt_speed),a
                                    203 
      000054 3E 00                  204 	ld	a,#0
      000056 CDr00r00               205 	call	gbt_get_pattern_ptr
                                    206 
      000059 AF                     207 	xor	a,a
      00005A EAr13r00               208 	ld	(gbt_current_step),a
      00005D EAr14r00               209 	ld	(gbt_current_pattern),a
      000060 EAr12r00               210 	ld	(gbt_ticks_elapsed),a
      000063 EAr11r00               211 	ld	(gbt_loop_enabled),a
      000066 EAr3Er00               212 	ld	(gbt_have_to_stop_next_step),a
      000069 EAr3Fr00               213 	ld	(gbt_update_pattern_pointers),a
                                    214 
      00006C 3E FF                  215 	ld	a,#0xFF
      00006E EAr2Ar00               216 	ld	(gbt_channel3_loaded_instrument),a
                                    217 
      000071 3E 0F                  218 	ld	a,#0x0F
      000073 EAr17r00               219 	ld	(gbt_channels_enabled),a
                                    220 
      000076 21r18r00               221 	ld	hl,#gbt_pan
      000079 3E 11                  222 	ld	a,#0x11 ; L and R
      00007B 22                     223 	ld	(hl+),a
      00007C CB 27                  224 	sla	a
      00007E 22                     225 	ld	(hl+),a
      00007F CB 27                  226 	sla	a
      000081 22                     227 	ld	(hl+),a
      000082 CB 27                  228 	sla	a
      000084 77                     229 	ld	(hl),a
                                    230 
      000085 21r1Cr00               231 	ld	hl,#gbt_vol
      000088 3E F0                  232 	ld	a,#0xF0 ; 100%
      00008A 22                     233 	ld	(hl+),a
      00008B 22                     234 	ld	(hl+),a
      00008C 3E 20                  235 	ld	a,#0x20 ; 100%
      00008E 22                     236 	ld	(hl+),a
      00008F 3E F0                  237 	ld	a,#0xF0 ; 100%
      000091 22                     238 	ld	(hl+),a
                                    239 
      000092 3E 00                  240 	ld	a,#0
                                    241 
      000094 21r20r00               242 	ld	hl,#gbt_instr
      000097 22                     243 	ld	(hl+),a
      000098 22                     244 	ld	(hl+),a
      000099 22                     245 	ld	(hl+),a
      00009A 22                     246 	ld	(hl+),a
                                    247 
      00009B 21r24r00               248 	ld	hl,#gbt_freq
      00009E 22                     249 	ld	(hl+),a
      00009F 22                     250 	ld	(hl+),a
      0000A0 22                     251 	ld	(hl+),a
      0000A1 22                     252 	ld	(hl+),a
      0000A2 22                     253 	ld	(hl+),a
      0000A3 22                     254 	ld	(hl+),a
                                    255 
      0000A4 EAr34r00               256 	ld	(gbt_arpeggio_enabled+0),a
      0000A7 EAr35r00               257 	ld	(gbt_arpeggio_enabled+1),a
      0000AA EAr36r00               258 	ld	(gbt_arpeggio_enabled+2),a
                                    259 
      0000AD 3E FF                  260 	ld	a,#0xFF
      0000AF EAr3Ar00               261 	ld	(gbt_cut_note_tick+0),a
      0000B2 EAr3Br00               262 	ld	(gbt_cut_note_tick+1),a
      0000B5 EAr3Cr00               263 	ld	(gbt_cut_note_tick+2),a
      0000B8 EAr3Dr00               264 	ld	(gbt_cut_note_tick+3),a
                                    265 
      0000BB 3E 80                  266 	ld	a,#0x80
      0000BD E0 26                  267 	ldh	(#.NR52),a
      0000BF 3E 00                  268 	ld	a,#0x00
      0000C1 E0 25                  269 	ldh	(#.NR51),a
      0000C3 3E 00                  270 	ld	a,#0x00 ; 0%
      0000C5 E0 24                  271 	ldh	(#.NR50),a
                                    272 
      0000C7 AF                     273 	xor	a,a
      0000C8 E0 10                  274 	ldh	(#.NR10),a
      0000CA E0 11                  275 	ldh	(#.NR11),a
      0000CC E0 12                  276 	ldh	(#.NR12),a
      0000CE E0 13                  277 	ldh	(#.NR13),a
      0000D0 E0 14                  278 	ldh	(#.NR14),a
      0000D2 E0 16                  279 	ldh	(#.NR21),a
      0000D4 E0 17                  280 	ldh	(#.NR22),a
      0000D6 E0 18                  281 	ldh	(#.NR23),a
      0000D8 E0 19                  282 	ldh	(#.NR24),a
      0000DA E0 1A                  283 	ldh	(#.NR30),a
      0000DC E0 1B                  284 	ldh	(#.NR31),a
      0000DE E0 1C                  285 	ldh	(#.NR32),a
      0000E0 E0 1D                  286 	ldh	(#.NR33),a
      0000E2 E0 1E                  287 	ldh	(#.NR34),a
      0000E4 E0 20                  288 	ldh	(#.NR41),a
      0000E6 E0 21                  289 	ldh	(#.NR42),a
      0000E8 E0 22                  290 	ldh	(#.NR43),a
      0000EA E0 23                  291 	ldh	(#.NR44),a
                                    292 
      0000EC 3E 77                  293 	ld	a,#0x77 ; 100%
      0000EE E0 24                  294 	ldh	(#.NR50),a
                                    295 
      0000F0 3E 01                  296 	ld	a,#0x01
      0000F2 EAr00r00               297 	ld	(gbt_playing),a
                                    298 
      0000F5 C1                     299 	pop	bc
      0000F6 C9                     300 	ret
                                    301 
                                    302 ;-------------------------------------------------------------------------------
                                    303 
      0000F7                        304 _gbt_pause::
      0000F7 F8 02                  305 	lda	hl,2(sp)
      0000F9 7E                     306 	ld	a,(hl)
      0000FA EAr00r00               307 	ld	(gbt_playing),a
      0000FD B7                     308 	or	a
      0000FE 20 03                  309 	jr	nz,.gbt_pause_unmute
      000100 E0 24                  310 	ldh	(#.NR50),a ; Mute sound: set L & R sound levels to Off
      000102 C9                     311 	ret
                                    312 
      000103                        313 .gbt_pause_unmute: ; Unmute sound if playback is resumed
      000103 3E 77                  314 	ld	a,#0x77
      000105 E0 24                  315 	ldh	(#.NR50),a ; Restore L & R sound levels to 100%
      000107 C9                     316 	ret
                                    317 
                                    318 ;-------------------------------------------------------------------------------
                                    319 
      000108                        320 _gbt_loop::
      000108 F8 02                  321 	lda	hl,2(sp)
      00010A 7E                     322 	ld	a,(hl)
      00010B EAr11r00               323 	ld	(gbt_loop_enabled),a
      00010E C9                     324 	ret
                                    325 
                                    326 ;-------------------------------------------------------------------------------
                                    327 
      00010F                        328 _gbt_stop::
      00010F AF                     329 	xor	a
      000110 EAr00r00               330 	ld	(gbt_playing),a
      000113 E0 24                  331 	ldh	(#.NR50),a
      000115 E0 25                  332 	ldh	(#.NR51),a
      000117 E0 26                  333 	ldh	(#.NR52),a
      000119 C9                     334 	ret
                                    335 
                                    336 ;-------------------------------------------------------------------------------
                                    337 
      00011A                        338 _gbt_enable_channels::
      00011A F8 02                  339 	lda	hl,2(sp)
      00011C 7E                     340 	ld	a,(hl)
      00011D EAr17r00               341 	ld	(gbt_channels_enabled),a
      000120 C9                     342 	ret
                                    343 
                                    344 ;-------------------------------------------------------------------------------
                                    345 
      000121                        346 _gbt_update::
                                    347 
      000121 C5                     348 	push	bc
                                    349 
                                    350 	; gbt_update has some "ret z" and things like that
                                    351 	; We call it from here to make it easier to mantain both
                                    352 	; RGBDS and GBDK versions.
      000122 CDr27r01               353 	call	gbt_update
                                    354 
      000125 C1                     355 	pop	bc
                                    356 
      000126 C9                     357 	ret
                                    358 
                                    359 ;-------------------------------------------------------------------------------
                                    360 
      000127                        361 gbt_update:
                                    362 
      000127 FAr00r00               363 	ld	a,(gbt_playing)
      00012A B7                     364 	or	a,a
      00012B C8                     365 	ret	z ; If not playing, return
                                    366 
                                    367 	; Handle tick counter
                                    368 
      00012C 21r12r00               369 	ld	hl,#gbt_ticks_elapsed
      00012F FAr04r00               370 	ld	a,(gbt_speed) ; a = total ticks
      000132 46                     371 	ld	b,(hl) ; b = ticks elapsed
      000133 04                     372 	inc	b
      000134 70                     373 	ld	(hl),b
      000135 B8                     374 	cp	a,b
      000136 28 09                  375 	jr	z,.dontexit
                                    376 
                                    377 	; Tick != Speed, update effects and exit
      000138 3E 01                  378 	ld	a,#0x01
      00013A EA 00 20               379 	ld	(#0x2000),a ; MBC1, MBC3, MBC5 - Set bank 1
      00013D CDr00r00               380 	call	gbt_update_effects_bank1 ; Call update function in bank 1
                                    381 
      000140 C9                     382 	ret
                                    383 
      000141                        384 .dontexit:
      000141 36 00                  385 	ld	(hl),#0x00 ; reset tick counter
                                    386 
                                    387 	; Clear tick-based effects
                                    388 	; ------------------------
                                    389 
      000143 AF                     390 	xor	a,a
      000144 21r34r00               391 	ld	hl,#gbt_arpeggio_enabled ; Disable arpeggio
      000147 22                     392 	ld	(hl+),a
      000148 22                     393 	ld	(hl+),a
      000149 77                     394 	ld	(hl),a
      00014A 3D                     395 	dec	a ; a = 0xFF
      00014B 21r3Ar00               396 	ld	hl,#gbt_cut_note_tick ; Disable cut note
      00014E 22                     397 	ld	(hl+),a
      00014F 22                     398 	ld	(hl+),a
      000150 22                     399 	ld	(hl+),a
      000151 77                     400 	ld	(hl),a
                                    401 
                                    402 	; Update effects
                                    403 	; --------------
                                    404 
      000152 3E 01                  405 	ld	a,#0x01
      000154 EA 00 20               406 	ld	(#0x2000),a ; MBC1, MBC3, MBC5 - Set bank 1
      000157 CDr00r00               407 	call	gbt_update_effects_bank1 ; Call update function in bank 1
                                    408 
                                    409 	; Check if last step
                                    410 	; ------------------
                                    411 
      00015A FAr3Er00               412 	ld	a,(gbt_have_to_stop_next_step)
      00015D B7                     413 	or	a,a
      00015E 28 09                  414 	jr	z,.dont_stop
                                    415 
      000160 CDr0Fr01               416 	call	_gbt_stop
      000163 3E 00                  417 	ld	a,#0
      000165 EAr3Er00               418 	ld	(gbt_have_to_stop_next_step),a
      000168 C9                     419 	ret
                                    420 
      000169                        421 .dont_stop:
                                    422 
                                    423 	; Get this step data
                                    424 	; ------------------
                                    425 
                                    426 	; Change to bank with song data
                                    427 
      000169 FAr03r00               428 	ld	a,(gbt_bank)
      00016C EA 00 20               429 	ld	(#0x2000),a ; MBC1, MBC3, MBC5
                                    430 
                                    431 	; Get step data
                                    432 
      00016F FAr15r00               433 	ld	a,(gbt_current_step_data_ptr)
      000172 6F                     434 	ld	l,a
      000173 FAr16r00               435 	ld	a,(gbt_current_step_data_ptr+1)
      000176 67                     436 	ld	h,a ; hl = pointer to data
                                    437 
      000177 11r05r00               438 	ld	de,#gbt_temp_play_data
                                    439 
      00017A 06 04                  440 	ld	b,#4
      00017C                        441 .copy_loop:	; copy as bytes as needed for this step
                                    442 
      00017C 2A                     443 	ld	a,(hl+)
      00017D 12                     444 	ld	(de),a
      00017E 13                     445 	inc	de
      00017F CB 7F                  446 	bit	7,a
      000181 20 06                  447 	jr	nz,.more_bytes
      000183 CB 77                  448 	bit	6,a
      000185 28 0C                  449 	jr	z,.no_more_bytes_this_channel
                                    450 
      000187 18 07                  451 	jr	.one_more_byte
                                    452 
      000189                        453 .more_bytes:
                                    454 
      000189 2A                     455 	ld	a,(hl+)
      00018A 12                     456 	ld	(de),a
      00018B 13                     457 	inc	de
      00018C CB 7F                  458 	bit	7,a
      00018E 28 03                  459 	jr	z,.no_more_bytes_this_channel
                                    460 
      000190                        461 .one_more_byte:
                                    462 
      000190 2A                     463 	ld	a,(hl+)
      000191 12                     464 	ld	(de),a
      000192 13                     465 	inc	de
                                    466 
      000193                        467 .no_more_bytes_this_channel:
      000193 05                     468 	dec	b
      000194 20 E6                  469 	jr	nz,.copy_loop
                                    470 
      000196 7D                     471 	ld	a,l
      000197 EAr15r00               472 	ld	(gbt_current_step_data_ptr),a
      00019A 7C                     473 	ld	a,h
      00019B EAr16r00               474 	ld	(gbt_current_step_data_ptr+1),a ; save pointer to data
                                    475 
                                    476 	; Increment step/pattern
                                    477 	; ----------------------
                                    478 
                                    479 	; Increment step
                                    480 
      00019E FAr13r00               481 	ld	a,(gbt_current_step)
      0001A1 3C                     482 	inc	a
      0001A2 EAr13r00               483 	ld	(gbt_current_step),a
      0001A5 FE 40                  484 	cp	a,#64
      0001A7 20 2E                  485 	jr	nz,.dont_increment_pattern
                                    486 
                                    487 	; Increment pattern
                                    488 
      0001A9 3E 00                  489 	ld	a,#0
      0001AB EAr13r00               490 	ld	(gbt_current_step),a ; Step 0
                                    491 
      0001AE FAr14r00               492 	ld	a,(gbt_current_pattern)
      0001B1 3C                     493 	inc	a
      0001B2 EAr14r00               494 	ld	(gbt_current_pattern),a
                                    495 
      0001B5 CDr00r00               496 	call	gbt_get_pattern_ptr
                                    497 
      0001B8 FAr15r00               498 	ld	a,(gbt_current_step_data_ptr)
      0001BB 47                     499 	ld	b,a
      0001BC FAr16r00               500 	ld	a,(gbt_current_step_data_ptr+1)
      0001BF B0                     501 	or	a,b
      0001C0 20 15                  502 	jr	nz,.not_ended ; if pointer is 0, song has ended
                                    503 
      0001C2 FAr11r00               504 	ld	a,(gbt_loop_enabled)
      0001C5 A7                     505 	and	a,a
                                    506 
      0001C6 28 0A                  507 	jr	z,.loop_disabled
                                    508 
                                    509 	; If loop is enabled, jump to pattern 0
                                    510 
      0001C8 3E 00                  511 	ld	a,#0
      0001CA EAr14r00               512 	ld	(gbt_current_pattern),a
                                    513 
      0001CD CDr00r00               514 	call	gbt_get_pattern_ptr
                                    515 
      0001D0 18 05                  516 	jr	.end_handling_steps_pattern
                                    517 
      0001D2                        518 .loop_disabled:
                                    519 
                                    520 	; If loop is disabled, stop song
                                    521 	; Stop it next step, if not this step won't be played
                                    522 
      0001D2 3E 01                  523 	ld	a,#1
      0001D4 EAr3Er00               524 	ld	(gbt_have_to_stop_next_step),a
                                    525 
      0001D7                        526 .not_ended:
                                    527 
      0001D7                        528 .dont_increment_pattern:
                                    529 
      0001D7                        530 .end_handling_steps_pattern:
                                    531 
      0001D7 3E 01                  532 	ld	a,#0x01
      0001D9 EA 00 20               533 	ld	(#0x2000),a ; MBC1, MBC3, MBC5 - Set bank 1
      0001DC CDr00r00               534 	call	gbt_update_bank1 ; Call update function in bank 1
                                    535 
                                    536 	; Check if any effect has changed the pattern or step
                                    537 
      0001DF FAr3Fr00               538 	ld	a,(gbt_update_pattern_pointers)
      0001E2 A7                     539 	and	a,a
      0001E3 C8                     540 	ret	z
                                    541 	; if any effect has changed the pattern or step, update
                                    542 
      0001E4 AF                     543 	xor	a,a
      0001E5 EAr3Fr00               544 	ld	(gbt_update_pattern_pointers),a ; clear update flag
                                    545 
      0001E8 EAr3Er00               546 	ld	(gbt_have_to_stop_next_step),a ; clear stop flag
                                    547 
      0001EB FAr14r00               548 	ld	a,(gbt_current_pattern)
      0001EE CDr00r00               549 	call	gbt_get_pattern_ptr ; set ptr to start of the pattern
                                    550 
                                    551 	; Search the step
                                    552 
                                    553 	; Change to bank with song data
                                    554 
      0001F1 FAr03r00               555 	ld	a,(gbt_bank)
      0001F4 EA 00 20               556 	ld	(#0x2000),a ; MBC1, MBC3, MBC5
                                    557 
      0001F7 FAr15r00               558 	ld	a,(gbt_current_step_data_ptr)
      0001FA 6F                     559 	ld	l,a
      0001FB FAr16r00               560 	ld	a,(gbt_current_step_data_ptr+1)
      0001FE 67                     561 	ld	h,a ; hl = pointer to data
                                    562 
      0001FF FAr13r00               563 	ld	a,(gbt_current_step)
      000202 A7                     564 	and	a,a
      000203 C8                     565 	ret	z ; if changing to step 0, exit
                                    566 
      000204 CB 27                  567 	sla	a
      000206 CB 27                  568 	sla	a
      000208 47                     569 	ld	b,a ; b = iterations = step * 4 (number of channels)
      000209                        570 .next_channel:
                                    571 
      000209 2A                     572 	ld	a,(hl+)
      00020A CB 7F                  573 	bit	7,a
      00020C 20 06                  574 	jr	nz,.next_channel_more_bytes
      00020E CB 77                  575 	bit	6,a
      000210 28 08                  576 	jr	z,.next_channel_no_more_bytes_this_channel
                                    577 
      000212 18 05                  578 	jr	.next_channel_one_more_byte
                                    579 
      000214                        580 .next_channel_more_bytes:
                                    581 
      000214 2A                     582 	ld	a,(hl+)
      000215 CB 7F                  583 	bit	7,a
      000217 28 01                  584 	jr	z,.next_channel_no_more_bytes_this_channel
                                    585 
      000219                        586 .next_channel_one_more_byte:
                                    587 
      000219 2A                     588 	ld	a,(hl+)
                                    589 
      00021A                        590 .next_channel_no_more_bytes_this_channel:
      00021A 05                     591 	dec	b
      00021B 20 EC                  592 	jr	nz,.next_channel
                                    593 
      00021D 7D                     594 	ld	a,l
      00021E EAr15r00               595 	ld	(gbt_current_step_data_ptr),a
      000221 7C                     596 	ld	a,h
      000222 EAr16r00               597 	ld	(gbt_current_step_data_ptr+1),a ; save pointer to data
                                    598 
      000225 C9                     599 	ret
                                    600 
                                    601 ;-------------------------------------------------------------------------------
