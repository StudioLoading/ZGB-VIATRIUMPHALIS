                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14228 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module Vector
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _memcpy
                                     12 	.globl _VectorAdd
                                     13 	.globl _VectorRemovePos
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area _DATA
                                     21 ;--------------------------------------------------------
                                     22 ; ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area _INITIALIZED
                                     25 ;--------------------------------------------------------
                                     26 ; absolute external ram data
                                     27 ;--------------------------------------------------------
                                     28 	.area _DABS (ABS)
                                     29 ;--------------------------------------------------------
                                     30 ; global & static initialisations
                                     31 ;--------------------------------------------------------
                                     32 	.area _HOME
                                     33 	.area _GSINIT
                                     34 	.area _GSFINAL
                                     35 	.area _GSINIT
                                     36 ;--------------------------------------------------------
                                     37 ; Home
                                     38 ;--------------------------------------------------------
                                     39 	.area _HOME
                                     40 	.area _HOME
                                     41 ;--------------------------------------------------------
                                     42 ; code
                                     43 ;--------------------------------------------------------
                                     44 	.area _CODE
                           000000    45 	G$VectorAdd$0$0	= .
                                     46 	.globl	G$VectorAdd$0$0
                           000000    47 	C$Vector.c$5$0_0$138	= .
                                     48 	.globl	C$Vector.c$5$0_0$138
                                     49 ;C:/ZGB-2023.0/common/src/Vector.c:5: void VectorAdd(UINT8* v, UINT8 elem) {
                                     50 ;	---------------------------------
                                     51 ; Function VectorAdd
                                     52 ; ---------------------------------
      000000                         53 _VectorAdd::
      000000 4F               [ 4]   54 	ld	c, a
                           000001    55 	C$Vector.c$6$1_0$138	= .
                                     56 	.globl	C$Vector.c$6$1_0$138
                                     57 ;C:/ZGB-2023.0/common/src/Vector.c:6: v[++ v[0]] = elem;
      000001 1A               [ 8]   58 	ld	a, (de)
      000002 3C               [ 4]   59 	inc	a
      000003 12               [ 8]   60 	ld	(de), a
      000004 6F               [ 4]   61 	ld	l, a
      000005 26 00            [ 8]   62 	ld	h, #0x00
      000007 19               [ 8]   63 	add	hl, de
      000008 71               [ 8]   64 	ld	(hl), c
                           000009    65 	C$Vector.c$7$1_0$138	= .
                                     66 	.globl	C$Vector.c$7$1_0$138
                                     67 ;C:/ZGB-2023.0/common/src/Vector.c:7: }
                           000009    68 	C$Vector.c$7$1_0$138	= .
                                     69 	.globl	C$Vector.c$7$1_0$138
                           000009    70 	XG$VectorAdd$0$0	= .
                                     71 	.globl	XG$VectorAdd$0$0
      000009 C9               [16]   72 	ret
                           00000A    73 	G$VectorRemovePos$0$0	= .
                                     74 	.globl	G$VectorRemovePos$0$0
                           00000A    75 	C$Vector.c$9$1_0$140	= .
                                     76 	.globl	C$Vector.c$9$1_0$140
                                     77 ;C:/ZGB-2023.0/common/src/Vector.c:9: void VectorRemovePos(UINT8* v, UINT8 pos) {
                                     78 ;	---------------------------------
                                     79 ; Function VectorRemovePos
                                     80 ; ---------------------------------
      00000A                         81 _VectorRemovePos::
      00000A E8 FA            [16]   82 	add	sp, #-6
      00000C F8 04            [12]   83 	ldhl	sp,	#4
      00000E 73               [ 8]   84 	ld	(hl), e
      00000F 23               [ 8]   85 	inc	hl
      000010 72               [ 8]   86 	ld	(hl), d
                           000011    87 	C$Vector.c$10$1_0$140	= .
                                     88 	.globl	C$Vector.c$10$1_0$140
                                     89 ;C:/ZGB-2023.0/common/src/Vector.c:10: memcpy(&v[pos + 1], &v[pos + 2], v[0] - pos);
      000011 2B               [ 8]   90 	dec	hl
      000012 5E               [ 8]   91 	ld	e, (hl)
      000013 23               [ 8]   92 	inc	hl
      000014 56               [ 8]   93 	ld	d, (hl)
      000015 F5               [16]   94 	push	af
      000016 1A               [ 8]   95 	ld	a, (de)
      000017 4F               [ 4]   96 	ld	c, a
      000018 F1               [12]   97 	pop	af
      000019 06 00            [ 8]   98 	ld	b, #0x00
      00001B F8 00            [12]   99 	ldhl	sp,	#0
      00001D 22               [ 8]  100 	ld	(hl+), a
      00001E AF               [ 4]  101 	xor	a, a
      00001F 22               [ 8]  102 	ld	(hl+), a
      000020 23               [ 8]  103 	inc	hl
      000021 D1               [12]  104 	pop	de
      000022 D5               [16]  105 	push	de
      000023 79               [ 4]  106 	ld	a, c
      000024 93               [ 4]  107 	sub	a, e
      000025 5F               [ 4]  108 	ld	e, a
      000026 78               [ 4]  109 	ld	a, b
      000027 9A               [ 4]  110 	sbc	a, d
      000028 32               [ 8]  111 	ld	(hl-), a
      000029 7B               [ 4]  112 	ld	a, e
      00002A 22               [ 8]  113 	ld	(hl+), a
      00002B 23               [ 8]  114 	inc	hl
      00002C C1               [12]  115 	pop	bc
      00002D C5               [16]  116 	push	bc
      00002E 03               [ 8]  117 	inc	bc
      00002F 03               [ 8]  118 	inc	bc
      000030 2A               [ 8]  119 	ld	a,	(hl+)
      000031 66               [ 8]  120 	ld	h, (hl)
      000032 6F               [ 4]  121 	ld	l, a
      000033 09               [ 8]  122 	add	hl, bc
      000034 4D               [ 4]  123 	ld	c, l
      000035 44               [ 4]  124 	ld	b, h
      000036 D1               [12]  125 	pop	de
      000037 D5               [16]  126 	push	de
      000038 13               [ 8]  127 	inc	de
      000039 F8 04            [12]  128 	ldhl	sp,	#4
      00003B 2A               [ 8]  129 	ld	a,	(hl+)
      00003C 66               [ 8]  130 	ld	h, (hl)
      00003D 6F               [ 4]  131 	ld	l, a
      00003E 19               [ 8]  132 	add	hl, de
      00003F 5D               [ 4]  133 	ld	e, l
      000040 54               [ 4]  134 	ld	d, h
      000041 F8 02            [12]  135 	ldhl	sp,	#2
      000043 2A               [ 8]  136 	ld	a, (hl+)
      000044 66               [ 8]  137 	ld	h, (hl)
                                    138 ;	spillPairReg hl
                                    139 ;	spillPairReg hl
      000045 6F               [ 4]  140 	ld	l, a
                                    141 ;	spillPairReg hl
                                    142 ;	spillPairReg hl
      000046 E5               [16]  143 	push	hl
      000047 CDr00r00         [24]  144 	call	_memcpy
                           00004A   145 	C$Vector.c$11$1_0$140	= .
                                    146 	.globl	C$Vector.c$11$1_0$140
                                    147 ;C:/ZGB-2023.0/common/src/Vector.c:11: v[0] --;
      00004A F8 04            [12]  148 	ldhl	sp,#4
      00004C 2A               [ 8]  149 	ld	a, (hl+)
      00004D 5F               [ 4]  150 	ld	e, a
      00004E 56               [ 8]  151 	ld	d, (hl)
      00004F 1A               [ 8]  152 	ld	a, (de)
      000050 4F               [ 4]  153 	ld	c, a
      000051 0D               [ 4]  154 	dec	c
      000052 3A               [ 8]  155 	ld	a, (hl-)
      000053 6E               [ 8]  156 	ld	l, (hl)
      000054 67               [ 4]  157 	ld	h, a
      000055 71               [ 8]  158 	ld	(hl), c
                           000056   159 	C$Vector.c$12$1_0$140	= .
                                    160 	.globl	C$Vector.c$12$1_0$140
                                    161 ;C:/ZGB-2023.0/common/src/Vector.c:12: }
      000056 E8 06            [16]  162 	add	sp, #6
                           000058   163 	C$Vector.c$12$1_0$140	= .
                                    164 	.globl	C$Vector.c$12$1_0$140
                           000058   165 	XG$VectorRemovePos$0$0	= .
                                    166 	.globl	XG$VectorRemovePos$0$0
      000058 C9               [16]  167 	ret
                                    168 	.area _CODE
                                    169 	.area _INITIALIZER
                                    170 	.area _CABS (ABS)
