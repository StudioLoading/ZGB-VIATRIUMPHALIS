                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14228 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module SGB
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _set_sgb_border
                                     12 	.globl _PopBank
                                     13 	.globl _PushBank
                                     14 	.globl _memset
                                     15 	.globl _sgb_transfer
                                     16 	.globl _sgb_check
                                     17 	.globl _fill_bkg_rect
                                     18 	.globl _set_bkg_tiles
                                     19 	.globl _set_bkg_data
                                     20 	.globl _LoadSGBBorder
                                     21 ;--------------------------------------------------------
                                     22 ; special function registers
                                     23 ;--------------------------------------------------------
                                     24 ;--------------------------------------------------------
                                     25 ; ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area _DATA
                                     28 ;--------------------------------------------------------
                                     29 ; ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area _INITIALIZED
                                     32 ;--------------------------------------------------------
                                     33 ; absolute external ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area _DABS (ABS)
                                     36 ;--------------------------------------------------------
                                     37 ; global & static initialisations
                                     38 ;--------------------------------------------------------
                                     39 	.area _HOME
                                     40 	.area _GSINIT
                                     41 	.area _GSFINAL
                                     42 	.area _GSINIT
                                     43 ;--------------------------------------------------------
                                     44 ; Home
                                     45 ;--------------------------------------------------------
                                     46 	.area _HOME
                                     47 	.area _HOME
                                     48 ;--------------------------------------------------------
                                     49 ; code
                                     50 ;--------------------------------------------------------
                                     51 	.area _CODE
                           000000    52 	G$set_sgb_border$0$0	= .
                                     53 	.globl	G$set_sgb_border$0$0
                           000000    54 	C$SGB.c$18$0_0$140	= .
                                     55 	.globl	C$SGB.c$18$0_0$140
                                     56 ;C:/ZGB-2023.0/common/src/SGB.c:18: void set_sgb_border(unsigned char * tiledata, size_t tiledata_size,
                                     57 ;	---------------------------------
                                     58 ; Function set_sgb_border
                                     59 ; ---------------------------------
      000000                         60 _set_sgb_border::
      000000 E8 E5            [16]   61 	add	sp, #-27
      000002 F8 14            [12]   62 	ldhl	sp,	#20
      000004 7B               [ 4]   63 	ld	a, e
      000005 22               [ 8]   64 	ld	(hl+), a
      000006 72               [ 8]   65 	ld	(hl), d
      000007 F8 19            [12]   66 	ldhl	sp,	#25
      000009 79               [ 4]   67 	ld	a, c
      00000A 22               [ 8]   68 	ld	(hl+), a
      00000B 70               [ 8]   69 	ld	(hl), b
                           00000C    70 	C$SGB.c$21$1_0$140	= .
                                     71 	.globl	C$SGB.c$21$1_0$140
                                     72 ;C:/ZGB-2023.0/common/src/SGB.c:21: if (sgb_check()) {
      00000C CDr00r00         [24]   73 	call	_sgb_check
      00000F F8 18            [12]   74 	ldhl	sp,#24
      000011 73               [ 8]   75 	ld	(hl), e
      000012 7E               [ 8]   76 	ld	a, (hl)
      000013 B7               [ 4]   77 	or	a, a
      000014 CArE2r01         [16]   78 	jp	Z, 00117$
                           000017    79 	C$SGB.c$23$2_0$141	= .
                                     80 	.globl	C$SGB.c$23$2_0$141
                                     81 ;C:/ZGB-2023.0/common/src/SGB.c:23: memset(map_buf, 0, sizeof(map_buf));
      000017 21 00 00         [12]   82 	ld	hl, #0
      00001A 39               [ 8]   83 	add	hl, sp
      00001B 11 14 00         [12]   84 	ld	de, #0x0014
      00001E D5               [16]   85 	push	de
      00001F 11 00 00         [12]   86 	ld	de, #0x0000
      000022 D5               [16]   87 	push	de
      000023 E5               [16]   88 	push	hl
      000024 CDr00r00         [24]   89 	call	_memset
      000027 E8 06            [16]   90 	add	sp, #6
                           000029    91 	C$SGB.c$25$2_0$141	= .
                                     92 	.globl	C$SGB.c$25$2_0$141
                                     93 ;C:/ZGB-2023.0/common/src/SGB.c:25: SGB_TRANSFER((SGB_MASK_EN << 3) | 1, SGB_SCR_FREEZE); 
      000029 F8 00            [12]   94 	ldhl	sp,	#0
      00002B 3E B9            [ 8]   95 	ld	a, #0xb9
      00002D 22               [ 8]   96 	ld	(hl+), a
      00002E 36 01            [12]   97 	ld	(hl), #0x01
      000030 21 00 00         [12]   98 	ld	hl, #0
      000033 39               [ 8]   99 	add	hl, sp
      000034 E5               [16]  100 	push	hl
      000035 CDr00r00         [24]  101 	call	_sgb_transfer
      000038 E1               [12]  102 	pop	hl
                           000039   103 	C$SGB.c$27$2_0$141	= .
                                    104 	.globl	C$SGB.c$27$2_0$141
                                    105 ;C:/ZGB-2023.0/common/src/SGB.c:27: BGP_REG = OBP0_REG = OBP1_REG = 0xE4U;
      000039 3E E4            [ 8]  106 	ld	a, #0xe4
      00003B E0r00            [12]  107 	ldh	(_OBP1_REG + 0), a
      00003D 3E E4            [ 8]  108 	ld	a, #0xe4
      00003F E0r00            [12]  109 	ldh	(_OBP0_REG + 0), a
      000041 3E E4            [ 8]  110 	ld	a, #0xe4
      000043 E0r00            [12]  111 	ldh	(_BGP_REG + 0), a
                           000045   112 	C$SGB.c$28$2_0$141	= .
                                    113 	.globl	C$SGB.c$28$2_0$141
                                    114 ;C:/ZGB-2023.0/common/src/SGB.c:28: SCX_REG = SCY_REG = 0U;
      000045 AF               [ 4]  115 	xor	a, a
      000046 E0r00            [12]  116 	ldh	(_SCY_REG + 0), a
      000048 AF               [ 4]  117 	xor	a, a
      000049 E0r00            [12]  118 	ldh	(_SCX_REG + 0), a
                           00004B   119 	C$SGB.c$30$3_0$142	= .
                                    120 	.globl	C$SGB.c$30$3_0$142
                                    121 ;C:/ZGB-2023.0/common/src/SGB.c:30: uint8_t tmp_lcdc = LCDC_REG;
      00004B F0r00            [12]  122 	ldh	a, (_LCDC_REG + 0)
      00004D F8 16            [12]  123 	ldhl	sp,	#22
      00004F 77               [ 8]  124 	ld	(hl), a
                           000050   125 	C$SGB.c$32$2_1$142	= .
                                    126 	.globl	C$SGB.c$32$2_1$142
                                    127 ;C:/ZGB-2023.0/common/src/SGB.c:32: HIDE_SPRITES, HIDE_WIN, SHOW_BKG;
      000050 F0r00            [12]  128 	ldh	a, (_LCDC_REG + 0)
      000052 E6 FD            [ 8]  129 	and	a, #0xfd
      000054 E0r00            [12]  130 	ldh	(_LCDC_REG + 0), a
      000056 F0r00            [12]  131 	ldh	a, (_LCDC_REG + 0)
      000058 E6 DF            [ 8]  132 	and	a, #0xdf
      00005A E0r00            [12]  133 	ldh	(_LCDC_REG + 0), a
      00005C F0r00            [12]  134 	ldh	a, (_LCDC_REG + 0)
      00005E F6 01            [ 8]  135 	or	a, #0x01
      000060 E0r00            [12]  136 	ldh	(_LCDC_REG + 0), a
                           000062   137 	C$SGB.c$33$2_1$142	= .
                                    138 	.globl	C$SGB.c$33$2_1$142
                                    139 ;C:/ZGB-2023.0/common/src/SGB.c:33: DISPLAY_ON;
      000062 F0r00            [12]  140 	ldh	a, (_LCDC_REG + 0)
      000064 F6 80            [ 8]  141 	or	a, #0x80
      000066 E0r00            [12]  142 	ldh	(_LCDC_REG + 0), a
                           000068   143 	C$SGB.c$35$3_1$143	= .
                                    144 	.globl	C$SGB.c$35$3_1$143
                                    145 ;C:/ZGB-2023.0/common/src/SGB.c:35: uint8_t i = 0U;
                           000068   146 	C$SGB.c$36$5_2$145	= .
                                    147 	.globl	C$SGB.c$36$5_2$145
                                    148 ;C:/ZGB-2023.0/common/src/SGB.c:36: for (uint8_t y = 0; y != 14U; ++y) {
      000068 01 00 00         [12]  149 	ld	bc, #0x0
      00006B                        150 00115$:
      00006B 78               [ 4]  151 	ld	a, b
      00006C D6 0E            [ 8]  152 	sub	a, #0x0e
      00006E 28 2A            [12]  153 	jr	Z, 00102$
                           000070   154 	C$SGB.c$37$5_2$145	= .
                                    155 	.globl	C$SGB.c$37$5_2$145
                                    156 ;C:/ZGB-2023.0/common/src/SGB.c:37: uint8_t * dout = map_buf;
      000070 21 00 00         [12]  157 	ld	hl, #0
      000073 39               [ 8]  158 	add	hl, sp
      000074 5D               [ 4]  159 	ld	e, l
      000075 54               [ 4]  160 	ld	d, h
                           000076   161 	C$SGB.c$38$1_0$140	= .
                                    162 	.globl	C$SGB.c$38$1_0$140
                                    163 ;C:/ZGB-2023.0/common/src/SGB.c:38: for (uint8_t x = 0U; x != 20U; ++x) {
      000076 AF               [ 4]  164 	xor	a, a
      000077                        165 00112$:
      000077 FE 14            [ 8]  166 	cp	a, #0x14
      000079 28 09            [12]  167 	jr	Z, 00129$
                           00007B   168 	C$SGB.c$39$6_2$147	= .
                                    169 	.globl	C$SGB.c$39$6_2$147
                                    170 ;C:/ZGB-2023.0/common/src/SGB.c:39: *dout++ = i++;
      00007B F5               [16]  171 	push	af
      00007C 79               [ 4]  172 	ld	a, c
      00007D 12               [ 8]  173 	ld	(de), a
      00007E F1               [12]  174 	pop	af
      00007F 0C               [ 4]  175 	inc	c
      000080 13               [ 8]  176 	inc	de
                           000081   177 	C$SGB.c$38$5_2$146	= .
                                    178 	.globl	C$SGB.c$38$5_2$146
                                    179 ;C:/ZGB-2023.0/common/src/SGB.c:38: for (uint8_t x = 0U; x != 20U; ++x) {
      000081 3C               [ 4]  180 	inc	a
      000082 18 F3            [12]  181 	jr	00112$
      000084                        182 00129$:
                           000084   183 	C$SGB.c$41$4_2$145	= .
                                    184 	.globl	C$SGB.c$41$4_2$145
                                    185 ;C:/ZGB-2023.0/common/src/SGB.c:41: set_bkg_tiles(0, y, 20, 1, map_buf);
      000084 21 00 00         [12]  186 	ld	hl, #0
      000087 39               [ 8]  187 	add	hl, sp
      000088 E5               [16]  188 	push	hl
      000089 21 14 01         [12]  189 	ld	hl, #0x114
      00008C E5               [16]  190 	push	hl
      00008D C5               [16]  191 	push	bc
      00008E 33               [ 8]  192 	inc	sp
      00008F AF               [ 4]  193 	xor	a, a
      000090 F5               [16]  194 	push	af
      000091 33               [ 8]  195 	inc	sp
      000092 CDr00r00         [24]  196 	call	_set_bkg_tiles
      000095 E8 06            [16]  197 	add	sp, #6
                           000097   198 	C$SGB.c$36$3_2$144	= .
                                    199 	.globl	C$SGB.c$36$3_2$144
                                    200 ;C:/ZGB-2023.0/common/src/SGB.c:36: for (uint8_t y = 0; y != 14U; ++y) {
      000097 04               [ 4]  201 	inc	b
      000098 18 D1            [12]  202 	jr	00115$
      00009A                        203 00102$:
                           00009A   204 	C$SGB.c$43$2_2$143	= .
                                    205 	.globl	C$SGB.c$43$2_2$143
                                    206 ;C:/ZGB-2023.0/common/src/SGB.c:43: memset(map_buf, 0, sizeof(map_buf));
      00009A 21 00 00         [12]  207 	ld	hl, #0
      00009D 39               [ 8]  208 	add	hl, sp
      00009E 11 14 00         [12]  209 	ld	de, #0x0014
      0000A1 D5               [16]  210 	push	de
      0000A2 11 00 00         [12]  211 	ld	de, #0x0000
      0000A5 D5               [16]  212 	push	de
      0000A6 E5               [16]  213 	push	hl
      0000A7 CDr00r00         [24]  214 	call	_memset
      0000AA E8 06            [16]  215 	add	sp, #6
                           0000AC   216 	C$SGB.c$46$2_3$148	= .
                                    217 	.globl	C$SGB.c$46$2_3$148
                                    218 ;C:/ZGB-2023.0/common/src/SGB.c:46: uint8_t ntiles = (tiledata_size > 256 * 32) ? 0 : tiledata_size >> 5;
      0000AC F8 19            [12]  219 	ldhl	sp,	#25
      0000AE AF               [ 4]  220 	xor	a, a
      0000AF 96               [ 8]  221 	sub	a, (hl)
      0000B0 23               [ 8]  222 	inc	hl
      0000B1 3E 20            [ 8]  223 	ld	a, #0x20
      0000B3 9E               [ 8]  224 	sbc	a, (hl)
      0000B4 30 07            [12]  225 	jr	NC, 00119$
      0000B6 AF               [ 4]  226 	xor	a, a
      0000B7 F8 17            [12]  227 	ldhl	sp,	#23
      0000B9 22               [ 8]  228 	ld	(hl+), a
      0000BA 77               [ 8]  229 	ld	(hl), a
      0000BB 18 27            [12]  230 	jr	00120$
      0000BD                        231 00119$:
      0000BD F8 19            [12]  232 	ldhl	sp,	#25
      0000BF 3A               [ 8]  233 	ld	a, (hl-)
      0000C0 2B               [ 8]  234 	dec	hl
      0000C1 77               [ 8]  235 	ld	(hl), a
      0000C2 F8 1A            [12]  236 	ldhl	sp,	#26
      0000C4 3A               [ 8]  237 	ld	a, (hl-)
      0000C5 2B               [ 8]  238 	dec	hl
      0000C6 77               [ 8]  239 	ld	(hl), a
      0000C7 CB 3E            [16]  240 	srl	(hl)
      0000C9 2B               [ 8]  241 	dec	hl
      0000CA CB 1E            [16]  242 	rr	(hl)
      0000CC 23               [ 8]  243 	inc	hl
      0000CD CB 3E            [16]  244 	srl	(hl)
      0000CF 2B               [ 8]  245 	dec	hl
      0000D0 CB 1E            [16]  246 	rr	(hl)
      0000D2 23               [ 8]  247 	inc	hl
      0000D3 CB 3E            [16]  248 	srl	(hl)
      0000D5 2B               [ 8]  249 	dec	hl
      0000D6 CB 1E            [16]  250 	rr	(hl)
      0000D8 23               [ 8]  251 	inc	hl
      0000D9 CB 3E            [16]  252 	srl	(hl)
      0000DB 2B               [ 8]  253 	dec	hl
      0000DC CB 1E            [16]  254 	rr	(hl)
      0000DE 23               [ 8]  255 	inc	hl
      0000DF CB 3E            [16]  256 	srl	(hl)
      0000E1 2B               [ 8]  257 	dec	hl
      0000E2 CB 1E            [16]  258 	rr	(hl)
      0000E4                        259 00120$:
      0000E4 F8 17            [12]  260 	ldhl	sp,	#23
      0000E6 4E               [ 8]  261 	ld	c, (hl)
                           0000E7   262 	C$SGB.c$47$2_3$148	= .
                                    263 	.globl	C$SGB.c$47$2_3$148
                                    264 ;C:/ZGB-2023.0/common/src/SGB.c:47: if ((!ntiles) || (ntiles > 128U)) { 
      0000E7 79               [ 4]  265 	ld	a, c
      0000E8 B7               [ 4]  266 	or	a, a
      0000E9 28 05            [12]  267 	jr	Z, 00105$
      0000EB 3E 80            [ 8]  268 	ld	a, #0x80
      0000ED 91               [ 4]  269 	sub	a, c
      0000EE 30 4F            [12]  270 	jr	NC, 00106$
      0000F0                        271 00105$:
                           0000F0   272 	C$SGB.c$48$3_3$149	= .
                                    273 	.globl	C$SGB.c$48$3_3$149
                                    274 ;C:/ZGB-2023.0/common/src/SGB.c:48: set_bkg_data(0, 0, tiledata); 
      0000F0 F8 14            [12]  275 	ldhl	sp,	#20
      0000F2 2A               [ 8]  276 	ld	a, (hl+)
      0000F3 5F               [ 4]  277 	ld	e, a
      0000F4 56               [ 8]  278 	ld	d, (hl)
      0000F5 D5               [16]  279 	push	de
      0000F6 AF               [ 4]  280 	xor	a, a
      0000F7 0F               [ 4]  281 	rrca
      0000F8 F5               [16]  282 	push	af
      0000F9 CDr00r00         [24]  283 	call	_set_bkg_data
      0000FC E8 04            [16]  284 	add	sp, #4
                           0000FE   285 	C$SGB.c$49$3_3$149	= .
                                    286 	.globl	C$SGB.c$49$3_3$149
                                    287 ;C:/ZGB-2023.0/common/src/SGB.c:49: SGB_TRANSFER((SGB_CHR_TRN << 3) | 1, SGB_CHR_BLOCK0);
      0000FE F8 00            [12]  288 	ldhl	sp,	#0
      000100 3E 99            [ 8]  289 	ld	a, #0x99
      000102 22               [ 8]  290 	ld	(hl+), a
      000103 36 00            [12]  291 	ld	(hl), #0x00
      000105 21 00 00         [12]  292 	ld	hl, #0
      000108 39               [ 8]  293 	add	hl, sp
      000109 E5               [16]  294 	push	hl
      00010A CDr00r00         [24]  295 	call	_sgb_transfer
      00010D E1               [12]  296 	pop	hl
                           00010E   297 	C$SGB.c$50$3_3$149	= .
                                    298 	.globl	C$SGB.c$50$3_3$149
                                    299 ;C:/ZGB-2023.0/common/src/SGB.c:50: if (ntiles) ntiles -= 128U; 
      00010E 79               [ 4]  300 	ld	a, c
      00010F B7               [ 4]  301 	or	a, a
      000110 28 04            [12]  302 	jr	Z, 00104$
      000112 79               [ 4]  303 	ld	a, c
      000113 C6 80            [ 8]  304 	add	a, #0x80
      000115 4F               [ 4]  305 	ld	c, a
      000116                        306 00104$:
                           000116   307 	C$SGB.c$51$3_3$149	= .
                                    308 	.globl	C$SGB.c$51$3_3$149
                                    309 ;C:/ZGB-2023.0/common/src/SGB.c:51: tiledata += (128 * 32);
      000116 F8 14            [12]  310 	ldhl	sp,#20
      000118 2A               [ 8]  311 	ld	a, (hl+)
      000119 5F               [ 4]  312 	ld	e, a
      00011A 56               [ 8]  313 	ld	d, (hl)
      00011B 21 00 10         [12]  314 	ld	hl, #0x1000
      00011E 19               [ 8]  315 	add	hl, de
      00011F 5D               [ 4]  316 	ld	e, l
      000120 54               [ 4]  317 	ld	d, h
                           000121   318 	C$SGB.c$52$3_3$149	= .
                                    319 	.globl	C$SGB.c$52$3_3$149
                                    320 ;C:/ZGB-2023.0/common/src/SGB.c:52: set_bkg_data(0, ntiles << 1, tiledata); 
      000121 79               [ 4]  321 	ld	a, c
      000122 87               [ 4]  322 	add	a, a
      000123 D5               [16]  323 	push	de
      000124 67               [ 4]  324 	ld	h, a
      000125 2E 00            [ 8]  325 	ld	l, #0x00
      000127 E5               [16]  326 	push	hl
      000128 CDr00r00         [24]  327 	call	_set_bkg_data
      00012B E8 04            [16]  328 	add	sp, #4
                           00012D   329 	C$SGB.c$53$3_3$149	= .
                                    330 	.globl	C$SGB.c$53$3_3$149
                                    331 ;C:/ZGB-2023.0/common/src/SGB.c:53: SGB_TRANSFER((SGB_CHR_TRN << 3) | 1, SGB_CHR_BLOCK1);
      00012D F8 00            [12]  332 	ldhl	sp,	#0
      00012F 3E 99            [ 8]  333 	ld	a, #0x99
      000131 22               [ 8]  334 	ld	(hl+), a
      000132 36 01            [12]  335 	ld	(hl), #0x01
      000134 21 00 00         [12]  336 	ld	hl, #0
      000137 39               [ 8]  337 	add	hl, sp
      000138 E5               [16]  338 	push	hl
      000139 CDr00r00         [24]  339 	call	_sgb_transfer
      00013C E1               [12]  340 	pop	hl
      00013D 18 21            [12]  341 	jr	00107$
      00013F                        342 00106$:
                           00013F   343 	C$SGB.c$55$3_3$150	= .
                                    344 	.globl	C$SGB.c$55$3_3$150
                                    345 ;C:/ZGB-2023.0/common/src/SGB.c:55: set_bkg_data(0, ntiles << 1, tiledata); 
      00013F 79               [ 4]  346 	ld	a, c
      000140 87               [ 4]  347 	add	a, a
      000141 F8 14            [12]  348 	ldhl	sp,	#20
      000143 5E               [ 8]  349 	ld	e, (hl)
      000144 23               [ 8]  350 	inc	hl
      000145 56               [ 8]  351 	ld	d, (hl)
      000146 D5               [16]  352 	push	de
      000147 67               [ 4]  353 	ld	h, a
      000148 2E 00            [ 8]  354 	ld	l, #0x00
      00014A E5               [16]  355 	push	hl
      00014B CDr00r00         [24]  356 	call	_set_bkg_data
      00014E E8 04            [16]  357 	add	sp, #4
                           000150   358 	C$SGB.c$56$3_3$150	= .
                                    359 	.globl	C$SGB.c$56$3_3$150
                                    360 ;C:/ZGB-2023.0/common/src/SGB.c:56: SGB_TRANSFER((SGB_CHR_TRN << 3) | 1, SGB_CHR_BLOCK0);
      000150 F8 00            [12]  361 	ldhl	sp,	#0
      000152 3E 99            [ 8]  362 	ld	a, #0x99
      000154 22               [ 8]  363 	ld	(hl+), a
      000155 36 00            [12]  364 	ld	(hl), #0x00
      000157 21 00 00         [12]  365 	ld	hl, #0
      00015A 39               [ 8]  366 	add	hl, sp
      00015B E5               [16]  367 	push	hl
      00015C CDr00r00         [24]  368 	call	_sgb_transfer
      00015F E1               [12]  369 	pop	hl
      000160                        370 00107$:
                           000160   371 	C$SGB.c$60$2_3$148	= .
                                    372 	.globl	C$SGB.c$60$2_3$148
                                    373 ;C:/ZGB-2023.0/common/src/SGB.c:60: set_bkg_data(0, (uint8_t)(tilemap_size >> 4), tilemap);
      000160 F8 1F            [12]  374 	ldhl	sp,	#31
      000162 2A               [ 8]  375 	ld	a, (hl+)
      000163 47               [ 4]  376 	ld	b, a
      000164 4E               [ 8]  377 	ld	c, (hl)
      000165 CB 39            [ 8]  378 	srl	c
      000167 CB 18            [ 8]  379 	rr	b
      000169 CB 39            [ 8]  380 	srl	c
      00016B CB 18            [ 8]  381 	rr	b
      00016D CB 39            [ 8]  382 	srl	c
      00016F CB 18            [ 8]  383 	rr	b
      000171 CB 39            [ 8]  384 	srl	c
      000173 CB 18            [ 8]  385 	rr	b
      000175 F8 1D            [12]  386 	ldhl	sp,	#29
      000177 2A               [ 8]  387 	ld	a, (hl+)
      000178 5F               [ 4]  388 	ld	e, a
      000179 56               [ 8]  389 	ld	d, (hl)
      00017A D5               [16]  390 	push	de
      00017B C5               [16]  391 	push	bc
      00017C 33               [ 8]  392 	inc	sp
      00017D AF               [ 4]  393 	xor	a, a
      00017E F5               [16]  394 	push	af
      00017F 33               [ 8]  395 	inc	sp
      000180 CDr00r00         [24]  396 	call	_set_bkg_data
      000183 E8 04            [16]  397 	add	sp, #4
                           000185   398 	C$SGB.c$61$2_3$148	= .
                                    399 	.globl	C$SGB.c$61$2_3$148
                                    400 ;C:/ZGB-2023.0/common/src/SGB.c:61: set_bkg_data(128, (uint8_t)(palette_size >> 4), palette);
      000185 F8 23            [12]  401 	ldhl	sp,	#35
      000187 2A               [ 8]  402 	ld	a, (hl+)
      000188 47               [ 4]  403 	ld	b, a
      000189 4E               [ 8]  404 	ld	c, (hl)
      00018A CB 39            [ 8]  405 	srl	c
      00018C CB 18            [ 8]  406 	rr	b
      00018E CB 39            [ 8]  407 	srl	c
      000190 CB 18            [ 8]  408 	rr	b
      000192 CB 39            [ 8]  409 	srl	c
      000194 CB 18            [ 8]  410 	rr	b
      000196 CB 39            [ 8]  411 	srl	c
      000198 CB 18            [ 8]  412 	rr	b
      00019A F8 21            [12]  413 	ldhl	sp,	#33
      00019C 2A               [ 8]  414 	ld	a, (hl+)
      00019D 5F               [ 4]  415 	ld	e, a
      00019E 56               [ 8]  416 	ld	d, (hl)
      00019F D5               [16]  417 	push	de
      0001A0 C5               [16]  418 	push	bc
      0001A1 33               [ 8]  419 	inc	sp
      0001A2 3E 80            [ 8]  420 	ld	a, #0x80
      0001A4 F5               [16]  421 	push	af
      0001A5 33               [ 8]  422 	inc	sp
      0001A6 CDr00r00         [24]  423 	call	_set_bkg_data
      0001A9 E8 04            [16]  424 	add	sp, #4
                           0001AB   425 	C$SGB.c$62$2_3$148	= .
                                    426 	.globl	C$SGB.c$62$2_3$148
                                    427 ;C:/ZGB-2023.0/common/src/SGB.c:62: SGB_TRANSFER((SGB_PCT_TRN << 3) | 1, 0);
      0001AB F8 00            [12]  428 	ldhl	sp,	#0
      0001AD 3E A1            [ 8]  429 	ld	a, #0xa1
      0001AF 22               [ 8]  430 	ld	(hl+), a
      0001B0 36 00            [12]  431 	ld	(hl), #0x00
      0001B2 21 00 00         [12]  432 	ld	hl, #0
      0001B5 39               [ 8]  433 	add	hl, sp
      0001B6 E5               [16]  434 	push	hl
      0001B7 CDr00r00         [24]  435 	call	_sgb_transfer
      0001BA E1               [12]  436 	pop	hl
                           0001BB   437 	C$SGB.c$64$2_3$148	= .
                                    438 	.globl	C$SGB.c$64$2_3$148
                                    439 ;C:/ZGB-2023.0/common/src/SGB.c:64: LCDC_REG = tmp_lcdc;
      0001BB F8 16            [12]  440 	ldhl	sp,	#22
      0001BD 7E               [ 8]  441 	ld	a, (hl)
      0001BE E0r00            [12]  442 	ldh	(_LCDC_REG + 0), a
                           0001C0   443 	C$SGB.c$67$2_3$148	= .
                                    444 	.globl	C$SGB.c$67$2_3$148
                                    445 ;C:/ZGB-2023.0/common/src/SGB.c:67: fill_bkg_rect(0, 0, 20, 18, 0);
      0001C0 AF               [ 4]  446 	xor	a, a
      0001C1 67               [ 4]  447 	ld	h, a
      0001C2 2E 12            [ 8]  448 	ld	l, #0x12
      0001C4 E5               [16]  449 	push	hl
      0001C5 3E 14            [ 8]  450 	ld	a, #0x14
      0001C7 F5               [16]  451 	push	af
      0001C8 33               [ 8]  452 	inc	sp
      0001C9 AF               [ 4]  453 	xor	a, a
      0001CA 0F               [ 4]  454 	rrca
      0001CB F5               [16]  455 	push	af
      0001CC AF               [ 4]  456 	xor	a, a
      0001CD CDr00r00         [24]  457 	call	_fill_bkg_rect
      0001D0 E8 05            [16]  458 	add	sp, #5
                           0001D2   459 	C$SGB.c$69$2_3$148	= .
                                    460 	.globl	C$SGB.c$69$2_3$148
                                    461 ;C:/ZGB-2023.0/common/src/SGB.c:69: SGB_TRANSFER((SGB_MASK_EN << 3) | 1, SGB_SCR_UNFREEZE); 
      0001D2 F8 00            [12]  462 	ldhl	sp,	#0
      0001D4 36 B9            [12]  463 	ld	(hl), #0xb9
      0001D6 23               [ 8]  464 	inc	hl
      0001D7 36 00            [12]  465 	ld	(hl), #0x00
      0001D9 21 00 00         [12]  466 	ld	hl, #0
      0001DC 39               [ 8]  467 	add	hl, sp
      0001DD E5               [16]  468 	push	hl
      0001DE CDr00r00         [24]  469 	call	_sgb_transfer
      0001E1 E1               [12]  470 	pop	hl
      0001E2                        471 00117$:
                           0001E2   472 	C$SGB.c$71$1_0$140	= .
                                    473 	.globl	C$SGB.c$71$1_0$140
                                    474 ;C:/ZGB-2023.0/common/src/SGB.c:71: }
      0001E2 E8 1B            [16]  475 	add	sp, #27
      0001E4 E1               [12]  476 	pop	hl
      0001E5 E8 08            [16]  477 	add	sp, #8
      0001E7 E9               [ 4]  478 	jp	(hl)
                           0001E8   479 	G$LoadSGBBorder$0$0	= .
                                    480 	.globl	G$LoadSGBBorder$0$0
                           0001E8   481 	C$SGB.c$73$1_0$152	= .
                                    482 	.globl	C$SGB.c$73$1_0$152
                                    483 ;C:/ZGB-2023.0/common/src/SGB.c:73: void LoadSGBBorder(UINT8 map_bank, struct MapInfo* map) {
                                    484 ;	---------------------------------
                                    485 ; Function LoadSGBBorder
                                    486 ; ---------------------------------
      0001E8                        487 _LoadSGBBorder::
      0001E8 E8 F4            [16]  488 	add	sp, #-12
      0001EA F8 0A            [12]  489 	ldhl	sp,	#10
      0001EC 73               [ 8]  490 	ld	(hl), e
      0001ED 23               [ 8]  491 	inc	hl
      0001EE 72               [ 8]  492 	ld	(hl), d
                           0001EF   493 	C$SGB.c$74$1_0$152	= .
                                    494 	.globl	C$SGB.c$74$1_0$152
                                    495 ;C:/ZGB-2023.0/common/src/SGB.c:74: PUSH_BANK(map_bank);
      0001EF F5               [16]  496 	push	af
      0001F0 33               [ 8]  497 	inc	sp
      0001F1 CDr00r00         [24]  498 	call	_PushBank
      0001F4 33               [ 8]  499 	inc	sp
                           0001F5   500 	C$SGB.c$75$1_0$152	= .
                                    501 	.globl	C$SGB.c$75$1_0$152
                                    502 ;C:/ZGB-2023.0/common/src/SGB.c:75: set_sgb_border(map->tiles->data, map->tiles->num_frames << 5, map->data, 1792, map->tiles->pals, map->tiles->num_pals << 5);
      0001F5 F8 0A            [12]  503 	ldhl	sp,#10
      0001F7 2A               [ 8]  504 	ld	a, (hl+)
      0001F8 5F               [ 4]  505 	ld	e, a
      0001F9 56               [ 8]  506 	ld	d, (hl)
      0001FA 21 07 00         [12]  507 	ld	hl, #0x0007
      0001FD 19               [ 8]  508 	add	hl, de
      0001FE 2A               [ 8]  509 	ld	a, (hl+)
      0001FF 4F               [ 4]  510 	ld	c, a
      000200 46               [ 8]  511 	ld	b, (hl)
      000201 59               [ 4]  512 	ld	e, c
      000202 50               [ 4]  513 	ld	d, b
      000203 13               [ 8]  514 	inc	de
      000204 13               [ 8]  515 	inc	de
      000205 13               [ 8]  516 	inc	de
      000206 1A               [ 8]  517 	ld	a, (de)
      000207 1E 00            [ 8]  518 	ld	e, #0x00
      000209 87               [ 4]  519 	add	a, a
      00020A CB 13            [ 8]  520 	rl	e
      00020C 87               [ 4]  521 	add	a, a
      00020D CB 13            [ 8]  522 	rl	e
      00020F 87               [ 4]  523 	add	a, a
      000210 CB 13            [ 8]  524 	rl	e
      000212 87               [ 4]  525 	add	a, a
      000213 CB 13            [ 8]  526 	rl	e
      000215 87               [ 4]  527 	add	a, a
      000216 CB 13            [ 8]  528 	rl	e
      000218 F8 00            [12]  529 	ldhl	sp,	#0
      00021A 22               [ 8]  530 	ld	(hl+), a
      00021B 73               [ 8]  531 	ld	(hl), e
      00021C 21 04 00         [12]  532 	ld	hl, #0x0004
      00021F 09               [ 8]  533 	add	hl, bc
      000220 5D               [ 4]  534 	ld	e, l
      000221 54               [ 4]  535 	ld	d, h
      000222 1A               [ 8]  536 	ld	a, (de)
      000223 F8 08            [12]  537 	ldhl	sp,	#8
      000225 22               [ 8]  538 	ld	(hl+), a
      000226 13               [ 8]  539 	inc	de
      000227 1A               [ 8]  540 	ld	a, (de)
      000228 77               [ 8]  541 	ld	(hl), a
      000229 F8 08            [12]  542 	ldhl	sp,	#8
      00022B 7E               [ 8]  543 	ld	a, (hl)
      00022C F8 02            [12]  544 	ldhl	sp,	#2
      00022E 77               [ 8]  545 	ld	(hl), a
      00022F F8 09            [12]  546 	ldhl	sp,	#9
      000231 7E               [ 8]  547 	ld	a, (hl)
      000232 F8 03            [12]  548 	ldhl	sp,	#3
      000234 77               [ 8]  549 	ld	(hl), a
      000235 F8 0A            [12]  550 	ldhl	sp,#10
      000237 2A               [ 8]  551 	ld	a, (hl+)
      000238 5F               [ 4]  552 	ld	e, a
      000239 56               [ 8]  553 	ld	d, (hl)
      00023A 1A               [ 8]  554 	ld	a, (de)
      00023B F8 04            [12]  555 	ldhl	sp,	#4
      00023D 22               [ 8]  556 	ld	(hl+), a
      00023E 13               [ 8]  557 	inc	de
      00023F 1A               [ 8]  558 	ld	a, (de)
      000240 22               [ 8]  559 	ld	(hl+), a
      000241 0A               [ 8]  560 	ld	a, (bc)
      000242 1E 00            [ 8]  561 	ld	e, #0x00
      000244 87               [ 4]  562 	add	a, a
      000245 CB 13            [ 8]  563 	rl	e
      000247 87               [ 4]  564 	add	a, a
      000248 CB 13            [ 8]  565 	rl	e
      00024A 87               [ 4]  566 	add	a, a
      00024B CB 13            [ 8]  567 	rl	e
      00024D 87               [ 4]  568 	add	a, a
      00024E CB 13            [ 8]  569 	rl	e
      000250 87               [ 4]  570 	add	a, a
      000251 CB 13            [ 8]  571 	rl	e
      000253 22               [ 8]  572 	ld	(hl+), a
      000254 7B               [ 4]  573 	ld	a, e
      000255 22               [ 8]  574 	ld	(hl+), a
      000256 03               [ 8]  575 	inc	bc
      000257 59               [ 4]  576 	ld	e, c
      000258 50               [ 4]  577 	ld	d, b
      000259 1A               [ 8]  578 	ld	a, (de)
      00025A 22               [ 8]  579 	ld	(hl+), a
      00025B 13               [ 8]  580 	inc	de
      00025C 1A               [ 8]  581 	ld	a, (de)
      00025D 77               [ 8]  582 	ld	(hl), a
      00025E D1               [12]  583 	pop	de
      00025F D5               [16]  584 	push	de
      000260 D5               [16]  585 	push	de
      000261 F8 04            [12]  586 	ldhl	sp,	#4
      000263 2A               [ 8]  587 	ld	a, (hl+)
      000264 5F               [ 4]  588 	ld	e, a
      000265 2A               [ 8]  589 	ld	a, (hl+)
      000266 57               [ 4]  590 	ld	d, a
      000267 D5               [16]  591 	push	de
      000268 11 00 07         [12]  592 	ld	de, #0x0700
      00026B D5               [16]  593 	push	de
      00026C 2A               [ 8]  594 	ld	a, (hl+)
      00026D 5F               [ 4]  595 	ld	e, a
      00026E 2A               [ 8]  596 	ld	a, (hl+)
      00026F 57               [ 4]  597 	ld	d, a
      000270 D5               [16]  598 	push	de
      000271 2A               [ 8]  599 	ld	a, (hl+)
      000272 4F               [ 4]  600 	ld	c, a
      000273 2A               [ 8]  601 	ld	a, (hl+)
      000274 47               [ 4]  602 	ld	b, a
      000275 2A               [ 8]  603 	ld	a, (hl+)
      000276 5F               [ 4]  604 	ld	e, a
      000277 56               [ 8]  605 	ld	d, (hl)
      000278 CDr00r00         [24]  606 	call	_set_sgb_border
                           00027B   607 	C$SGB.c$76$1_0$152	= .
                                    608 	.globl	C$SGB.c$76$1_0$152
                                    609 ;C:/ZGB-2023.0/common/src/SGB.c:76: POP_BANK;
      00027B CDr00r00         [24]  610 	call	_PopBank
                           00027E   611 	C$SGB.c$77$1_0$152	= .
                                    612 	.globl	C$SGB.c$77$1_0$152
                                    613 ;C:/ZGB-2023.0/common/src/SGB.c:77: }
      00027E E8 0C            [16]  614 	add	sp, #12
                           000280   615 	C$SGB.c$77$1_0$152	= .
                                    616 	.globl	C$SGB.c$77$1_0$152
                           000280   617 	XG$LoadSGBBorder$0$0	= .
                                    618 	.globl	XG$LoadSGBBorder$0$0
      000280 C9               [16]  619 	ret
                                    620 	.area _CODE
                                    621 	.area _INITIALIZER
                                    622 	.area _CABS (ABS)
