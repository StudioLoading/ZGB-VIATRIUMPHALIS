                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14228 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module Scroll
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _ScrollUpdateColumnWithDelay
                                     12 	.globl _ScrollUpdateColumnR
                                     13 	.globl _ScrollUpdateRowWithDelay
                                     14 	.globl _ScrollUpdateRowR
                                     15 	.globl _ClampScrollLimits
                                     16 	.globl _UPDATE_TILE
                                     17 	.globl _SetTile
                                     18 	.globl _GetTileReplacement
                                     19 	.globl _memset
                                     20 	.globl _PopBank
                                     21 	.globl _PushBank
                                     22 	.globl _SpriteManagerAdd
                                     23 	.globl _set_win_tile_xy
                                     24 	.globl _set_bkg_tile_xy
                                     25 	.globl _set_bkg_data
                                     26 	.globl _clamp_enabled
                                     27 	.globl _scroll_h_border
                                     28 	.globl _last_bg_pal_loaded
                                     29 	.globl _last_tile_loaded
                                     30 	.globl _pending_w_map
                                     31 	.globl _pending_h_map
                                     32 	.globl _scroll_offset_y
                                     33 	.globl _scroll_offset_x
                                     34 	.globl _scroll_target
                                     35 	.globl _scroll_y_vblank
                                     36 	.globl _scroll_x_vblank
                                     37 	.globl _scroll_y
                                     38 	.globl _scroll_x
                                     39 	.globl _scroll_cmap
                                     40 	.globl _scroll_map
                                     41 	.globl _scroll_bottom_movement_limit
                                     42 	.globl _scroll_top_movement_limit
                                     43 	.globl _current_vbl_count
                                     44 	.globl _tiles_0
                                     45 	.globl _tiles_bank_0
                                     46 	.globl _hud_map_offset
                                     47 	.globl _pending_w_i
                                     48 	.globl _pending_w_y
                                     49 	.globl _pending_w_x
                                     50 	.globl _pending_h_i
                                     51 	.globl _pending_h_y
                                     52 	.globl _pending_h_x
                                     53 	.globl _scroll_bank
                                     54 	.globl _scroll_tile_info
                                     55 	.globl _scroll_collisions_down
                                     56 	.globl _scroll_collisions
                                     57 	.globl _scroll_tiles_h
                                     58 	.globl _scroll_tiles_w
                                     59 	.globl _scroll_h
                                     60 	.globl _scroll_w
                                     61 	.globl _ScrollSetTiles
                                     62 	.globl _UpdateMapTile
                                     63 	.globl _LoadMap
                                     64 	.globl _ScrollSetMap
                                     65 	.globl _InitScroll
                                     66 	.globl _InitScrollWithTiles
                                     67 	.globl _ScrollUpdateRow
                                     68 	.globl _ScrollUpdateColumn
                                     69 	.globl _RefreshScroll
                                     70 	.globl _MoveScroll
                                     71 	.globl _GetScrollTilePtr
                                     72 	.globl _GetScrollTile
                                     73 	.globl _GetMapSize
                                     74 	.globl _ScrollFindTile
                                     75 ;--------------------------------------------------------
                                     76 ; special function registers
                                     77 ;--------------------------------------------------------
                                     78 ;--------------------------------------------------------
                                     79 ; ram data
                                     80 ;--------------------------------------------------------
                                     81 	.area _DATA
                           000000    82 G$scroll_w$0_0$0==.
      000000                         83 _scroll_w::
      000000                         84 	.ds 2
                           000002    85 G$scroll_h$0_0$0==.
      000002                         86 _scroll_h::
      000002                         87 	.ds 2
                           000004    88 G$scroll_tiles_w$0_0$0==.
      000004                         89 _scroll_tiles_w::
      000004                         90 	.ds 2
                           000006    91 G$scroll_tiles_h$0_0$0==.
      000006                         92 _scroll_tiles_h::
      000006                         93 	.ds 2
                           000008    94 G$scroll_collisions$0_0$0==.
      000008                         95 _scroll_collisions::
      000008                         96 	.ds 256
                           000108    97 G$scroll_collisions_down$0_0$0==.
      000108                         98 _scroll_collisions_down::
      000108                         99 	.ds 256
                           000208   100 G$scroll_tile_info$0_0$0==.
      000208                        101 _scroll_tile_info::
      000208                        102 	.ds 256
                           000308   103 G$scroll_bank$0_0$0==.
      000308                        104 _scroll_bank::
      000308                        105 	.ds 1
                           000309   106 G$pending_h_x$0_0$0==.
      000309                        107 _pending_h_x::
      000309                        108 	.ds 2
                           00030B   109 G$pending_h_y$0_0$0==.
      00030B                        110 _pending_h_y::
      00030B                        111 	.ds 2
                           00030D   112 G$pending_h_i$0_0$0==.
      00030D                        113 _pending_h_i::
      00030D                        114 	.ds 1
                           00030E   115 G$pending_w_x$0_0$0==.
      00030E                        116 _pending_w_x::
      00030E                        117 	.ds 2
                           000310   118 G$pending_w_y$0_0$0==.
      000310                        119 _pending_w_y::
      000310                        120 	.ds 2
                           000312   121 G$pending_w_i$0_0$0==.
      000312                        122 _pending_w_i::
      000312                        123 	.ds 1
                           000313   124 G$hud_map_offset$0_0$0==.
      000313                        125 _hud_map_offset::
      000313                        126 	.ds 2
                           000315   127 G$tiles_bank_0$0_0$0==.
      000315                        128 _tiles_bank_0::
      000315                        129 	.ds 1
                           000316   130 G$tiles_0$0_0$0==.
      000316                        131 _tiles_0::
      000316                        132 	.ds 2
                           000318   133 G$current_vbl_count$0_0$0==.
      000318                        134 _current_vbl_count::
      000318                        135 	.ds 1
                                    136 ;--------------------------------------------------------
                                    137 ; ram data
                                    138 ;--------------------------------------------------------
                                    139 	.area _INITIALIZED
                           000000   140 G$scroll_top_movement_limit$0_0$0==.
      000000                        141 _scroll_top_movement_limit::
      000000                        142 	.ds 1
                           000001   143 G$scroll_bottom_movement_limit$0_0$0==.
      000001                        144 _scroll_bottom_movement_limit::
      000001                        145 	.ds 1
                           000002   146 G$scroll_map$0_0$0==.
      000002                        147 _scroll_map::
      000002                        148 	.ds 2
                           000004   149 G$scroll_cmap$0_0$0==.
      000004                        150 _scroll_cmap::
      000004                        151 	.ds 2
                           000006   152 G$scroll_x$0_0$0==.
      000006                        153 _scroll_x::
      000006                        154 	.ds 2
                           000008   155 G$scroll_y$0_0$0==.
      000008                        156 _scroll_y::
      000008                        157 	.ds 2
                           00000A   158 G$scroll_x_vblank$0_0$0==.
      00000A                        159 _scroll_x_vblank::
      00000A                        160 	.ds 1
                           00000B   161 G$scroll_y_vblank$0_0$0==.
      00000B                        162 _scroll_y_vblank::
      00000B                        163 	.ds 1
                           00000C   164 G$scroll_target$0_0$0==.
      00000C                        165 _scroll_target::
      00000C                        166 	.ds 2
                           00000E   167 G$scroll_offset_x$0_0$0==.
      00000E                        168 _scroll_offset_x::
      00000E                        169 	.ds 1
                           00000F   170 G$scroll_offset_y$0_0$0==.
      00000F                        171 _scroll_offset_y::
      00000F                        172 	.ds 1
                           000010   173 G$pending_h_map$0_0$0==.
      000010                        174 _pending_h_map::
      000010                        175 	.ds 2
                           000012   176 G$pending_w_map$0_0$0==.
      000012                        177 _pending_w_map::
      000012                        178 	.ds 2
                           000014   179 G$last_tile_loaded$0_0$0==.
      000014                        180 _last_tile_loaded::
      000014                        181 	.ds 1
                           000015   182 G$last_bg_pal_loaded$0_0$0==.
      000015                        183 _last_bg_pal_loaded::
      000015                        184 	.ds 1
                           000016   185 G$scroll_h_border$0_0$0==.
      000016                        186 _scroll_h_border::
      000016                        187 	.ds 1
                           000017   188 G$clamp_enabled$0_0$0==.
      000017                        189 _clamp_enabled::
      000017                        190 	.ds 1
                                    191 ;--------------------------------------------------------
                                    192 ; absolute external ram data
                                    193 ;--------------------------------------------------------
                                    194 	.area _DABS (ABS)
                                    195 ;--------------------------------------------------------
                                    196 ; global & static initialisations
                                    197 ;--------------------------------------------------------
                                    198 	.area _HOME
                                    199 	.area _GSINIT
                                    200 	.area _GSFINAL
                                    201 	.area _GSINIT
                                    202 ;--------------------------------------------------------
                                    203 ; Home
                                    204 ;--------------------------------------------------------
                                    205 	.area _HOME
                                    206 	.area _HOME
                                    207 ;--------------------------------------------------------
                                    208 ; code
                                    209 ;--------------------------------------------------------
                                    210 	.area _CODE
                           000000   211 	G$SetTile$0$0	= .
                                    212 	.globl	G$SetTile$0$0
                           000000   213 	C$Scroll.c$66$0_0$193	= .
                                    214 	.globl	C$Scroll.c$66$0_0$193
                                    215 ;C:/ZGB-2023.0/common/src/Scroll.c:66: void SetTile(UINT16 r, UINT8 t) OLDCALL{
                                    216 ;	---------------------------------
                                    217 ; Function SetTile
                                    218 ; ---------------------------------
      000000                        219 _SetTile::
                           000000   220 	C$Scroll.c$88$1_0$193	= .
                                    221 	.globl	C$Scroll.c$88$1_0$193
                                    222 ;C:/ZGB-2023.0/common/src/Scroll.c:88: __endasm;
                                    223 ;bc	= r, hl = t
      000000 F8 02            [12]  224 	ldhl	sp,#2
      000002 4E               [ 8]  225 	ld	c,(hl)
      000003 23               [ 8]  226 	inc	hl
      000004 46               [ 8]  227 	ld	b,(hl)
      000005 F8 04            [12]  228 	ldhl	sp,#4
                                    229 ;while	0xff41 & 02 != 0 (cannot write)
      000007                        230 1$:
      000007 FAr00r00         [16]  231 	ld	a,(#_STAT_REG)
      00000A E6 02            [ 8]  232 	and	a, #0x02
      00000C 20 F9            [12]  233 	jr	NZ,1$
                                    234 ;Write	tile
      00000E 7E               [ 8]  235 	ld	a,(hl)
      00000F 02               [ 8]  236 	ld	(bc),a
      000010 C9               [16]  237 	ret
                           000011   238 	C$Scroll.c$89$1_0$193	= .
                                    239 	.globl	C$Scroll.c$89$1_0$193
                                    240 ;C:/ZGB-2023.0/common/src/Scroll.c:89: }
                           000011   241 	C$Scroll.c$89$1_0$193	= .
                                    242 	.globl	C$Scroll.c$89$1_0$193
                           000011   243 	XG$SetTile$0$0	= .
                                    244 	.globl	XG$SetTile$0$0
      000011 C9               [16]  245 	ret
                           000012   246 	G$UPDATE_TILE$0$0	= .
                                    247 	.globl	G$UPDATE_TILE$0$0
                           000012   248 	C$Scroll.c$91$1_0$195	= .
                                    249 	.globl	C$Scroll.c$91$1_0$195
                                    250 ;C:/ZGB-2023.0/common/src/Scroll.c:91: void UPDATE_TILE(INT16 x, INT16 y, UINT8* t, UINT8* c) {
                                    251 ;	---------------------------------
                                    252 ; Function UPDATE_TILE
                                    253 ; ---------------------------------
      000012                        254 _UPDATE_TILE::
      000012 E8 F6            [16]  255 	add	sp, #-10
      000014 F8 07            [12]  256 	ldhl	sp,	#7
      000016 7B               [ 4]  257 	ld	a, e
      000017 22               [ 8]  258 	ld	(hl+), a
      000018 72               [ 8]  259 	ld	(hl), d
      000019 F8 05            [12]  260 	ldhl	sp,	#5
      00001B 79               [ 4]  261 	ld	a, c
      00001C 22               [ 8]  262 	ld	(hl+), a
                           00001D   263 	C$Scroll.c$100$1_0$195	= .
                                    264 	.globl	C$Scroll.c$100$1_0$195
                                    265 ;C:/ZGB-2023.0/common/src/Scroll.c:100: if((UINT16)x >= scroll_tiles_w || (UINT16)y >= scroll_tiles_h) { //This also checks x < 0 || y < 0
      00001D 78               [ 4]  266 	ld	a, b
      00001E 22               [ 8]  267 	ld	(hl+), a
      00001F 2A               [ 8]  268 	ld	a, (hl+)
      000020 4F               [ 4]  269 	ld	c, a
      000021 46               [ 8]  270 	ld	b, (hl)
      000022 21r04r00         [12]  271 	ld	hl, #_scroll_tiles_w
      000025 79               [ 4]  272 	ld	a, c
      000026 96               [ 8]  273 	sub	a, (hl)
      000027 23               [ 8]  274 	inc	hl
      000028 78               [ 4]  275 	ld	a, b
      000029 9E               [ 8]  276 	sbc	a, (hl)
      00002A 30 0F            [12]  277 	jr	NC, 00109$
      00002C F8 05            [12]  278 	ldhl	sp,	#5
      00002E 2A               [ 8]  279 	ld	a, (hl+)
      00002F 4F               [ 4]  280 	ld	c, a
      000030 46               [ 8]  281 	ld	b, (hl)
      000031 21r06r00         [12]  282 	ld	hl, #_scroll_tiles_h
      000034 79               [ 4]  283 	ld	a, c
      000035 96               [ 8]  284 	sub	a, (hl)
      000036 23               [ 8]  285 	inc	hl
      000037 78               [ 4]  286 	ld	a, b
      000038 9E               [ 8]  287 	sbc	a, (hl)
      000039 38 07            [12]  288 	jr	C, 00110$
      00003B                        289 00109$:
                           00003B   290 	C$Scroll.c$101$2_0$196	= .
                                    291 	.globl	C$Scroll.c$101$2_0$196
                                    292 ;C:/ZGB-2023.0/common/src/Scroll.c:101: replacement = 0;
      00003B F8 00            [12]  293 	ldhl	sp,	#0
      00003D 36 00            [12]  294 	ld	(hl), #0x00
      00003F C3r30r01         [16]  295 	jp	00111$
      000042                        296 00110$:
                           000042   297 	C$Scroll.c$103$2_0$197	= .
                                    298 	.globl	C$Scroll.c$103$2_0$197
                                    299 ;C:/ZGB-2023.0/common/src/Scroll.c:103: replacement = *t;
      000042 F8 0C            [12]  300 	ldhl	sp,	#12
      000044 2A               [ 8]  301 	ld	a, (hl+)
      000045 5F               [ 4]  302 	ld	e, a
      000046 56               [ 8]  303 	ld	d, (hl)
      000047 1A               [ 8]  304 	ld	a, (de)
                           000048   305 	C$Scroll.c$104$2_0$197	= .
                                    306 	.globl	C$Scroll.c$104$2_0$197
                                    307 ;C:/ZGB-2023.0/common/src/Scroll.c:104: type = GetTileReplacement(t, &replacement);
      000048 F8 00            [12]  308 	ldhl	sp,#0
      00004A 77               [ 8]  309 	ld	(hl), a
      00004B 4D               [ 4]  310 	ld	c, l
      00004C 44               [ 4]  311 	ld	b, h
      00004D CDr00r00         [24]  312 	call	_GetTileReplacement
                           000050   313 	C$Scroll.c$105$2_0$197	= .
                                    314 	.globl	C$Scroll.c$105$2_0$197
                                    315 ;C:/ZGB-2023.0/common/src/Scroll.c:105: if(type != 255u) {
      000050 4F               [ 4]  316 	ld	c, a
      000051 3C               [ 4]  317 	inc	a
      000052 CAr30r01         [16]  318 	jp	Z,00111$
                           000055   319 	C$Scroll.c$106$3_0$198	= .
                                    320 	.globl	C$Scroll.c$106$3_0$198
                                    321 ;C:/ZGB-2023.0/common/src/Scroll.c:106: id = SPRITE_UNIQUE_ID(x, y);
      000055 F8 07            [12]  322 	ldhl	sp,	#7
      000057 3A               [ 8]  323 	ld	a, (hl-)
      000058 2B               [ 8]  324 	dec	hl
      000059 5F               [ 4]  325 	ld	e, a
      00005A 46               [ 8]  326 	ld	b, (hl)
      00005B 2E 00            [ 8]  327 	ld	l, #0x00
                                    328 ;	spillPairReg hl
                                    329 ;	spillPairReg hl
      00005D 60               [ 4]  330 	ld	h, b
                                    331 ;	spillPairReg hl
                                    332 ;	spillPairReg hl
      00005E E5               [16]  333 	push	hl
      00005F F8 03            [12]  334 	ldhl	sp,	#3
      000061 73               [ 8]  335 	ld	(hl), e
      000062 E1               [12]  336 	pop	hl
      000063 E5               [16]  337 	push	hl
      000064 7C               [ 4]  338 	ld	a, h
      000065 F8 04            [12]  339 	ldhl	sp,	#4
      000067 77               [ 8]  340 	ld	(hl), a
      000068 E1               [12]  341 	pop	hl
                           000069   342 	C$Scroll.c$107$5_0$200	= .
                                    343 	.globl	C$Scroll.c$107$5_0$200
                                    344 ;C:/ZGB-2023.0/common/src/Scroll.c:107: for(i = 0u; i != sprite_manager_updatables[0]; ++i) {
      000069 F8 09            [12]  345 	ldhl	sp,	#9
      00006B 36 00            [12]  346 	ld	(hl), #0x00
      00006D                        347 00114$:
      00006D 21r00r00         [12]  348 	ld	hl, #_sprite_manager_updatables
      000070 46               [ 8]  349 	ld	b, (hl)
      000071 F8 09            [12]  350 	ldhl	sp,	#9
      000073 7E               [ 8]  351 	ld	a, (hl)
      000074 90               [ 4]  352 	sub	a, b
      000075 3E 01            [ 8]  353 	ld	a, #0x01
      000077 28 01            [12]  354 	jr	Z, 00163$
      000079 AF               [ 4]  355 	xor	a, a
      00007A                        356 00163$:
      00007A 47               [ 4]  357 	ld	b, a
      00007B CB 40            [ 8]  358 	bit	0, b
      00007D 20 41            [12]  359 	jr	NZ, 00104$
                           00007F   360 	C$Scroll.c$108$5_0$200	= .
                                    361 	.globl	C$Scroll.c$108$5_0$200
                                    362 ;C:/ZGB-2023.0/common/src/Scroll.c:108: s = sprite_manager_sprites[sprite_manager_updatables[i + 1]];
      00007F F8 09            [12]  363 	ldhl	sp,	#9
      000081 5E               [ 8]  364 	ld	e, (hl)
      000082 16 00            [ 8]  365 	ld	d, #0x00
      000084 13               [ 8]  366 	inc	de
      000085 21r00r00         [12]  367 	ld	hl, #_sprite_manager_updatables
      000088 19               [ 8]  368 	add	hl, de
      000089 6E               [ 8]  369 	ld	l, (hl)
                                    370 ;	spillPairReg hl
      00008A 26 00            [ 8]  371 	ld	h, #0x00
                                    372 ;	spillPairReg hl
                                    373 ;	spillPairReg hl
      00008C 29               [ 8]  374 	add	hl, hl
      00008D 11r00r00         [12]  375 	ld	de, #_sprite_manager_sprites
      000090 19               [ 8]  376 	add	hl, de
      000091 2A               [ 8]  377 	ld	a,	(hl+)
      000092 66               [ 8]  378 	ld	h, (hl)
                                    379 ;	spillPairReg hl
                                    380 ;	spillPairReg hl
                                    381 ;	spillPairReg hl
                           000093   382 	C$Scroll.c$109$5_0$200	= .
                                    383 	.globl	C$Scroll.c$109$5_0$200
                                    384 ;C:/ZGB-2023.0/common/src/Scroll.c:109: if((s->type == type) && (s->unique_id == id)) {
      000093 6F               [ 4]  385 	ld	l, a
      000094 C6 13            [ 8]  386 	add	a, #0x13
      000096 5F               [ 4]  387 	ld	e, a
      000097 7C               [ 4]  388 	ld	a, h
      000098 CE 00            [ 8]  389 	adc	a, #0x00
      00009A 57               [ 4]  390 	ld	d, a
      00009B 1A               [ 8]  391 	ld	a, (de)
      00009C 5F               [ 4]  392 	ld	e, a
      00009D 79               [ 4]  393 	ld	a, c
      00009E 93               [ 4]  394 	sub	a, e
      00009F 20 1A            [12]  395 	jr	NZ, 00115$
      0000A1 11 19 00         [12]  396 	ld	de, #0x0019
      0000A4 19               [ 8]  397 	add	hl, de
      0000A5 5D               [ 4]  398 	ld	e, l
      0000A6 54               [ 4]  399 	ld	d, h
      0000A7 1A               [ 8]  400 	ld	a, (de)
      0000A8 F8 03            [12]  401 	ldhl	sp,	#3
      0000AA 22               [ 8]  402 	ld	(hl+), a
      0000AB 13               [ 8]  403 	inc	de
      0000AC 1A               [ 8]  404 	ld	a, (de)
      0000AD 77               [ 8]  405 	ld	(hl), a
      0000AE F8 01            [12]  406 	ldhl	sp,	#1
      0000B0 2A               [ 8]  407 	ld	a, (hl+)
      0000B1 23               [ 8]  408 	inc	hl
      0000B2 96               [ 8]  409 	sub	a, (hl)
      0000B3 20 06            [12]  410 	jr	NZ, 00166$
      0000B5 2B               [ 8]  411 	dec	hl
      0000B6 2A               [ 8]  412 	ld	a, (hl+)
      0000B7 23               [ 8]  413 	inc	hl
      0000B8 96               [ 8]  414 	sub	a, (hl)
      0000B9 28 05            [12]  415 	jr	Z, 00104$
      0000BB                        416 00166$:
                           0000BB   417 	C$Scroll.c$110$5_0$200	= .
                                    418 	.globl	C$Scroll.c$110$5_0$200
                                    419 ;C:/ZGB-2023.0/common/src/Scroll.c:110: break;
      0000BB                        420 00115$:
                           0000BB   421 	C$Scroll.c$107$4_0$199	= .
                                    422 	.globl	C$Scroll.c$107$4_0$199
                                    423 ;C:/ZGB-2023.0/common/src/Scroll.c:107: for(i = 0u; i != sprite_manager_updatables[0]; ++i) {
      0000BB F8 09            [12]  424 	ldhl	sp,	#9
      0000BD 34               [12]  425 	inc	(hl)
      0000BE 18 AD            [12]  426 	jr	00114$
      0000C0                        427 00104$:
                           0000C0   428 	C$Scroll.c$114$3_0$198	= .
                                    429 	.globl	C$Scroll.c$114$3_0$198
                                    430 ;C:/ZGB-2023.0/common/src/Scroll.c:114: if(i == sprite_manager_updatables[0]) {
      0000C0 78               [ 4]  431 	ld	a, b
      0000C1 B7               [ 4]  432 	or	a, a
      0000C2 28 6C            [12]  433 	jr	Z, 00111$
                           0000C4   434 	C$Scroll.c$115$4_0$202	= .
                                    435 	.globl	C$Scroll.c$115$4_0$202
                                    436 ;C:/ZGB-2023.0/common/src/Scroll.c:115: PUSH_BANK(spriteDataBanks[type]);
      0000C4 21r00r00         [12]  437 	ld	hl, #_spriteDataBanks
      0000C7 06 00            [ 8]  438 	ld	b, #0x00
      0000C9 09               [ 8]  439 	add	hl, bc
      0000CA 7E               [ 8]  440 	ld	a, (hl)
      0000CB C5               [16]  441 	push	bc
      0000CC F5               [16]  442 	push	af
      0000CD 33               [ 8]  443 	inc	sp
      0000CE CDr00r00         [24]  444 	call	_PushBank
      0000D1 33               [ 8]  445 	inc	sp
      0000D2 C1               [12]  446 	pop	bc
                           0000D3   447 	C$Scroll.c$116$4_0$202	= .
                                    448 	.globl	C$Scroll.c$116$4_0$202
                                    449 ;C:/ZGB-2023.0/common/src/Scroll.c:116: sprite_y = ((y + 1) << 3) - spriteDatas[type]->height;
      0000D3 F8 05            [12]  450 	ldhl	sp,	#5
      0000D5 2A               [ 8]  451 	ld	a, (hl+)
      0000D6 5F               [ 4]  452 	ld	e, a
      0000D7 56               [ 8]  453 	ld	d, (hl)
      0000D8 13               [ 8]  454 	inc	de
      0000D9 CB 23            [ 8]  455 	sla	e
      0000DB CB 12            [ 8]  456 	rl	d
      0000DD CB 23            [ 8]  457 	sla	e
      0000DF CB 12            [ 8]  458 	rl	d
      0000E1 CB 23            [ 8]  459 	sla	e
      0000E3 CB 12            [ 8]  460 	rl	d
      0000E5 F8 01            [12]  461 	ldhl	sp,	#1
      0000E7 7B               [ 4]  462 	ld	a, e
      0000E8 22               [ 8]  463 	ld	(hl+), a
      0000E9 72               [ 8]  464 	ld	(hl), d
      0000EA 69               [ 4]  465 	ld	l, c
                                    466 ;	spillPairReg hl
                                    467 ;	spillPairReg hl
      0000EB 26 00            [ 8]  468 	ld	h, #0x00
                                    469 ;	spillPairReg hl
                                    470 ;	spillPairReg hl
      0000ED 29               [ 8]  471 	add	hl, hl
      0000EE 11r00r00         [12]  472 	ld	de, #_spriteDatas
      0000F1 19               [ 8]  473 	add	hl, de
      0000F2 2A               [ 8]  474 	ld	a, (hl+)
      0000F3 66               [ 8]  475 	ld	h, (hl)
                                    476 ;	spillPairReg hl
      0000F4 6F               [ 4]  477 	ld	l, a
                                    478 ;	spillPairReg hl
                                    479 ;	spillPairReg hl
      0000F5 23               [ 8]  480 	inc	hl
      0000F6 7E               [ 8]  481 	ld	a, (hl)
      0000F7 F8 03            [12]  482 	ldhl	sp,	#3
      0000F9 22               [ 8]  483 	ld	(hl+), a
      0000FA AF               [ 4]  484 	xor	a, a
      0000FB 32               [ 8]  485 	ld	(hl-), a
      0000FC 2B               [ 8]  486 	dec	hl
      0000FD 2B               [ 8]  487 	dec	hl
      0000FE 2A               [ 8]  488 	ld	a, (hl+)
      0000FF 5F               [ 4]  489 	ld	e, a
      000100 2A               [ 8]  490 	ld	a, (hl+)
      000101 57               [ 4]  491 	ld	d, a
      000102 2A               [ 8]  492 	ld	a,	(hl+)
      000103 66               [ 8]  493 	ld	h, (hl)
      000104 6F               [ 4]  494 	ld	l, a
      000105 7B               [ 4]  495 	ld	a, e
      000106 95               [ 4]  496 	sub	a, l
      000107 5F               [ 4]  497 	ld	e, a
      000108 7A               [ 4]  498 	ld	a, d
      000109 9C               [ 4]  499 	sbc	a, h
      00010A 43               [ 4]  500 	ld	b, e
      00010B F8 03            [12]  501 	ldhl	sp,	#3
      00010D 70               [ 8]  502 	ld	(hl), b
      00010E 23               [ 8]  503 	inc	hl
      00010F 77               [ 8]  504 	ld	(hl), a
                           000110   505 	C$Scroll.c$117$4_0$202	= .
                                    506 	.globl	C$Scroll.c$117$4_0$202
                                    507 ;C:/ZGB-2023.0/common/src/Scroll.c:117: POP_BANK;
      000110 C5               [16]  508 	push	bc
      000111 CDr00r00         [24]  509 	call	_PopBank
      000114 C1               [12]  510 	pop	bc
                           000115   511 	C$Scroll.c$118$4_0$202	= .
                                    512 	.globl	C$Scroll.c$118$4_0$202
                                    513 ;C:/ZGB-2023.0/common/src/Scroll.c:118: s = SpriteManagerAdd(type, x << 3, sprite_y);
      000115 F8 07            [12]  514 	ldhl	sp,#7
      000117 2A               [ 8]  515 	ld	a, (hl+)
      000118 5F               [ 4]  516 	ld	e, a
      000119 56               [ 8]  517 	ld	d, (hl)
      00011A CB 23            [ 8]  518 	sla	e
      00011C CB 12            [ 8]  519 	rl	d
      00011E CB 23            [ 8]  520 	sla	e
      000120 CB 12            [ 8]  521 	rl	d
      000122 CB 23            [ 8]  522 	sla	e
      000124 CB 12            [ 8]  523 	rl	d
      000126 F8 03            [12]  524 	ldhl	sp,	#3
      000128 2A               [ 8]  525 	ld	a, (hl+)
      000129 66               [ 8]  526 	ld	h, (hl)
                                    527 ;	spillPairReg hl
                                    528 ;	spillPairReg hl
      00012A 6F               [ 4]  529 	ld	l, a
                                    530 ;	spillPairReg hl
                                    531 ;	spillPairReg hl
      00012B E5               [16]  532 	push	hl
      00012C 79               [ 4]  533 	ld	a, c
      00012D CDr00r00         [24]  534 	call	_SpriteManagerAdd
      000130                        535 00111$:
                           000130   536 	C$Scroll.c$123$1_0$195	= .
                                    537 	.globl	C$Scroll.c$123$1_0$195
                                    538 ;C:/ZGB-2023.0/common/src/Scroll.c:123: id = 0x9800 + (0x1F & (x + scroll_offset_x)) + ((0x1F & (y + scroll_offset_y)) << 5);
      000130 21r0Er00         [12]  539 	ld	hl, #_scroll_offset_x
      000133 4E               [ 8]  540 	ld	c, (hl)
      000134 06 00            [ 8]  541 	ld	b, #0x00
      000136 F8 07            [12]  542 	ldhl	sp,	#7
      000138 2A               [ 8]  543 	ld	a,	(hl+)
      000139 66               [ 8]  544 	ld	h, (hl)
      00013A 6F               [ 4]  545 	ld	l, a
      00013B 09               [ 8]  546 	add	hl, bc
      00013C 7D               [ 4]  547 	ld	a, l
      00013D E6 1F            [ 8]  548 	and	a, #0x1f
      00013F 26 00            [ 8]  549 	ld	h, #0x00
                                    550 ;	spillPairReg hl
                                    551 ;	spillPairReg hl
                                    552 ;	spillPairReg hl
                                    553 ;	spillPairReg hl
      000141 4F               [ 4]  554 	ld	c, a
      000142 7C               [ 4]  555 	ld	a, h
      000143 C6 98            [ 8]  556 	add	a, #0x98
      000145 47               [ 4]  557 	ld	b, a
      000146 21r0Fr00         [12]  558 	ld	hl, #_scroll_offset_y
      000149 5E               [ 8]  559 	ld	e, (hl)
      00014A 16 00            [ 8]  560 	ld	d, #0x00
      00014C F8 05            [12]  561 	ldhl	sp,	#5
      00014E 2A               [ 8]  562 	ld	a,	(hl+)
      00014F 66               [ 8]  563 	ld	h, (hl)
      000150 6F               [ 4]  564 	ld	l, a
      000151 19               [ 8]  565 	add	hl, de
      000152 7D               [ 4]  566 	ld	a, l
      000153 E6 1F            [ 8]  567 	and	a, #0x1f
      000155 26 00            [ 8]  568 	ld	h, #0x00
                                    569 ;	spillPairReg hl
                                    570 ;	spillPairReg hl
      000157 6F               [ 4]  571 	ld	l, a
      000158 29               [ 8]  572 	add	hl, hl
      000159 29               [ 8]  573 	add	hl, hl
      00015A 29               [ 8]  574 	add	hl, hl
      00015B 29               [ 8]  575 	add	hl, hl
      00015C 29               [ 8]  576 	add	hl, hl
      00015D 09               [ 8]  577 	add	hl, bc
      00015E 4D               [ 4]  578 	ld	c, l
      00015F 44               [ 4]  579 	ld	b, h
                           000160   580 	C$Scroll.c$124$1_0$195	= .
                                    581 	.globl	C$Scroll.c$124$1_0$195
                                    582 ;C:/ZGB-2023.0/common/src/Scroll.c:124: SetTile(id, replacement);
      000160 F8 00            [12]  583 	ldhl	sp,	#0
      000162 7E               [ 8]  584 	ld	a, (hl)
      000163 F5               [16]  585 	push	af
      000164 33               [ 8]  586 	inc	sp
      000165 C5               [16]  587 	push	bc
      000166 CDr00r00         [24]  588 	call	_SetTile
                           000169   589 	C$Scroll.c$137$1_0$195	= .
                                    590 	.globl	C$Scroll.c$137$1_0$195
                                    591 ;C:/ZGB-2023.0/common/src/Scroll.c:137: }
      000169 E8 0D            [16]  592 	add	sp, #13
      00016B E1               [12]  593 	pop	hl
      00016C E8 04            [16]  594 	add	sp, #4
      00016E E9               [ 4]  595 	jp	(hl)
                           00016F   596 	G$ScrollSetTiles$0$0	= .
                                    597 	.globl	G$ScrollSetTiles$0$0
                           00016F   598 	C$Scroll.c$140$1_0$204	= .
                                    599 	.globl	C$Scroll.c$140$1_0$204
                                    600 ;C:/ZGB-2023.0/common/src/Scroll.c:140: UINT16 ScrollSetTiles(UINT8 first_tile, UINT8 tiles_bank, const struct TilesInfo* tiles) {
                                    601 ;	---------------------------------
                                    602 ; Function ScrollSetTiles
                                    603 ; ---------------------------------
      00016F                        604 _ScrollSetTiles::
      00016F E8 F9            [16]  605 	add	sp, #-7
      000171 F8 06            [12]  606 	ldhl	sp,	#6
                           000173   607 	C$Scroll.c$145$2_0$204	= .
                                    608 	.globl	C$Scroll.c$145$2_0$204
                                    609 ;C:/ZGB-2023.0/common/src/Scroll.c:145: UINT16 offset = first_tile;
      000173 77               [ 8]  610 	ld	(hl), a
      000174 F8 00            [12]  611 	ldhl	sp,	#0
      000176 22               [ 8]  612 	ld	(hl+), a
      000177 36 00            [12]  613 	ld	(hl), #0x00
                           000179   614 	C$Scroll.c$150$1_0$204	= .
                                    615 	.globl	C$Scroll.c$150$1_0$204
                                    616 ;C:/ZGB-2023.0/common/src/Scroll.c:150: tiles_0 = tiles;
      000179 F8 09            [12]  617 	ldhl	sp,	#9
      00017B 2A               [ 8]  618 	ld	a, (hl+)
      00017C 4F               [ 4]  619 	ld	c, a
      00017D 46               [ 8]  620 	ld	b, (hl)
                           00017E   621 	C$Scroll.c$147$1_0$204	= .
                                    622 	.globl	C$Scroll.c$147$1_0$204
                                    623 ;C:/ZGB-2023.0/common/src/Scroll.c:147: if(first_tile == 0)
      00017E F8 06            [12]  624 	ldhl	sp,	#6
      000180 7E               [ 8]  625 	ld	a, (hl)
      000181 B7               [ 4]  626 	or	a, a
      000182 20 0A            [12]  627 	jr	NZ, 00102$
                           000184   628 	C$Scroll.c$149$2_0$205	= .
                                    629 	.globl	C$Scroll.c$149$2_0$205
                                    630 ;C:/ZGB-2023.0/common/src/Scroll.c:149: tiles_bank_0 = tiles_bank;
      000184 21r15r03         [12]  631 	ld	hl, #_tiles_bank_0
      000187 73               [ 8]  632 	ld	(hl), e
                           000188   633 	C$Scroll.c$150$2_0$205	= .
                                    634 	.globl	C$Scroll.c$150$2_0$205
                                    635 ;C:/ZGB-2023.0/common/src/Scroll.c:150: tiles_0 = tiles;
      000188 21r16r03         [12]  636 	ld	hl, #_tiles_0
      00018B 79               [ 4]  637 	ld	a, c
      00018C 22               [ 8]  638 	ld	(hl+), a
      00018D 70               [ 8]  639 	ld	(hl), b
      00018E                        640 00102$:
                           00018E   641 	C$Scroll.c$153$1_0$204	= .
                                    642 	.globl	C$Scroll.c$153$1_0$204
                                    643 ;C:/ZGB-2023.0/common/src/Scroll.c:153: PUSH_BANK(tiles_bank);
      00018E C5               [16]  644 	push	bc
      00018F 7B               [ 4]  645 	ld	a, e
      000190 F5               [16]  646 	push	af
      000191 33               [ 8]  647 	inc	sp
      000192 CDr00r00         [24]  648 	call	_PushBank
      000195 33               [ 8]  649 	inc	sp
      000196 C1               [12]  650 	pop	bc
                           000197   651 	C$Scroll.c$154$1_0$204	= .
                                    652 	.globl	C$Scroll.c$154$1_0$204
                                    653 ;C:/ZGB-2023.0/common/src/Scroll.c:154: n_tiles = tiles->num_frames;
      000197 0A               [ 8]  654 	ld	a, (bc)
      000198 F8 05            [12]  655 	ldhl	sp,	#5
      00019A 77               [ 8]  656 	ld	(hl), a
                           00019B   657 	C$Scroll.c$155$1_0$204	= .
                                    658 	.globl	C$Scroll.c$155$1_0$204
                                    659 ;C:/ZGB-2023.0/common/src/Scroll.c:155: palette_entries = tiles->color_data;
      00019B 21 06 00         [12]  660 	ld	hl, #0x0006
      00019E 09               [ 8]  661 	add	hl, bc
      00019F 5D               [ 4]  662 	ld	e, l
      0001A0 54               [ 4]  663 	ld	d, h
      0001A1 1A               [ 8]  664 	ld	a, (de)
      0001A2 F8 02            [12]  665 	ldhl	sp,	#2
      0001A4 22               [ 8]  666 	ld	(hl+), a
      0001A5 13               [ 8]  667 	inc	de
      0001A6 1A               [ 8]  668 	ld	a, (de)
      0001A7 77               [ 8]  669 	ld	(hl), a
                           0001A8   670 	C$Scroll.c$157$1_0$204	= .
                                    671 	.globl	C$Scroll.c$157$1_0$204
                                    672 ;C:/ZGB-2023.0/common/src/Scroll.c:157: set_bkg_data(first_tile, n_tiles, tiles->data);
      0001A8 69               [ 4]  673 	ld	l, c
      0001A9 60               [ 4]  674 	ld	h, b
      0001AA 23               [ 8]  675 	inc	hl
      0001AB 2A               [ 8]  676 	ld	a, (hl+)
      0001AC 4F               [ 4]  677 	ld	c, a
      0001AD 46               [ 8]  678 	ld	b, (hl)
      0001AE C5               [16]  679 	push	bc
      0001AF F8 07            [12]  680 	ldhl	sp,	#7
      0001B1 2A               [ 8]  681 	ld	a, (hl+)
      0001B2 57               [ 4]  682 	ld	d, a
      0001B3 5E               [ 8]  683 	ld	e, (hl)
      0001B4 D5               [16]  684 	push	de
      0001B5 CDr00r00         [24]  685 	call	_set_bkg_data
      0001B8 E8 04            [16]  686 	add	sp, #4
                           0001BA   687 	C$Scroll.c$158$1_0$204	= .
                                    688 	.globl	C$Scroll.c$158$1_0$204
                                    689 ;C:/ZGB-2023.0/common/src/Scroll.c:158: last_tile_loaded = first_tile + n_tiles;
      0001BA F8 06            [12]  690 	ldhl	sp,	#6
      0001BC 3A               [ 8]  691 	ld	a, (hl-)
      0001BD 86               [ 8]  692 	add	a, (hl)
      0001BE EAr14r00         [16]  693 	ld	(#_last_tile_loaded),a
                           0001C1   694 	C$Scroll.c$159$3_0$207	= .
                                    695 	.globl	C$Scroll.c$159$3_0$207
                                    696 ;C:/ZGB-2023.0/common/src/Scroll.c:159: for(i = first_tile; i != last_tile_loaded; ++i) {
      0001C1 F8 06            [12]  697 	ldhl	sp,	#6
      0001C3 4E               [ 8]  698 	ld	c, (hl)
      0001C4                        699 00105$:
      0001C4 FAr14r00         [16]  700 	ld	a, (#_last_tile_loaded)
      0001C7 91               [ 4]  701 	sub	a, c
      0001C8 28 39            [12]  702 	jr	Z, 00103$
                           0001CA   703 	C$Scroll.c$160$3_0$207	= .
                                    704 	.globl	C$Scroll.c$160$3_0$207
                                    705 ;C:/ZGB-2023.0/common/src/Scroll.c:160: scroll_tile_info[i] = palette_entries ? palette_entries[i - first_tile] : 0;
      0001CA 11r08r02         [12]  706 	ld	de, #_scroll_tile_info
      0001CD 69               [ 4]  707 	ld	l, c
      0001CE 26 00            [ 8]  708 	ld	h, #0x00
      0001D0 19               [ 8]  709 	add	hl, de
      0001D1 E5               [16]  710 	push	hl
      0001D2 7D               [ 4]  711 	ld	a, l
      0001D3 F8 06            [12]  712 	ldhl	sp,	#6
      0001D5 77               [ 8]  713 	ld	(hl), a
      0001D6 E1               [12]  714 	pop	hl
      0001D7 7C               [ 4]  715 	ld	a, h
      0001D8 F8 05            [12]  716 	ldhl	sp,	#5
      0001DA 32               [ 8]  717 	ld	(hl-), a
      0001DB 2B               [ 8]  718 	dec	hl
      0001DC 3A               [ 8]  719 	ld	a, (hl-)
      0001DD B6               [ 8]  720 	or	a, (hl)
      0001DE 28 18            [12]  721 	jr	Z, 00109$
      0001E0 79               [ 4]  722 	ld	a, c
      0001E1 06 00            [ 8]  723 	ld	b, #0x00
      0001E3 F8 06            [12]  724 	ldhl	sp,	#6
      0001E5 5E               [ 8]  725 	ld	e, (hl)
      0001E6 16 00            [ 8]  726 	ld	d, #0x00
      0001E8 93               [ 4]  727 	sub	a, e
      0001E9 5F               [ 4]  728 	ld	e, a
      0001EA 78               [ 4]  729 	ld	a, b
      0001EB 9A               [ 4]  730 	sbc	a, d
      0001EC 57               [ 4]  731 	ld	d, a
      0001ED F8 02            [12]  732 	ldhl	sp,	#2
      0001EF 2A               [ 8]  733 	ld	a,	(hl+)
      0001F0 66               [ 8]  734 	ld	h, (hl)
      0001F1 6F               [ 4]  735 	ld	l, a
      0001F2 19               [ 8]  736 	add	hl, de
      0001F3 5D               [ 4]  737 	ld	e, l
      0001F4 54               [ 4]  738 	ld	d, h
      0001F5 1A               [ 8]  739 	ld	a, (de)
      0001F6 18 01            [12]  740 	jr	00110$
      0001F8                        741 00109$:
      0001F8 AF               [ 4]  742 	xor	a, a
      0001F9                        743 00110$:
      0001F9 47               [ 4]  744 	ld	b, a
      0001FA F8 04            [12]  745 	ldhl	sp,	#4
      0001FC 2A               [ 8]  746 	ld	a,	(hl+)
      0001FD 66               [ 8]  747 	ld	h, (hl)
      0001FE 6F               [ 4]  748 	ld	l, a
      0001FF 70               [ 8]  749 	ld	(hl), b
                           000200   750 	C$Scroll.c$159$2_0$206	= .
                                    751 	.globl	C$Scroll.c$159$2_0$206
                                    752 ;C:/ZGB-2023.0/common/src/Scroll.c:159: for(i = first_tile; i != last_tile_loaded; ++i) {
      000200 0C               [ 4]  753 	inc	c
      000201 18 C1            [12]  754 	jr	00105$
      000203                        755 00103$:
                           000203   756 	C$Scroll.c$179$1_0$204	= .
                                    757 	.globl	C$Scroll.c$179$1_0$204
                                    758 ;C:/ZGB-2023.0/common/src/Scroll.c:179: POP_BANK;
      000203 CDr00r00         [24]  759 	call	_PopBank
                           000206   760 	C$Scroll.c$181$1_0$204	= .
                                    761 	.globl	C$Scroll.c$181$1_0$204
                                    762 ;C:/ZGB-2023.0/common/src/Scroll.c:181: return offset;
      000206 C1               [12]  763 	pop	bc
      000207 C5               [16]  764 	push	bc
                           000208   765 	C$Scroll.c$182$1_0$204	= .
                                    766 	.globl	C$Scroll.c$182$1_0$204
                                    767 ;C:/ZGB-2023.0/common/src/Scroll.c:182: }
      000208 E8 07            [16]  768 	add	sp, #7
      00020A E1               [12]  769 	pop	hl
      00020B F1               [12]  770 	pop	af
      00020C E9               [ 4]  771 	jp	(hl)
                           00020D   772 	G$UpdateMapTile$0$0	= .
                                    773 	.globl	G$UpdateMapTile$0$0
                           00020D   774 	C$Scroll.c$184$1_0$209	= .
                                    775 	.globl	C$Scroll.c$184$1_0$209
                                    776 ;C:/ZGB-2023.0/common/src/Scroll.c:184: void UpdateMapTile(UINT8 bg_or_win, UINT8 x, UINT8 y, UINT16 map_offset, UINT8 data, UINT8* attr)
                                    777 ;	---------------------------------
                                    778 ; Function UpdateMapTile
                                    779 ; ---------------------------------
      00020D                        780 _UpdateMapTile::
      00020D 4F               [ 4]  781 	ld	c, a
      00020E 43               [ 4]  782 	ld	b, e
                           00020F   783 	C$Scroll.c$187$1_1$210	= .
                                    784 	.globl	C$Scroll.c$187$1_1$210
                                    785 ;C:/ZGB-2023.0/common/src/Scroll.c:187: UINT8* offsetts = &map_offset;
                           00020F   786 	C$Scroll.c$188$1_1$210	= .
                                    787 	.globl	C$Scroll.c$188$1_1$210
                                    788 ;C:/ZGB-2023.0/common/src/Scroll.c:188: data += offsetts[0];
      00020F F8 03            [12]  789 	ldhl	sp,	#3
      000211 2A               [ 8]  790 	ld	a, (hl+)
      000212 23               [ 8]  791 	inc	hl
      000213 86               [ 8]  792 	add	a, (hl)
      000214 77               [ 8]  793 	ld	(hl), a
                           000215   794 	C$Scroll.c$189$1_1$210	= .
                                    795 	.globl	C$Scroll.c$189$1_1$210
                                    796 ;C:/ZGB-2023.0/common/src/Scroll.c:189: if(bg_or_win == 0)
      000215 79               [ 4]  797 	ld	a, c
      000216 B7               [ 4]  798 	or	a, a
      000217 20 11            [12]  799 	jr	NZ, 00102$
                           000219   800 	C$Scroll.c$190$1_1$210	= .
                                    801 	.globl	C$Scroll.c$190$1_1$210
                                    802 ;C:/ZGB-2023.0/common/src/Scroll.c:190: set_bkg_tile_xy(x, y, data);
      000219 7E               [ 8]  803 	ld	a, (hl)
      00021A F5               [16]  804 	push	af
      00021B 33               [ 8]  805 	inc	sp
      00021C F8 03            [12]  806 	ldhl	sp,	#3
      00021E 7E               [ 8]  807 	ld	a, (hl)
      00021F F5               [16]  808 	push	af
      000220 33               [ 8]  809 	inc	sp
      000221 C5               [16]  810 	push	bc
      000222 33               [ 8]  811 	inc	sp
      000223 CDr00r00         [24]  812 	call	_set_bkg_tile_xy
      000226 E8 03            [16]  813 	add	sp, #3
      000228 18 11            [12]  814 	jr	00104$
      00022A                        815 00102$:
                           00022A   816 	C$Scroll.c$192$1_1$210	= .
                                    817 	.globl	C$Scroll.c$192$1_1$210
                                    818 ;C:/ZGB-2023.0/common/src/Scroll.c:192: set_win_tile_xy(x, y, data);
      00022A F8 05            [12]  819 	ldhl	sp,	#5
      00022C 7E               [ 8]  820 	ld	a, (hl)
      00022D F5               [16]  821 	push	af
      00022E 33               [ 8]  822 	inc	sp
      00022F F8 03            [12]  823 	ldhl	sp,	#3
      000231 7E               [ 8]  824 	ld	a, (hl)
      000232 F5               [16]  825 	push	af
      000233 33               [ 8]  826 	inc	sp
      000234 C5               [16]  827 	push	bc
      000235 33               [ 8]  828 	inc	sp
      000236 CDr00r00         [24]  829 	call	_set_win_tile_xy
      000239 E8 03            [16]  830 	add	sp, #3
      00023B                        831 00104$:
                           00023B   832 	C$Scroll.c$208$1_1$209	= .
                                    833 	.globl	C$Scroll.c$208$1_1$209
                                    834 ;C:/ZGB-2023.0/common/src/Scroll.c:208: }
      00023B E1               [12]  835 	pop	hl
      00023C E8 06            [16]  836 	add	sp, #6
      00023E E9               [ 4]  837 	jp	(hl)
                           00023F   838 	G$LoadMap$0$0	= .
                                    839 	.globl	G$LoadMap$0$0
                           00023F   840 	C$Scroll.c$210$1_1$212	= .
                                    841 	.globl	C$Scroll.c$210$1_1$212
                                    842 ;C:/ZGB-2023.0/common/src/Scroll.c:210: UINT16 LoadMap(UINT8 bg_or_win, UINT8 x, UINT8 y, UINT8 map_bank, struct MapInfo* map) {
                                    843 ;	---------------------------------
                                    844 ; Function LoadMap
                                    845 ; ---------------------------------
      00023F                        846 _LoadMap::
      00023F E8 EF            [16]  847 	add	sp, #-17
      000241 F8 0A            [12]  848 	ldhl	sp,	#10
      000243 32               [ 8]  849 	ld	(hl-), a
      000244 73               [ 8]  850 	ld	(hl), e
                           000245   851 	C$Scroll.c$211$1_0$212	= .
                                    852 	.globl	C$Scroll.c$211$1_0$212
                                    853 ;C:/ZGB-2023.0/common/src/Scroll.c:211: PUSH_BANK(map_bank);
      000245 F8 14            [12]  854 	ldhl	sp,	#20
      000247 7E               [ 8]  855 	ld	a, (hl)
      000248 F5               [16]  856 	push	af
      000249 33               [ 8]  857 	inc	sp
      00024A CDr00r00         [24]  858 	call	_PushBank
      00024D 33               [ 8]  859 	inc	sp
                           00024E   860 	C$Scroll.c$214$1_1$213	= .
                                    861 	.globl	C$Scroll.c$214$1_1$213
                                    862 ;C:/ZGB-2023.0/common/src/Scroll.c:214: UINT8 load_tiles = tiles_bank_0 != map->tiles_bank || tiles_0 != map->tiles; //If the tile set is the same as the one used for the scroll or the bg (which is stored in tiles_bank_0 and tiles0) then do not load the tiles again
      00024E F8 15            [12]  863 	ldhl	sp,	#21
      000250 2A               [ 8]  864 	ld	a, (hl+)
      000251 4F               [ 4]  865 	ld	c, a
      000252 46               [ 8]  866 	ld	b, (hl)
      000253 21 06 00         [12]  867 	ld	hl, #0x0006
      000256 09               [ 8]  868 	add	hl, bc
      000257 7E               [ 8]  869 	ld	a, (hl)
      000258 F8 0E            [12]  870 	ldhl	sp,	#14
      00025A 77               [ 8]  871 	ld	(hl), a
      00025B 21 07 00         [12]  872 	ld	hl, #0x0007
      00025E 09               [ 8]  873 	add	hl, bc
      00025F E5               [16]  874 	push	hl
      000260 7D               [ 4]  875 	ld	a, l
      000261 F8 11            [12]  876 	ldhl	sp,	#17
      000263 77               [ 8]  877 	ld	(hl), a
      000264 E1               [12]  878 	pop	hl
      000265 7C               [ 4]  879 	ld	a, h
      000266 F8 10            [12]  880 	ldhl	sp,	#16
      000268 77               [ 8]  881 	ld	(hl), a
      000269 FAr15r03         [16]  882 	ld	a, (#_tiles_bank_0)
      00026C F8 0E            [12]  883 	ldhl	sp,	#14
      00026E 96               [ 8]  884 	sub	a, (hl)
      00026F 20 1F            [12]  885 	jr	NZ, 00116$
      000271 F8 0F            [12]  886 	ldhl	sp,#15
      000273 2A               [ 8]  887 	ld	a, (hl+)
      000274 5F               [ 4]  888 	ld	e, a
      000275 56               [ 8]  889 	ld	d, (hl)
      000276 1A               [ 8]  890 	ld	a, (de)
      000277 F8 0C            [12]  891 	ldhl	sp,	#12
      000279 22               [ 8]  892 	ld	(hl+), a
      00027A 13               [ 8]  893 	inc	de
      00027B 1A               [ 8]  894 	ld	a, (de)
      00027C 77               [ 8]  895 	ld	(hl), a
      00027D FAr16r03         [16]  896 	ld	a, (#_tiles_0)
      000280 F8 0C            [12]  897 	ldhl	sp,	#12
      000282 96               [ 8]  898 	sub	a, (hl)
      000283 20 0B            [12]  899 	jr	NZ, 00116$
      000285 FAr17r03         [16]  900 	ld	a, (#_tiles_0 + 1)
      000288 F8 0D            [12]  901 	ldhl	sp,	#13
      00028A 96               [ 8]  902 	sub	a, (hl)
      00028B 20 03            [12]  903 	jr	NZ, 00116$
      00028D AF               [ 4]  904 	xor	a, a
      00028E 18 02            [12]  905 	jr	00117$
      000290                        906 00116$:
      000290 3E 01            [ 8]  907 	ld	a, #0x01
      000292                        908 00117$:
                           000292   909 	C$Scroll.c$215$1_1$213	= .
                                    910 	.globl	C$Scroll.c$215$1_1$213
                                    911 ;C:/ZGB-2023.0/common/src/Scroll.c:215: UINT16 map_offset = 0;
      000292 F8 02            [12]  912 	ldhl	sp,	#2
      000294 36 00            [12]  913 	ld	(hl), #0x00
      000296 23               [ 8]  914 	inc	hl
      000297 36 00            [12]  915 	ld	(hl), #0x00
                           000299   916 	C$Scroll.c$216$1_1$213	= .
                                    917 	.globl	C$Scroll.c$216$1_1$213
                                    918 ;C:/ZGB-2023.0/common/src/Scroll.c:216: if(load_tiles)
      000299 B7               [ 4]  919 	or	a, a
      00029A 28 1B            [12]  920 	jr	Z, 00102$
                           00029C   921 	C$Scroll.c$217$1_1$213	= .
                                    922 	.globl	C$Scroll.c$217$1_1$213
                                    923 ;C:/ZGB-2023.0/common/src/Scroll.c:217: map_offset = ScrollSetTiles(last_tile_loaded, map->tiles_bank, map->tiles);
      00029C F8 0F            [12]  924 	ldhl	sp,#15
      00029E 2A               [ 8]  925 	ld	a, (hl+)
      00029F 5F               [ 4]  926 	ld	e, a
      0002A0 56               [ 8]  927 	ld	d, (hl)
      0002A1 1A               [ 8]  928 	ld	a, (de)
      0002A2 6F               [ 4]  929 	ld	l, a
                                    930 ;	spillPairReg hl
                                    931 ;	spillPairReg hl
      0002A3 13               [ 8]  932 	inc	de
      0002A4 1A               [ 8]  933 	ld	a, (de)
      0002A5 67               [ 4]  934 	ld	h, a
                                    935 ;	spillPairReg hl
                                    936 ;	spillPairReg hl
      0002A6 C5               [16]  937 	push	bc
      0002A7 E5               [16]  938 	push	hl
      0002A8 F8 12            [12]  939 	ldhl	sp,	#18
      0002AA 5E               [ 8]  940 	ld	e, (hl)
      0002AB FAr14r00         [16]  941 	ld	a, (#_last_tile_loaded)
      0002AE CDr6Fr01         [24]  942 	call	_ScrollSetTiles
      0002B1 F8 04            [12]  943 	ldhl	sp,	#4
      0002B3 79               [ 4]  944 	ld	a, c
      0002B4 22               [ 8]  945 	ld	(hl+), a
      0002B5 70               [ 8]  946 	ld	(hl), b
      0002B6 C1               [12]  947 	pop	bc
      0002B7                        948 00102$:
                           0002B7   949 	C$Scroll.c$220$1_2$214	= .
                                    950 	.globl	C$Scroll.c$220$1_2$214
                                    951 ;C:/ZGB-2023.0/common/src/Scroll.c:220: UINT8* data = map->data;
      0002B7 59               [ 4]  952 	ld	e, c
      0002B8 50               [ 4]  953 	ld	d, b
      0002B9 1A               [ 8]  954 	ld	a, (de)
      0002BA F8 00            [12]  955 	ldhl	sp,	#0
      0002BC 22               [ 8]  956 	ld	(hl+), a
      0002BD 13               [ 8]  957 	inc	de
      0002BE 1A               [ 8]  958 	ld	a, (de)
      0002BF 77               [ 8]  959 	ld	(hl), a
                           0002C0   960 	C$Scroll.c$221$1_2$214	= .
                                    961 	.globl	C$Scroll.c$221$1_2$214
                                    962 ;C:/ZGB-2023.0/common/src/Scroll.c:221: UINT8* attrs = map->attributes;
      0002C0 21 04 00         [12]  963 	ld	hl, #0x0004
      0002C3 09               [ 8]  964 	add	hl, bc
      0002C4 5D               [ 4]  965 	ld	e, l
      0002C5 54               [ 4]  966 	ld	d, h
      0002C6 1A               [ 8]  967 	ld	a, (de)
      0002C7 F8 0C            [12]  968 	ldhl	sp,	#12
      0002C9 22               [ 8]  969 	ld	(hl+), a
      0002CA 13               [ 8]  970 	inc	de
      0002CB 1A               [ 8]  971 	ld	a, (de)
      0002CC 77               [ 8]  972 	ld	(hl), a
                           0002CD   973 	C$Scroll.c$222$4_2$217	= .
                                    974 	.globl	C$Scroll.c$222$4_2$217
                                    975 ;C:/ZGB-2023.0/common/src/Scroll.c:222: for(UINT8 j = 0; j < map->height; ++j) {
      0002CD 21 02 00         [12]  976 	ld	hl, #0x0002
      0002D0 09               [ 8]  977 	add	hl, bc
      0002D1 E5               [16]  978 	push	hl
      0002D2 7D               [ 4]  979 	ld	a, l
      0002D3 F8 06            [12]  980 	ldhl	sp,	#6
      0002D5 77               [ 8]  981 	ld	(hl), a
      0002D6 E1               [12]  982 	pop	hl
      0002D7 7C               [ 4]  983 	ld	a, h
      0002D8 F8 05            [12]  984 	ldhl	sp,	#5
      0002DA 22               [ 8]  985 	ld	(hl+), a
      0002DB 03               [ 8]  986 	inc	bc
      0002DC 03               [ 8]  987 	inc	bc
      0002DD 03               [ 8]  988 	inc	bc
      0002DE 79               [ 4]  989 	ld	a, c
      0002DF 22               [ 8]  990 	ld	(hl+), a
      0002E0 70               [ 8]  991 	ld	(hl), b
      0002E1 F8 0B            [12]  992 	ldhl	sp,	#11
      0002E3 36 00            [12]  993 	ld	(hl), #0x00
      0002E5                        994 00111$:
      0002E5 F8 06            [12]  995 	ldhl	sp,#6
      0002E7 2A               [ 8]  996 	ld	a, (hl+)
      0002E8 5F               [ 4]  997 	ld	e, a
      0002E9 56               [ 8]  998 	ld	d, (hl)
      0002EA 1A               [ 8]  999 	ld	a, (de)
      0002EB 4F               [ 4] 1000 	ld	c, a
      0002EC F8 0B            [12] 1001 	ldhl	sp,	#11
      0002EE 7E               [ 8] 1002 	ld	a, (hl)
      0002EF 91               [ 4] 1003 	sub	a, c
      0002F0 30 74            [12] 1004 	jr	NC, 00106$
                           0002F2  1005 	C$Scroll.c$223$5_2$218	= .
                                   1006 	.globl	C$Scroll.c$223$5_2$218
                                   1007 ;C:/ZGB-2023.0/common/src/Scroll.c:223: for(UINT8 i = 0; i < map->width; ++i) {
      0002F2 F8 13            [12] 1008 	ldhl	sp,	#19
      0002F4 7E               [ 8] 1009 	ld	a, (hl)
      0002F5 F8 0B            [12] 1010 	ldhl	sp,	#11
      0002F7 86               [ 8] 1011 	add	a, (hl)
      0002F8 F8 08            [12] 1012 	ldhl	sp,	#8
      0002FA 77               [ 8] 1013 	ld	(hl), a
      0002FB F8 00            [12] 1014 	ldhl	sp,	#0
      0002FD 7E               [ 8] 1015 	ld	a, (hl)
      0002FE F8 0E            [12] 1016 	ldhl	sp,	#14
      000300 77               [ 8] 1017 	ld	(hl), a
      000301 F8 01            [12] 1018 	ldhl	sp,	#1
      000303 7E               [ 8] 1019 	ld	a, (hl)
      000304 F8 0F            [12] 1020 	ldhl	sp,	#15
      000306 22               [ 8] 1021 	ld	(hl+), a
      000307 36 00            [12] 1022 	ld	(hl), #0x00
      000309                       1023 00108$:
      000309 F8 04            [12] 1024 	ldhl	sp,#4
      00030B 2A               [ 8] 1025 	ld	a, (hl+)
      00030C 5F               [ 4] 1026 	ld	e, a
      00030D 56               [ 8] 1027 	ld	d, (hl)
      00030E 1A               [ 8] 1028 	ld	a, (de)
      00030F 4F               [ 4] 1029 	ld	c, a
      000310 F8 10            [12] 1030 	ldhl	sp,	#16
      000312 7E               [ 8] 1031 	ld	a, (hl)
      000313 91               [ 4] 1032 	sub	a, c
      000314 30 3E            [12] 1033 	jr	NC, 00126$
                           000316  1034 	C$Scroll.c$224$5_2$218	= .
                                   1035 	.globl	C$Scroll.c$224$5_2$218
                                   1036 ;C:/ZGB-2023.0/common/src/Scroll.c:224: UpdateMapTile(bg_or_win, x + i, y + j, map_offset, *data, attrs);
      000316 2B               [ 8] 1037 	dec	hl
      000317 2B               [ 8] 1038 	dec	hl
      000318 2A               [ 8] 1039 	ld	a, (hl+)
      000319 5F               [ 4] 1040 	ld	e, a
      00031A 56               [ 8] 1041 	ld	d, (hl)
      00031B 1A               [ 8] 1042 	ld	a, (de)
      00031C 47               [ 4] 1043 	ld	b, a
      00031D F8 09            [12] 1044 	ldhl	sp,	#9
      00031F 7E               [ 8] 1045 	ld	a, (hl)
      000320 F8 10            [12] 1046 	ldhl	sp,	#16
      000322 86               [ 8] 1047 	add	a, (hl)
      000323 4F               [ 4] 1048 	ld	c, a
      000324 F8 0C            [12] 1049 	ldhl	sp,	#12
      000326 2A               [ 8] 1050 	ld	a, (hl+)
      000327 5F               [ 4] 1051 	ld	e, a
      000328 56               [ 8] 1052 	ld	d, (hl)
      000329 D5               [16] 1053 	push	de
      00032A C5               [16] 1054 	push	bc
      00032B 33               [ 8] 1055 	inc	sp
      00032C F8 05            [12] 1056 	ldhl	sp,	#5
      00032E 2A               [ 8] 1057 	ld	a, (hl+)
      00032F 5F               [ 4] 1058 	ld	e, a
      000330 56               [ 8] 1059 	ld	d, (hl)
      000331 D5               [16] 1060 	push	de
      000332 F8 0D            [12] 1061 	ldhl	sp,	#13
      000334 2A               [ 8] 1062 	ld	a, (hl+)
      000335 23               [ 8] 1063 	inc	hl
      000336 F5               [16] 1064 	push	af
      000337 33               [ 8] 1065 	inc	sp
      000338 59               [ 4] 1066 	ld	e, c
      000339 7E               [ 8] 1067 	ld	a, (hl)
      00033A CDr0Dr02         [24] 1068 	call	_UpdateMapTile
                           00033D  1069 	C$Scroll.c$226$5_2$218	= .
                                   1070 	.globl	C$Scroll.c$226$5_2$218
                                   1071 ;C:/ZGB-2023.0/common/src/Scroll.c:226: ++ data;
      00033D F8 0E            [12] 1072 	ldhl	sp,	#14
      00033F 34               [12] 1073 	inc	(hl)
      000340 20 02            [12] 1074 	jr	NZ, 00180$
      000342 23               [ 8] 1075 	inc	hl
      000343 34               [12] 1076 	inc	(hl)
      000344                       1077 00180$:
                           000344  1078 	C$Scroll.c$227$5_2$218	= .
                                   1079 	.globl	C$Scroll.c$227$5_2$218
                                   1080 ;C:/ZGB-2023.0/common/src/Scroll.c:227: if(attrs)
      000344 F8 0D            [12] 1081 	ldhl	sp,	#13
      000346 3A               [ 8] 1082 	ld	a, (hl-)
      000347 B6               [ 8] 1083 	or	a, (hl)
      000348 28 05            [12] 1084 	jr	Z, 00109$
                           00034A  1085 	C$Scroll.c$228$5_2$218	= .
                                   1086 	.globl	C$Scroll.c$228$5_2$218
                                   1087 ;C:/ZGB-2023.0/common/src/Scroll.c:228: ++ attrs;
      00034A 34               [12] 1088 	inc	(hl)
      00034B 20 02            [12] 1089 	jr	NZ, 00181$
      00034D 23               [ 8] 1090 	inc	hl
      00034E 34               [12] 1091 	inc	(hl)
      00034F                       1092 00181$:
      00034F                       1093 00109$:
                           00034F  1094 	C$Scroll.c$223$4_2$217	= .
                                   1095 	.globl	C$Scroll.c$223$4_2$217
                                   1096 ;C:/ZGB-2023.0/common/src/Scroll.c:223: for(UINT8 i = 0; i < map->width; ++i) {
      00034F F8 10            [12] 1097 	ldhl	sp,	#16
      000351 34               [12] 1098 	inc	(hl)
      000352 18 B5            [12] 1099 	jr	00108$
      000354                       1100 00126$:
      000354 F8 0E            [12] 1101 	ldhl	sp,	#14
      000356 7E               [ 8] 1102 	ld	a, (hl)
      000357 F8 00            [12] 1103 	ldhl	sp,	#0
      000359 77               [ 8] 1104 	ld	(hl), a
      00035A F8 0F            [12] 1105 	ldhl	sp,	#15
      00035C 7E               [ 8] 1106 	ld	a, (hl)
      00035D F8 01            [12] 1107 	ldhl	sp,	#1
      00035F 77               [ 8] 1108 	ld	(hl), a
                           000360  1109 	C$Scroll.c$222$2_2$215	= .
                                   1110 	.globl	C$Scroll.c$222$2_2$215
                                   1111 ;C:/ZGB-2023.0/common/src/Scroll.c:222: for(UINT8 j = 0; j < map->height; ++j) {
      000360 F8 0B            [12] 1112 	ldhl	sp,	#11
      000362 34               [12] 1113 	inc	(hl)
      000363 C3rE5r02         [16] 1114 	jp	00111$
      000366                       1115 00106$:
                           000366  1116 	C$Scroll.c$232$1_2$214	= .
                                   1117 	.globl	C$Scroll.c$232$1_2$214
                                   1118 ;C:/ZGB-2023.0/common/src/Scroll.c:232: POP_BANK;
      000366 CDr00r00         [24] 1119 	call	_PopBank
                           000369  1120 	C$Scroll.c$235$1_2$214	= .
                                   1121 	.globl	C$Scroll.c$235$1_2$214
                                   1122 ;C:/ZGB-2023.0/common/src/Scroll.c:235: return map_offset;
      000369 F8 02            [12] 1123 	ldhl	sp,	#2
      00036B 4E               [ 8] 1124 	ld	c, (hl)
      00036C 23               [ 8] 1125 	inc	hl
      00036D 46               [ 8] 1126 	ld	b, (hl)
                           00036E  1127 	C$Scroll.c$236$1_2$212	= .
                                   1128 	.globl	C$Scroll.c$236$1_2$212
                                   1129 ;C:/ZGB-2023.0/common/src/Scroll.c:236: }
      00036E E8 11            [16] 1130 	add	sp, #17
      000370 E1               [12] 1131 	pop	hl
      000371 E8 04            [16] 1132 	add	sp, #4
      000373 E9               [ 4] 1133 	jp	(hl)
                           000374  1134 	G$ClampScrollLimits$0$0	= .
                                   1135 	.globl	G$ClampScrollLimits$0$0
                           000374  1136 	C$Scroll.c$240$1_2$219	= .
                                   1137 	.globl	C$Scroll.c$240$1_2$219
                                   1138 ;C:/ZGB-2023.0/common/src/Scroll.c:240: void ClampScrollLimits() {
                                   1139 ;	---------------------------------
                                   1140 ; Function ClampScrollLimits
                                   1141 ; ---------------------------------
      000374                       1142 _ClampScrollLimits::
                           000374  1143 	C$Scroll.c$241$1_0$219	= .
                                   1144 	.globl	C$Scroll.c$241$1_0$219
                                   1145 ;C:/ZGB-2023.0/common/src/Scroll.c:241: if(clamp_enabled) {
      000374 FAr17r00         [16] 1146 	ld	a, (#_clamp_enabled)
      000377 B7               [ 4] 1147 	or	a, a
      000378 C8               [20] 1148 	ret	Z
                           000379  1149 	C$Scroll.c$242$2_0$220	= .
                                   1150 	.globl	C$Scroll.c$242$2_0$220
                                   1151 ;C:/ZGB-2023.0/common/src/Scroll.c:242: if(U_LESS_THAN(scroll_x, 0u)) {
      000379 21r06r00         [12] 1152 	ld	hl, #_scroll_x
      00037C 2A               [ 8] 1153 	ld	a, (hl+)
      00037D 66               [ 8] 1154 	ld	h, (hl)
                                   1155 ;	spillPairReg hl
                                   1156 ;	spillPairReg hl
      00037E 29               [ 8] 1157 	add	hl, hl
      00037F 30 06            [12] 1158 	jr	NC, 00102$
                           000381  1159 	C$Scroll.c$243$3_0$221	= .
                                   1160 	.globl	C$Scroll.c$243$3_0$221
                                   1161 ;C:/ZGB-2023.0/common/src/Scroll.c:243: scroll_x = 0u;		
      000381 AF               [ 4] 1162 	xor	a, a
      000382 21r06r00         [12] 1163 	ld	hl, #_scroll_x
      000385 22               [ 8] 1164 	ld	(hl+), a
      000386 77               [ 8] 1165 	ld	(hl), a
      000387                       1166 00102$:
                           000387  1167 	C$Scroll.c$245$2_0$220	= .
                                   1168 	.globl	C$Scroll.c$245$2_0$220
                                   1169 ;C:/ZGB-2023.0/common/src/Scroll.c:245: if(scroll_x > (scroll_w - SCREENWIDTH)) {
      000387 21r00r00         [12] 1170 	ld	hl, #_scroll_w
      00038A 2A               [ 8] 1171 	ld	a, (hl+)
      00038B C6 60            [ 8] 1172 	add	a, #0x60
      00038D 4F               [ 4] 1173 	ld	c, a
      00038E 7E               [ 8] 1174 	ld	a, (hl)
      00038F CE FF            [ 8] 1175 	adc	a, #0xff
      000391 47               [ 4] 1176 	ld	b, a
      000392 21r06r00         [12] 1177 	ld	hl, #_scroll_x
      000395 2A               [ 8] 1178 	ld	a, (hl+)
      000396 5F               [ 4] 1179 	ld	e, a
      000397 56               [ 8] 1180 	ld	d, (hl)
      000398 79               [ 4] 1181 	ld	a, c
      000399 93               [ 4] 1182 	sub	a, e
      00039A 78               [ 4] 1183 	ld	a, b
      00039B 9A               [ 4] 1184 	sbc	a, d
      00039C 30 04            [12] 1185 	jr	NC, 00104$
                           00039E  1186 	C$Scroll.c$246$3_0$222	= .
                                   1187 	.globl	C$Scroll.c$246$3_0$222
                                   1188 ;C:/ZGB-2023.0/common/src/Scroll.c:246: scroll_x = (scroll_w - SCREENWIDTH);
      00039E 2B               [ 8] 1189 	dec	hl
      00039F 79               [ 4] 1190 	ld	a, c
      0003A0 22               [ 8] 1191 	ld	(hl+), a
      0003A1 70               [ 8] 1192 	ld	(hl), b
      0003A2                       1193 00104$:
                           0003A2  1194 	C$Scroll.c$248$2_0$220	= .
                                   1195 	.globl	C$Scroll.c$248$2_0$220
                                   1196 ;C:/ZGB-2023.0/common/src/Scroll.c:248: if(U_LESS_THAN(scroll_y, 0u)) {
      0003A2 21r08r00         [12] 1197 	ld	hl, #_scroll_y
      0003A5 2A               [ 8] 1198 	ld	a, (hl+)
      0003A6 66               [ 8] 1199 	ld	h, (hl)
                                   1200 ;	spillPairReg hl
                                   1201 ;	spillPairReg hl
      0003A7 29               [ 8] 1202 	add	hl, hl
      0003A8 30 06            [12] 1203 	jr	NC, 00106$
                           0003AA  1204 	C$Scroll.c$249$3_0$223	= .
                                   1205 	.globl	C$Scroll.c$249$3_0$223
                                   1206 ;C:/ZGB-2023.0/common/src/Scroll.c:249: scroll_y = 0u;		
      0003AA AF               [ 4] 1207 	xor	a, a
      0003AB 21r08r00         [12] 1208 	ld	hl, #_scroll_y
      0003AE 22               [ 8] 1209 	ld	(hl+), a
      0003AF 77               [ 8] 1210 	ld	(hl), a
      0003B0                       1211 00106$:
                           0003B0  1212 	C$Scroll.c$251$2_0$220	= .
                                   1213 	.globl	C$Scroll.c$251$2_0$220
                                   1214 ;C:/ZGB-2023.0/common/src/Scroll.c:251: if(scroll_y > (scroll_h - SCREENHEIGHT + scroll_h_border)) {
      0003B0 21r02r00         [12] 1215 	ld	hl, #_scroll_h
      0003B3 2A               [ 8] 1216 	ld	a, (hl+)
      0003B4 C6 70            [ 8] 1217 	add	a, #0x70
      0003B6 4F               [ 4] 1218 	ld	c, a
      0003B7 7E               [ 8] 1219 	ld	a, (hl)
      0003B8 CE FF            [ 8] 1220 	adc	a, #0xff
      0003BA 47               [ 4] 1221 	ld	b, a
      0003BB FAr16r00         [16] 1222 	ld	a, (#_scroll_h_border)
      0003BE 5F               [ 4] 1223 	ld	e, a
      0003BF 07               [ 4] 1224 	rlca
      0003C0 9F               [ 4] 1225 	sbc	a, a
      0003C1 6B               [ 4] 1226 	ld	l, e
                                   1227 ;	spillPairReg hl
                                   1228 ;	spillPairReg hl
      0003C2 67               [ 4] 1229 	ld	h, a
                                   1230 ;	spillPairReg hl
                                   1231 ;	spillPairReg hl
      0003C3 09               [ 8] 1232 	add	hl, bc
      0003C4 4D               [ 4] 1233 	ld	c, l
      0003C5 44               [ 4] 1234 	ld	b, h
      0003C6 21r08r00         [12] 1235 	ld	hl, #_scroll_y
      0003C9 2A               [ 8] 1236 	ld	a, (hl+)
      0003CA 5F               [ 4] 1237 	ld	e, a
      0003CB 56               [ 8] 1238 	ld	d, (hl)
      0003CC 79               [ 4] 1239 	ld	a, c
      0003CD 93               [ 4] 1240 	sub	a, e
      0003CE 78               [ 4] 1241 	ld	a, b
      0003CF 9A               [ 4] 1242 	sbc	a, d
      0003D0 D0               [20] 1243 	ret	NC
                           0003D1  1244 	C$Scroll.c$252$3_0$224	= .
                                   1245 	.globl	C$Scroll.c$252$3_0$224
                                   1246 ;C:/ZGB-2023.0/common/src/Scroll.c:252: scroll_y = (scroll_h - SCREENHEIGHT + scroll_h_border);
      0003D1 2B               [ 8] 1247 	dec	hl
      0003D2 79               [ 4] 1248 	ld	a, c
      0003D3 22               [ 8] 1249 	ld	(hl+), a
      0003D4 70               [ 8] 1250 	ld	(hl), b
                           0003D5  1251 	C$Scroll.c$255$1_0$219	= .
                                   1252 	.globl	C$Scroll.c$255$1_0$219
                                   1253 ;C:/ZGB-2023.0/common/src/Scroll.c:255: }
                           0003D5  1254 	C$Scroll.c$255$1_0$219	= .
                                   1255 	.globl	C$Scroll.c$255$1_0$219
                           0003D5  1256 	XG$ClampScrollLimits$0$0	= .
                                   1257 	.globl	XG$ClampScrollLimits$0$0
      0003D5 C9               [16] 1258 	ret
                           0003D6  1259 	G$ScrollSetMap$0$0	= .
                                   1260 	.globl	G$ScrollSetMap$0$0
                           0003D6  1261 	C$Scroll.c$257$1_0$226	= .
                                   1262 	.globl	C$Scroll.c$257$1_0$226
                                   1263 ;C:/ZGB-2023.0/common/src/Scroll.c:257: void ScrollSetMap(UINT8 map_bank, const struct MapInfo* map) {
                                   1264 ;	---------------------------------
                                   1265 ; Function ScrollSetMap
                                   1266 ; ---------------------------------
      0003D6                       1267 _ScrollSetMap::
      0003D6 E8 FD            [16] 1268 	add	sp, #-3
      0003D8 F8 02            [12] 1269 	ldhl	sp,	#2
      0003DA 77               [ 8] 1270 	ld	(hl), a
                           0003DB  1271 	C$Scroll.c$258$1_0$226	= .
                                   1272 	.globl	C$Scroll.c$258$1_0$226
                                   1273 ;C:/ZGB-2023.0/common/src/Scroll.c:258: PUSH_BANK(map_bank);
      0003DB D5               [16] 1274 	push	de
      0003DC 7E               [ 8] 1275 	ld	a, (hl)
      0003DD F5               [16] 1276 	push	af
      0003DE 33               [ 8] 1277 	inc	sp
      0003DF CDr00r00         [24] 1278 	call	_PushBank
      0003E2 33               [ 8] 1279 	inc	sp
      0003E3 C1               [12] 1280 	pop	bc
                           0003E4  1281 	C$Scroll.c$259$1_0$226	= .
                                   1282 	.globl	C$Scroll.c$259$1_0$226
                                   1283 ;C:/ZGB-2023.0/common/src/Scroll.c:259: scroll_tiles_w = map->width;
      0003E4 59               [ 4] 1284 	ld	e, c
      0003E5 50               [ 4] 1285 	ld	d, b
      0003E6 13               [ 8] 1286 	inc	de
      0003E7 13               [ 8] 1287 	inc	de
      0003E8 1A               [ 8] 1288 	ld	a, (de)
      0003E9 21r04r00         [12] 1289 	ld	hl, #_scroll_tiles_w
      0003EC 22               [ 8] 1290 	ld	(hl+), a
      0003ED 36 00            [12] 1291 	ld	(hl), #0x00
                           0003EF  1292 	C$Scroll.c$260$1_0$226	= .
                                   1293 	.globl	C$Scroll.c$260$1_0$226
                                   1294 ;C:/ZGB-2023.0/common/src/Scroll.c:260: scroll_tiles_h = map->height;
      0003EF 59               [ 4] 1295 	ld	e, c
      0003F0 50               [ 4] 1296 	ld	d, b
      0003F1 13               [ 8] 1297 	inc	de
      0003F2 13               [ 8] 1298 	inc	de
      0003F3 13               [ 8] 1299 	inc	de
      0003F4 1A               [ 8] 1300 	ld	a, (de)
      0003F5 21r06r00         [12] 1301 	ld	hl, #_scroll_tiles_h
      0003F8 22               [ 8] 1302 	ld	(hl+), a
      0003F9 36 00            [12] 1303 	ld	(hl), #0x00
                           0003FB  1304 	C$Scroll.c$261$1_0$226	= .
                                   1305 	.globl	C$Scroll.c$261$1_0$226
                                   1306 ;C:/ZGB-2023.0/common/src/Scroll.c:261: scroll_map = map->data;
      0003FB 59               [ 4] 1307 	ld	e, c
      0003FC 50               [ 4] 1308 	ld	d, b
      0003FD 1A               [ 8] 1309 	ld	a, (de)
      0003FE 21r02r00         [12] 1310 	ld	hl, #_scroll_map
      000401 22               [ 8] 1311 	ld	(hl+), a
      000402 13               [ 8] 1312 	inc	de
      000403 1A               [ 8] 1313 	ld	a, (de)
      000404 77               [ 8] 1314 	ld	(hl), a
                           000405  1315 	C$Scroll.c$262$1_0$226	= .
                                   1316 	.globl	C$Scroll.c$262$1_0$226
                                   1317 ;C:/ZGB-2023.0/common/src/Scroll.c:262: scroll_cmap = map->attributes;
      000405 03               [ 8] 1318 	inc	bc
      000406 03               [ 8] 1319 	inc	bc
      000407 03               [ 8] 1320 	inc	bc
      000408 03               [ 8] 1321 	inc	bc
      000409 59               [ 4] 1322 	ld	e, c
      00040A 50               [ 4] 1323 	ld	d, b
      00040B 1A               [ 8] 1324 	ld	a, (de)
      00040C 21r04r00         [12] 1325 	ld	hl, #_scroll_cmap
      00040F 22               [ 8] 1326 	ld	(hl+), a
      000410 13               [ 8] 1327 	inc	de
      000411 1A               [ 8] 1328 	ld	a, (de)
      000412 77               [ 8] 1329 	ld	(hl), a
                           000413  1330 	C$Scroll.c$263$1_0$226	= .
                                   1331 	.globl	C$Scroll.c$263$1_0$226
                                   1332 ;C:/ZGB-2023.0/common/src/Scroll.c:263: scroll_x = 0;
      000413 AF               [ 4] 1333 	xor	a, a
      000414 21r06r00         [12] 1334 	ld	hl, #_scroll_x
      000417 22               [ 8] 1335 	ld	(hl+), a
      000418 77               [ 8] 1336 	ld	(hl), a
                           000419  1337 	C$Scroll.c$264$1_0$226	= .
                                   1338 	.globl	C$Scroll.c$264$1_0$226
                                   1339 ;C:/ZGB-2023.0/common/src/Scroll.c:264: scroll_y = 0;
      000419 AF               [ 4] 1340 	xor	a, a
      00041A 21r08r00         [12] 1341 	ld	hl, #_scroll_y
      00041D 22               [ 8] 1342 	ld	(hl+), a
      00041E 77               [ 8] 1343 	ld	(hl), a
                           00041F  1344 	C$Scroll.c$265$1_0$226	= .
                                   1345 	.globl	C$Scroll.c$265$1_0$226
                                   1346 ;C:/ZGB-2023.0/common/src/Scroll.c:265: scroll_w = scroll_tiles_w << 3;
      00041F FAr04r00         [16] 1347 	ld	a, (#_scroll_tiles_w)
      000422 EAr00r00         [16] 1348 	ld	(#_scroll_w),a
      000425 FAr05r00         [16] 1349 	ld	a, (#_scroll_tiles_w + 1)
      000428 EAr01r00         [16] 1350 	ld	(#_scroll_w + 1),a
      00042B 3E 03            [ 8] 1351 	ld	a, #0x03
      00042D                       1352 00112$:
      00042D 21r00r00         [12] 1353 	ld	hl, #_scroll_w
      000430 CB 26            [16] 1354 	sla	(hl)
      000432 23               [ 8] 1355 	inc	hl
      000433 CB 16            [16] 1356 	rl	(hl)
      000435 3D               [ 4] 1357 	dec	a
      000436 20 F5            [12] 1358 	jr	NZ, 00112$
                           000438  1359 	C$Scroll.c$266$1_0$226	= .
                                   1360 	.globl	C$Scroll.c$266$1_0$226
                                   1361 ;C:/ZGB-2023.0/common/src/Scroll.c:266: scroll_h = scroll_tiles_h << 3;
      000438 FAr06r00         [16] 1362 	ld	a, (#_scroll_tiles_h)
      00043B EAr02r00         [16] 1363 	ld	(#_scroll_h),a
      00043E FAr07r00         [16] 1364 	ld	a, (#_scroll_tiles_h + 1)
      000441 EAr03r00         [16] 1365 	ld	(#_scroll_h + 1),a
      000444 3E 03            [ 8] 1366 	ld	a, #0x03
      000446                       1367 00113$:
      000446 21r02r00         [12] 1368 	ld	hl, #_scroll_h
      000449 CB 26            [16] 1369 	sla	(hl)
      00044B 23               [ 8] 1370 	inc	hl
      00044C CB 16            [16] 1371 	rl	(hl)
      00044E 3D               [ 4] 1372 	dec	a
      00044F 20 F5            [12] 1373 	jr	NZ, 00113$
                           000451  1374 	C$Scroll.c$267$1_0$226	= .
                                   1375 	.globl	C$Scroll.c$267$1_0$226
                                   1376 ;C:/ZGB-2023.0/common/src/Scroll.c:267: scroll_bank = map_bank;
      000451 F8 02            [12] 1377 	ldhl	sp,	#2
      000453 7E               [ 8] 1378 	ld	a, (hl)
      000454 EAr08r03         [16] 1379 	ld	(#_scroll_bank),a
                           000457  1380 	C$Scroll.c$268$1_0$226	= .
                                   1381 	.globl	C$Scroll.c$268$1_0$226
                                   1382 ;C:/ZGB-2023.0/common/src/Scroll.c:268: if(scroll_target) {
      000457 21r0Dr00         [12] 1383 	ld	hl, #_scroll_target + 1
      00045A 3A               [ 8] 1384 	ld	a, (hl-)
      00045B B6               [ 8] 1385 	or	a, (hl)
      00045C 28 38            [12] 1386 	jr	Z, 00102$
                           00045E  1387 	C$Scroll.c$269$1_0$226	= .
                                   1388 	.globl	C$Scroll.c$269$1_0$226
                                   1389 ;C:/ZGB-2023.0/common/src/Scroll.c:269: scroll_x = scroll_target->x - (SCREENWIDTH >> 1);
      00045E 2A               [ 8] 1390 	ld	a, (hl+)
      00045F 4F               [ 4] 1391 	ld	c, a
      000460 46               [ 8] 1392 	ld	b, (hl)
      000461 21 0C 00         [12] 1393 	ld	hl, #0x000c
      000464 09               [ 8] 1394 	add	hl, bc
      000465 5D               [ 4] 1395 	ld	e, l
      000466 54               [ 4] 1396 	ld	d, h
      000467 1A               [ 8] 1397 	ld	a, (de)
      000468 F8 00            [12] 1398 	ldhl	sp,	#0
      00046A 22               [ 8] 1399 	ld	(hl+), a
      00046B 13               [ 8] 1400 	inc	de
      00046C 1A               [ 8] 1401 	ld	a, (de)
      00046D 77               [ 8] 1402 	ld	(hl), a
      00046E D1               [12] 1403 	pop	de
      00046F D5               [16] 1404 	push	de
      000470 21 50 00         [12] 1405 	ld	hl, #0x0050
      000473 7B               [ 4] 1406 	ld	a, e
      000474 95               [ 4] 1407 	sub	a, l
      000475 5F               [ 4] 1408 	ld	e, a
      000476 7A               [ 4] 1409 	ld	a, d
      000477 9C               [ 4] 1410 	sbc	a, h
      000478 21r07r00         [12] 1411 	ld	hl, #_scroll_x + 1
      00047B 32               [ 8] 1412 	ld	(hl-), a
      00047C 73               [ 8] 1413 	ld	(hl), e
                           00047D  1414 	C$Scroll.c$270$2_0$227	= .
                                   1415 	.globl	C$Scroll.c$270$2_0$227
                                   1416 ;C:/ZGB-2023.0/common/src/Scroll.c:270: scroll_y = scroll_target->y - scroll_bottom_movement_limit; //Move the camera to its bottom limit
      00047D 21 0E 00         [12] 1417 	ld	hl, #0x000e
      000480 09               [ 8] 1418 	add	hl, bc
      000481 2A               [ 8] 1419 	ld	a, (hl+)
      000482 4F               [ 4] 1420 	ld	c, a
      000483 46               [ 8] 1421 	ld	b, (hl)
      000484 21r01r00         [12] 1422 	ld	hl, #_scroll_bottom_movement_limit
      000487 5E               [ 8] 1423 	ld	e, (hl)
      000488 16 00            [ 8] 1424 	ld	d, #0x00
      00048A 79               [ 4] 1425 	ld	a, c
      00048B 93               [ 4] 1426 	sub	a, e
      00048C 21r08r00         [12] 1427 	ld	hl, #_scroll_y
      00048F 22               [ 8] 1428 	ld	(hl+), a
      000490 78               [ 4] 1429 	ld	a, b
      000491 9A               [ 4] 1430 	sbc	a, d
      000492 77               [ 8] 1431 	ld	(hl), a
                           000493  1432 	C$Scroll.c$271$2_0$227	= .
                                   1433 	.globl	C$Scroll.c$271$2_0$227
                                   1434 ;C:/ZGB-2023.0/common/src/Scroll.c:271: ClampScrollLimits();
      000493 CDr74r03         [24] 1435 	call	_ClampScrollLimits
      000496                       1436 00102$:
                           000496  1437 	C$Scroll.c$273$1_0$226	= .
                                   1438 	.globl	C$Scroll.c$273$1_0$226
                                   1439 ;C:/ZGB-2023.0/common/src/Scroll.c:273: pending_h_i = 0;
      000496 21r0Dr03         [12] 1440 	ld	hl, #_pending_h_i
      000499 36 00            [12] 1441 	ld	(hl), #0x00
                           00049B  1442 	C$Scroll.c$274$1_0$226	= .
                                   1443 	.globl	C$Scroll.c$274$1_0$226
                                   1444 ;C:/ZGB-2023.0/common/src/Scroll.c:274: pending_w_i = 0;
      00049B 21r12r03         [12] 1445 	ld	hl, #_pending_w_i
      00049E 36 00            [12] 1446 	ld	(hl), #0x00
                           0004A0  1447 	C$Scroll.c$275$1_0$226	= .
                                   1448 	.globl	C$Scroll.c$275$1_0$226
                                   1449 ;C:/ZGB-2023.0/common/src/Scroll.c:275: POP_BANK;
      0004A0 CDr00r00         [24] 1450 	call	_PopBank
                           0004A3  1451 	C$Scroll.c$276$1_0$226	= .
                                   1452 	.globl	C$Scroll.c$276$1_0$226
                                   1453 ;C:/ZGB-2023.0/common/src/Scroll.c:276: }
      0004A3 E8 03            [16] 1454 	add	sp, #3
                           0004A5  1455 	C$Scroll.c$276$1_0$226	= .
                                   1456 	.globl	C$Scroll.c$276$1_0$226
                           0004A5  1457 	XG$ScrollSetMap$0$0	= .
                                   1458 	.globl	XG$ScrollSetMap$0$0
      0004A5 C9               [16] 1459 	ret
                           0004A6  1460 	G$InitScroll$0$0	= .
                                   1461 	.globl	G$InitScroll$0$0
                           0004A6  1462 	C$Scroll.c$278$1_0$229	= .
                                   1463 	.globl	C$Scroll.c$278$1_0$229
                                   1464 ;C:/ZGB-2023.0/common/src/Scroll.c:278: void InitScroll(UINT8 map_bank, const struct MapInfo* map, const UINT8* coll_list, const UINT8* coll_list_down) {
                                   1465 ;	---------------------------------
                                   1466 ; Function InitScroll
                                   1467 ; ---------------------------------
      0004A6                       1468 _InitScroll::
      0004A6 E8 FC            [16] 1469 	add	sp, #-4
      0004A8 F8 03            [12] 1470 	ldhl	sp,	#3
      0004AA 77               [ 8] 1471 	ld	(hl), a
                           0004AB  1472 	C$Scroll.c$283$1_0$229	= .
                                   1473 	.globl	C$Scroll.c$283$1_0$229
                                   1474 ;C:/ZGB-2023.0/common/src/Scroll.c:283: PUSH_BANK(map_bank)
      0004AB D5               [16] 1475 	push	de
      0004AC 7E               [ 8] 1476 	ld	a, (hl)
      0004AD F5               [16] 1477 	push	af
      0004AE 33               [ 8] 1478 	inc	sp
      0004AF CDr00r00         [24] 1479 	call	_PushBank
      0004B2 33               [ 8] 1480 	inc	sp
      0004B3 C1               [12] 1481 	pop	bc
                           0004B4  1482 	C$Scroll.c$284$1_0$229	= .
                                   1483 	.globl	C$Scroll.c$284$1_0$229
                                   1484 ;C:/ZGB-2023.0/common/src/Scroll.c:284: tiles_bank = map->tiles_bank;
      0004B4 21 06 00         [12] 1485 	ld	hl, #0x0006
      0004B7 09               [ 8] 1486 	add	hl, bc
      0004B8 7E               [ 8] 1487 	ld	a, (hl)
      0004B9 F8 00            [12] 1488 	ldhl	sp,	#0
      0004BB 77               [ 8] 1489 	ld	(hl), a
                           0004BC  1490 	C$Scroll.c$285$1_0$229	= .
                                   1491 	.globl	C$Scroll.c$285$1_0$229
                                   1492 ;C:/ZGB-2023.0/common/src/Scroll.c:285: tiles = map->tiles;
      0004BC 21 07 00         [12] 1493 	ld	hl, #0x0007
      0004BF 09               [ 8] 1494 	add	hl, bc
      0004C0 5D               [ 4] 1495 	ld	e, l
      0004C1 54               [ 4] 1496 	ld	d, h
      0004C2 1A               [ 8] 1497 	ld	a, (de)
      0004C3 F8 01            [12] 1498 	ldhl	sp,	#1
      0004C5 22               [ 8] 1499 	ld	(hl+), a
      0004C6 13               [ 8] 1500 	inc	de
      0004C7 1A               [ 8] 1501 	ld	a, (de)
      0004C8 77               [ 8] 1502 	ld	(hl), a
                           0004C9  1503 	C$Scroll.c$286$1_0$229	= .
                                   1504 	.globl	C$Scroll.c$286$1_0$229
                                   1505 ;C:/ZGB-2023.0/common/src/Scroll.c:286: POP_BANK;
      0004C9 C5               [16] 1506 	push	bc
      0004CA CDr00r00         [24] 1507 	call	_PopBank
      0004CD C1               [12] 1508 	pop	bc
                           0004CE  1509 	C$Scroll.c$288$1_0$229	= .
                                   1510 	.globl	C$Scroll.c$288$1_0$229
                                   1511 ;C:/ZGB-2023.0/common/src/Scroll.c:288: InitScrollWithTiles(map_bank, map, tiles_bank, tiles, coll_list, coll_list_down);
      0004CE F8 08            [12] 1512 	ldhl	sp,	#8
      0004D0 2A               [ 8] 1513 	ld	a, (hl+)
      0004D1 5F               [ 4] 1514 	ld	e, a
      0004D2 56               [ 8] 1515 	ld	d, (hl)
      0004D3 D5               [16] 1516 	push	de
      0004D4 F8 08            [12] 1517 	ldhl	sp,	#8
      0004D6 2A               [ 8] 1518 	ld	a, (hl+)
      0004D7 5F               [ 4] 1519 	ld	e, a
      0004D8 56               [ 8] 1520 	ld	d, (hl)
      0004D9 D5               [16] 1521 	push	de
      0004DA F8 05            [12] 1522 	ldhl	sp,	#5
      0004DC 2A               [ 8] 1523 	ld	a, (hl+)
      0004DD 5F               [ 4] 1524 	ld	e, a
      0004DE 3A               [ 8] 1525 	ld	a, (hl-)
      0004DF 2B               [ 8] 1526 	dec	hl
      0004E0 57               [ 4] 1527 	ld	d, a
      0004E1 D5               [16] 1528 	push	de
      0004E2 7E               [ 8] 1529 	ld	a, (hl)
      0004E3 F5               [16] 1530 	push	af
      0004E4 33               [ 8] 1531 	inc	sp
      0004E5 59               [ 4] 1532 	ld	e, c
      0004E6 50               [ 4] 1533 	ld	d, b
      0004E7 F8 0A            [12] 1534 	ldhl	sp,	#10
      0004E9 7E               [ 8] 1535 	ld	a, (hl)
      0004EA CDrF3r04         [24] 1536 	call	_InitScrollWithTiles
                           0004ED  1537 	C$Scroll.c$289$1_0$229	= .
                                   1538 	.globl	C$Scroll.c$289$1_0$229
                                   1539 ;C:/ZGB-2023.0/common/src/Scroll.c:289: }
      0004ED E8 04            [16] 1540 	add	sp, #4
      0004EF E1               [12] 1541 	pop	hl
      0004F0 E8 04            [16] 1542 	add	sp, #4
      0004F2 E9               [ 4] 1543 	jp	(hl)
                           0004F3  1544 	G$InitScrollWithTiles$0$0	= .
                                   1545 	.globl	G$InitScrollWithTiles$0$0
                           0004F3  1546 	C$Scroll.c$291$1_0$231	= .
                                   1547 	.globl	C$Scroll.c$291$1_0$231
                                   1548 ;C:/ZGB-2023.0/common/src/Scroll.c:291: void InitScrollWithTiles(UINT8 map_bank, const struct MapInfo* map, UINT8 tiles_info_bank, const struct TilesInfo* tiles_info, const UINT8* coll_list, const UINT8* coll_list_down)
                                   1549 ;	---------------------------------
                                   1550 ; Function InitScrollWithTiles
                                   1551 ; ---------------------------------
      0004F3                       1552 _InitScrollWithTiles::
      0004F3 E8 FC            [16] 1553 	add	sp, #-4
      0004F5 F8 00            [12] 1554 	ldhl	sp,	#0
      0004F7 77               [ 8] 1555 	ld	(hl), a
                           0004F8  1556 	C$Scroll.c$296$1_0$231	= .
                                   1557 	.globl	C$Scroll.c$296$1_0$231
                                   1558 ;C:/ZGB-2023.0/common/src/Scroll.c:296: ScrollSetTiles(0, tiles_info_bank, tiles_info);
      0004F8 D5               [16] 1559 	push	de
      0004F9 F8 09            [12] 1560 	ldhl	sp,	#9
      0004FB 2A               [ 8] 1561 	ld	a, (hl+)
      0004FC 4F               [ 4] 1562 	ld	c, a
      0004FD 3A               [ 8] 1563 	ld	a, (hl-)
      0004FE 2B               [ 8] 1564 	dec	hl
      0004FF 47               [ 4] 1565 	ld	b, a
      000500 C5               [16] 1566 	push	bc
      000501 5E               [ 8] 1567 	ld	e, (hl)
      000502 AF               [ 4] 1568 	xor	a, a
      000503 CDr6Fr01         [24] 1569 	call	_ScrollSetTiles
      000506 D1               [12] 1570 	pop	de
                           000507  1571 	C$Scroll.c$298$1_0$231	= .
                                   1572 	.globl	C$Scroll.c$298$1_0$231
                                   1573 ;C:/ZGB-2023.0/common/src/Scroll.c:298: ScrollSetMap(map_bank, map);
      000507 F8 00            [12] 1574 	ldhl	sp,	#0
      000509 7E               [ 8] 1575 	ld	a, (hl)
      00050A CDrD6r03         [24] 1576 	call	_ScrollSetMap
                           00050D  1577 	C$Scroll.c$300$1_0$231	= .
                                   1578 	.globl	C$Scroll.c$300$1_0$231
                                   1579 ;C:/ZGB-2023.0/common/src/Scroll.c:300: memset(scroll_collisions, 0, sizeof(scroll_collisions));
      00050D AF               [ 4] 1580 	xor	a, a
      00050E 3C               [ 4] 1581 	inc	a
      00050F F5               [16] 1582 	push	af
      000510 11 00 00         [12] 1583 	ld	de, #0x0000
      000513 D5               [16] 1584 	push	de
      000514 11r08r00         [12] 1585 	ld	de, #_scroll_collisions
      000517 D5               [16] 1586 	push	de
      000518 CDr00r00         [24] 1587 	call	_memset
      00051B E8 06            [16] 1588 	add	sp, #6
                           00051D  1589 	C$Scroll.c$301$1_0$231	= .
                                   1590 	.globl	C$Scroll.c$301$1_0$231
                                   1591 ;C:/ZGB-2023.0/common/src/Scroll.c:301: memset(scroll_collisions_down, 0, sizeof(scroll_collisions_down));
      00051D AF               [ 4] 1592 	xor	a, a
      00051E 3C               [ 4] 1593 	inc	a
      00051F F5               [16] 1594 	push	af
      000520 11 00 00         [12] 1595 	ld	de, #0x0000
      000523 D5               [16] 1596 	push	de
      000524 11r08r01         [12] 1597 	ld	de, #_scroll_collisions_down
      000527 D5               [16] 1598 	push	de
      000528 CDr00r00         [24] 1599 	call	_memset
      00052B E8 06            [16] 1600 	add	sp, #6
                           00052D  1601 	C$Scroll.c$303$1_0$231	= .
                                   1602 	.globl	C$Scroll.c$303$1_0$231
                                   1603 ;C:/ZGB-2023.0/common/src/Scroll.c:303: if(coll_list) {
      00052D F8 0A            [12] 1604 	ldhl	sp,	#10
      00052F 3A               [ 8] 1605 	ld	a, (hl-)
      000530 B6               [ 8] 1606 	or	a, (hl)
      000531 28 29            [12] 1607 	jr	Z, 00103$
                           000533  1608 	C$Scroll.c$304$1_0$231	= .
                                   1609 	.globl	C$Scroll.c$304$1_0$231
                                   1610 ;C:/ZGB-2023.0/common/src/Scroll.c:304: for(i = 0u; coll_list[i] != 0u; ++i) {
      000533 1E 00            [ 8] 1611 	ld	e, #0x00
      000535                       1612 00109$:
      000535 D5               [16] 1613 	push	de
      000536 16 00            [ 8] 1614 	ld	d, #0x00
      000538 F8 0B            [12] 1615 	ldhl	sp,	#11
      00053A 2A               [ 8] 1616 	ld	a,	(hl+)
      00053B 66               [ 8] 1617 	ld	h, (hl)
      00053C 6F               [ 4] 1618 	ld	l, a
      00053D 19               [ 8] 1619 	add	hl, de
      00053E D1               [12] 1620 	pop	de
      00053F 4D               [ 4] 1621 	ld	c, l
      000540 44               [ 4] 1622 	ld	b, h
      000541 0A               [ 8] 1623 	ld	a, (bc)
      000542 B7               [ 4] 1624 	or	a, a
      000543 28 17            [12] 1625 	jr	Z, 00103$
                           000545  1626 	C$Scroll.c$305$4_0$234	= .
                                   1627 	.globl	C$Scroll.c$305$4_0$234
                                   1628 ;C:/ZGB-2023.0/common/src/Scroll.c:305: scroll_collisions[coll_list[i]] = 1u;
      000545 C6r08            [ 8] 1629 	add	a, #<(_scroll_collisions)
      000547 6F               [ 4] 1630 	ld	l, a
                                   1631 ;	spillPairReg hl
                                   1632 ;	spillPairReg hl
      000548 3E 00            [ 8] 1633 	ld	a, #0x00
      00054A CEs00            [ 8] 1634 	adc	a, #>(_scroll_collisions)
      00054C 67               [ 4] 1635 	ld	h, a
                                   1636 ;	spillPairReg hl
                                   1637 ;	spillPairReg hl
      00054D 36 01            [12] 1638 	ld	(hl), #0x01
                           00054F  1639 	C$Scroll.c$306$4_0$234	= .
                                   1640 	.globl	C$Scroll.c$306$4_0$234
                                   1641 ;C:/ZGB-2023.0/common/src/Scroll.c:306: scroll_collisions_down[coll_list[i]] = 1u;
      00054F 0A               [ 8] 1642 	ld	a, (bc)
      000550 4F               [ 4] 1643 	ld	c, a
      000551 21r08r01         [12] 1644 	ld	hl, #_scroll_collisions_down
      000554 06 00            [ 8] 1645 	ld	b, #0x00
      000556 09               [ 8] 1646 	add	hl, bc
      000557 36 01            [12] 1647 	ld	(hl), #0x01
                           000559  1648 	C$Scroll.c$304$3_0$233	= .
                                   1649 	.globl	C$Scroll.c$304$3_0$233
                                   1650 ;C:/ZGB-2023.0/common/src/Scroll.c:304: for(i = 0u; coll_list[i] != 0u; ++i) {
      000559 1C               [ 4] 1651 	inc	e
      00055A 18 D9            [12] 1652 	jr	00109$
      00055C                       1653 00103$:
                           00055C  1654 	C$Scroll.c$309$1_0$231	= .
                                   1655 	.globl	C$Scroll.c$309$1_0$231
                                   1656 ;C:/ZGB-2023.0/common/src/Scroll.c:309: if(coll_list_down) {
      00055C F8 0C            [12] 1657 	ldhl	sp,	#12
      00055E 3A               [ 8] 1658 	ld	a, (hl-)
      00055F B6               [ 8] 1659 	or	a, (hl)
      000560 28 1F            [12] 1660 	jr	Z, 00106$
                           000562  1661 	C$Scroll.c$310$1_0$231	= .
                                   1662 	.globl	C$Scroll.c$310$1_0$231
                                   1663 ;C:/ZGB-2023.0/common/src/Scroll.c:310: for(i = 0u; coll_list_down[i] != 0u; ++i) {
      000562 1E 00            [ 8] 1664 	ld	e, #0x00
      000564                       1665 00112$:
      000564 D5               [16] 1666 	push	de
      000565 16 00            [ 8] 1667 	ld	d, #0x00
      000567 F8 0D            [12] 1668 	ldhl	sp,	#13
      000569 2A               [ 8] 1669 	ld	a,	(hl+)
      00056A 66               [ 8] 1670 	ld	h, (hl)
      00056B 6F               [ 4] 1671 	ld	l, a
      00056C 19               [ 8] 1672 	add	hl, de
      00056D D1               [12] 1673 	pop	de
      00056E 4D               [ 4] 1674 	ld	c, l
      00056F 44               [ 4] 1675 	ld	b, h
      000570 0A               [ 8] 1676 	ld	a, (bc)
      000571 B7               [ 4] 1677 	or	a, a
      000572 28 0D            [12] 1678 	jr	Z, 00106$
                           000574  1679 	C$Scroll.c$311$4_0$237	= .
                                   1680 	.globl	C$Scroll.c$311$4_0$237
                                   1681 ;C:/ZGB-2023.0/common/src/Scroll.c:311: scroll_collisions_down[coll_list_down[i]] = 1u;
      000574 C6r08            [ 8] 1682 	add	a, #<(_scroll_collisions_down)
      000576 6F               [ 4] 1683 	ld	l, a
                                   1684 ;	spillPairReg hl
                                   1685 ;	spillPairReg hl
      000577 3E 00            [ 8] 1686 	ld	a, #0x00
      000579 CEs01            [ 8] 1687 	adc	a, #>(_scroll_collisions_down)
      00057B 67               [ 4] 1688 	ld	h, a
                                   1689 ;	spillPairReg hl
                                   1690 ;	spillPairReg hl
      00057C 36 01            [12] 1691 	ld	(hl), #0x01
                           00057E  1692 	C$Scroll.c$310$3_0$236	= .
                                   1693 	.globl	C$Scroll.c$310$3_0$236
                                   1694 ;C:/ZGB-2023.0/common/src/Scroll.c:310: for(i = 0u; coll_list_down[i] != 0u; ++i) {
      00057E 1C               [ 4] 1695 	inc	e
      00057F 18 E3            [12] 1696 	jr	00112$
      000581                       1697 00106$:
                           000581  1698 	C$Scroll.c$316$1_0$231	= .
                                   1699 	.globl	C$Scroll.c$316$1_0$231
                                   1700 ;C:/ZGB-2023.0/common/src/Scroll.c:316: PUSH_BANK(map_bank);
      000581 F8 00            [12] 1701 	ldhl	sp,	#0
      000583 7E               [ 8] 1702 	ld	a, (hl)
      000584 F5               [16] 1703 	push	af
      000585 33               [ 8] 1704 	inc	sp
      000586 CDr00r00         [24] 1705 	call	_PushBank
      000589 33               [ 8] 1706 	inc	sp
                           00058A  1707 	C$Scroll.c$317$1_0$231	= .
                                   1708 	.globl	C$Scroll.c$317$1_0$231
                                   1709 ;C:/ZGB-2023.0/common/src/Scroll.c:317: y = scroll_y >> 3;
      00058A FAr08r00         [16] 1710 	ld	a, (#_scroll_y)
      00058D F8 01            [12] 1711 	ldhl	sp,	#1
      00058F 77               [ 8] 1712 	ld	(hl), a
      000590 FAr09r00         [16] 1713 	ld	a, (#_scroll_y + 1)
      000593 F8 02            [12] 1714 	ldhl	sp,	#2
      000595 77               [ 8] 1715 	ld	(hl), a
      000596 CB 2E            [16] 1716 	sra	(hl)
      000598 2B               [ 8] 1717 	dec	hl
      000599 CB 1E            [16] 1718 	rr	(hl)
      00059B 23               [ 8] 1719 	inc	hl
      00059C CB 2E            [16] 1720 	sra	(hl)
      00059E 2B               [ 8] 1721 	dec	hl
      00059F CB 1E            [16] 1722 	rr	(hl)
      0005A1 23               [ 8] 1723 	inc	hl
      0005A2 CB 2E            [16] 1724 	sra	(hl)
      0005A4 2B               [ 8] 1725 	dec	hl
      0005A5 CB 1E            [16] 1726 	rr	(hl)
                           0005A7  1727 	C$Scroll.c$318$1_0$231	= .
                                   1728 	.globl	C$Scroll.c$318$1_0$231
                                   1729 ;C:/ZGB-2023.0/common/src/Scroll.c:318: for(i = 0u; i != (SCREEN_TILE_REFRES_H) && y != scroll_h; ++i, y ++) {
      0005A7 23               [ 8] 1730 	inc	hl
      0005A8 23               [ 8] 1731 	inc	hl
      0005A9 36 00            [12] 1732 	ld	(hl), #0x00
      0005AB                       1733 00116$:
      0005AB F8 03            [12] 1734 	ldhl	sp,	#3
      0005AD 7E               [ 8] 1735 	ld	a, (hl)
      0005AE D6 15            [ 8] 1736 	sub	a, #0x15
      0005B0 28 39            [12] 1737 	jr	Z, 00107$
      0005B2 F8 01            [12] 1738 	ldhl	sp,	#1
      0005B4 2A               [ 8] 1739 	ld	a, (hl+)
      0005B5 4F               [ 4] 1740 	ld	c, a
      0005B6 46               [ 8] 1741 	ld	b, (hl)
      0005B7 21r02r00         [12] 1742 	ld	hl, #_scroll_h
      0005BA 7E               [ 8] 1743 	ld	a, (hl)
      0005BB 91               [ 4] 1744 	sub	a, c
      0005BC 20 05            [12] 1745 	jr	NZ, 00187$
      0005BE 23               [ 8] 1746 	inc	hl
      0005BF 7E               [ 8] 1747 	ld	a, (hl)
      0005C0 90               [ 4] 1748 	sub	a, b
      0005C1 28 28            [12] 1749 	jr	Z, 00107$
      0005C3                       1750 00187$:
                           0005C3  1751 	C$Scroll.c$319$3_0$239	= .
                                   1752 	.globl	C$Scroll.c$319$3_0$239
                                   1753 ;C:/ZGB-2023.0/common/src/Scroll.c:319: ScrollUpdateRow((scroll_x >> 3) - SCREEN_PAD_LEFT,  y - SCREEN_PAD_TOP);
      0005C3 F8 01            [12] 1754 	ldhl	sp,#1
      0005C5 2A               [ 8] 1755 	ld	a, (hl+)
      0005C6 4F               [ 4] 1756 	ld	c, a
      0005C7 46               [ 8] 1757 	ld	b, (hl)
      0005C8 0B               [ 8] 1758 	dec	bc
      0005C9 21r06r00         [12] 1759 	ld	hl, #_scroll_x
      0005CC 2A               [ 8] 1760 	ld	a, (hl+)
      0005CD 5F               [ 4] 1761 	ld	e, a
      0005CE 56               [ 8] 1762 	ld	d, (hl)
      0005CF CB 2A            [ 8] 1763 	sra	d
      0005D1 CB 1B            [ 8] 1764 	rr	e
      0005D3 CB 2A            [ 8] 1765 	sra	d
      0005D5 CB 1B            [ 8] 1766 	rr	e
      0005D7 CB 2A            [ 8] 1767 	sra	d
      0005D9 CB 1B            [ 8] 1768 	rr	e
      0005DB 1B               [ 8] 1769 	dec	de
      0005DC CDr76r06         [24] 1770 	call	_ScrollUpdateRow
                           0005DF  1771 	C$Scroll.c$318$2_0$238	= .
                                   1772 	.globl	C$Scroll.c$318$2_0$238
                                   1773 ;C:/ZGB-2023.0/common/src/Scroll.c:318: for(i = 0u; i != (SCREEN_TILE_REFRES_H) && y != scroll_h; ++i, y ++) {
      0005DF F8 03            [12] 1774 	ldhl	sp,	#3
      0005E1 34               [12] 1775 	inc	(hl)
      0005E2 2B               [ 8] 1776 	dec	hl
      0005E3 2B               [ 8] 1777 	dec	hl
      0005E4 34               [12] 1778 	inc	(hl)
      0005E5 20 C4            [12] 1779 	jr	NZ, 00116$
      0005E7 23               [ 8] 1780 	inc	hl
      0005E8 34               [12] 1781 	inc	(hl)
      0005E9 18 C0            [12] 1782 	jr	00116$
      0005EB                       1783 00107$:
                           0005EB  1784 	C$Scroll.c$321$1_0$231	= .
                                   1785 	.globl	C$Scroll.c$321$1_0$231
                                   1786 ;C:/ZGB-2023.0/common/src/Scroll.c:321: POP_BANK;
      0005EB CDr00r00         [24] 1787 	call	_PopBank
                           0005EE  1788 	C$Scroll.c$322$1_0$231	= .
                                   1789 	.globl	C$Scroll.c$322$1_0$231
                                   1790 ;C:/ZGB-2023.0/common/src/Scroll.c:322: }
      0005EE E8 04            [16] 1791 	add	sp, #4
      0005F0 E1               [12] 1792 	pop	hl
      0005F1 E8 07            [16] 1793 	add	sp, #7
      0005F3 E9               [ 4] 1794 	jp	(hl)
                           0005F4  1795 	G$ScrollUpdateRowR$0$0	= .
                                   1796 	.globl	G$ScrollUpdateRowR$0$0
                           0005F4  1797 	C$Scroll.c$324$1_0$241	= .
                                   1798 	.globl	C$Scroll.c$324$1_0$241
                                   1799 ;C:/ZGB-2023.0/common/src/Scroll.c:324: void ScrollUpdateRowR() {
                                   1800 ;	---------------------------------
                                   1801 ; Function ScrollUpdateRowR
                                   1802 ; ---------------------------------
      0005F4                       1803 _ScrollUpdateRowR::
      0005F4 3B               [ 8] 1804 	dec	sp
                           0005F5  1805 	C$Scroll.c$327$2_0$241	= .
                                   1806 	.globl	C$Scroll.c$327$2_0$241
                                   1807 ;C:/ZGB-2023.0/common/src/Scroll.c:327: for(i = 0u; i != 5 && pending_w_i != 0; ++i, -- pending_w_i)  {
      0005F5 F8 00            [12] 1808 	ldhl	sp,	#0
      0005F7 36 00            [12] 1809 	ld	(hl), #0x00
      0005F9                       1810 00104$:
      0005F9 F8 00            [12] 1811 	ldhl	sp,	#0
      0005FB 7E               [ 8] 1812 	ld	a, (hl)
      0005FC D6 05            [ 8] 1813 	sub	a, #0x05
      0005FE 28 35            [12] 1814 	jr	Z, 00106$
      000600 FAr12r03         [16] 1815 	ld	a, (#_pending_w_i)
      000603 B7               [ 4] 1816 	or	a, a
      000604 28 2F            [12] 1817 	jr	Z, 00106$
                           000606  1818 	C$Scroll.c$331$3_0$242	= .
                                   1819 	.globl	C$Scroll.c$331$3_0$242
                                   1820 ;C:/ZGB-2023.0/common/src/Scroll.c:331: UPDATE_TILE(pending_w_x ++, pending_w_y, pending_w_map ++,0);
      000606 21r12r00         [12] 1821 	ld	hl, #_pending_w_map
      000609 2A               [ 8] 1822 	ld	a, (hl+)
      00060A 4F               [ 4] 1823 	ld	c, a
      00060B 3A               [ 8] 1824 	ld	a, (hl-)
      00060C 47               [ 4] 1825 	ld	b, a
      00060D 34               [12] 1826 	inc	(hl)
      00060E 20 02            [12] 1827 	jr	NZ, 00131$
      000610 23               [ 8] 1828 	inc	hl
      000611 34               [12] 1829 	inc	(hl)
      000612                       1830 00131$:
      000612 21r0Er03         [12] 1831 	ld	hl, #_pending_w_x
      000615 2A               [ 8] 1832 	ld	a, (hl+)
      000616 5F               [ 4] 1833 	ld	e, a
      000617 3A               [ 8] 1834 	ld	a, (hl-)
      000618 57               [ 4] 1835 	ld	d, a
      000619 34               [12] 1836 	inc	(hl)
      00061A 20 02            [12] 1837 	jr	NZ, 00132$
      00061C 23               [ 8] 1838 	inc	hl
      00061D 34               [12] 1839 	inc	(hl)
      00061E                       1840 00132$:
      00061E 21 00 00         [12] 1841 	ld	hl, #0x0000
      000621 E5               [16] 1842 	push	hl
      000622 C5               [16] 1843 	push	bc
      000623 21r10r03         [12] 1844 	ld	hl, #_pending_w_y
      000626 2A               [ 8] 1845 	ld	a, (hl+)
      000627 4F               [ 4] 1846 	ld	c, a
      000628 46               [ 8] 1847 	ld	b, (hl)
      000629 CDr12r00         [24] 1848 	call	_UPDATE_TILE
                           00062C  1849 	C$Scroll.c$327$2_0$241	= .
                                   1850 	.globl	C$Scroll.c$327$2_0$241
                                   1851 ;C:/ZGB-2023.0/common/src/Scroll.c:327: for(i = 0u; i != 5 && pending_w_i != 0; ++i, -- pending_w_i)  {
      00062C F8 00            [12] 1852 	ldhl	sp,	#0
      00062E 34               [12] 1853 	inc	(hl)
      00062F 21r12r03         [12] 1854 	ld	hl, #_pending_w_i
      000632 35               [12] 1855 	dec	(hl)
      000633 18 C4            [12] 1856 	jr	00104$
      000635                       1857 00106$:
                           000635  1858 	C$Scroll.c$334$2_0$241	= .
                                   1859 	.globl	C$Scroll.c$334$2_0$241
                                   1860 ;C:/ZGB-2023.0/common/src/Scroll.c:334: }
      000635 33               [ 8] 1861 	inc	sp
                           000636  1862 	C$Scroll.c$334$2_0$241	= .
                                   1863 	.globl	C$Scroll.c$334$2_0$241
                           000636  1864 	XG$ScrollUpdateRowR$0$0	= .
                                   1865 	.globl	XG$ScrollUpdateRowR$0$0
      000636 C9               [16] 1866 	ret
                           000637  1867 	G$ScrollUpdateRowWithDelay$0$0	= .
                                   1868 	.globl	G$ScrollUpdateRowWithDelay$0$0
                           000637  1869 	C$Scroll.c$336$2_0$244	= .
                                   1870 	.globl	C$Scroll.c$336$2_0$244
                                   1871 ;C:/ZGB-2023.0/common/src/Scroll.c:336: void ScrollUpdateRowWithDelay(INT16 x, INT16 y) {
                                   1872 ;	---------------------------------
                                   1873 ; Function ScrollUpdateRowWithDelay
                                   1874 ; ---------------------------------
      000637                       1875 _ScrollUpdateRowWithDelay::
                           000637  1876 	C$Scroll.c$337$1_0$244	= .
                                   1877 	.globl	C$Scroll.c$337$1_0$244
                                   1878 ;C:/ZGB-2023.0/common/src/Scroll.c:337: while(pending_w_i) {
      000637                       1879 00101$:
      000637 FAr12r03         [16] 1880 	ld	a, (#_pending_w_i)
      00063A B7               [ 4] 1881 	or	a, a
      00063B 28 09            [12] 1882 	jr	Z, 00103$
                           00063D  1883 	C$Scroll.c$338$2_0$245	= .
                                   1884 	.globl	C$Scroll.c$338$2_0$245
                                   1885 ;C:/ZGB-2023.0/common/src/Scroll.c:338: ScrollUpdateRowR();
      00063D C5               [16] 1886 	push	bc
      00063E D5               [16] 1887 	push	de
      00063F CDrF4r05         [24] 1888 	call	_ScrollUpdateRowR
      000642 D1               [12] 1889 	pop	de
      000643 C1               [12] 1890 	pop	bc
      000644 18 F1            [12] 1891 	jr	00101$
      000646                       1892 00103$:
                           000646  1893 	C$Scroll.c$341$1_0$244	= .
                                   1894 	.globl	C$Scroll.c$341$1_0$244
                                   1895 ;C:/ZGB-2023.0/common/src/Scroll.c:341: pending_w_x = x;
      000646 21r0Er03         [12] 1896 	ld	hl, #_pending_w_x
      000649 7B               [ 4] 1897 	ld	a, e
      00064A 22               [ 8] 1898 	ld	(hl+), a
      00064B 72               [ 8] 1899 	ld	(hl), d
                           00064C  1900 	C$Scroll.c$342$1_0$244	= .
                                   1901 	.globl	C$Scroll.c$342$1_0$244
                                   1902 ;C:/ZGB-2023.0/common/src/Scroll.c:342: pending_w_y = y;
      00064C 21r10r03         [12] 1903 	ld	hl, #_pending_w_y
      00064F 79               [ 4] 1904 	ld	a, c
      000650 22               [ 8] 1905 	ld	(hl+), a
      000651 70               [ 8] 1906 	ld	(hl), b
                           000652  1907 	C$Scroll.c$343$1_0$244	= .
                                   1908 	.globl	C$Scroll.c$343$1_0$244
                                   1909 ;C:/ZGB-2023.0/common/src/Scroll.c:343: pending_w_i = SCREEN_TILE_REFRES_W;
      000652 21r12r03         [12] 1910 	ld	hl, #_pending_w_i
      000655 36 17            [12] 1911 	ld	(hl), #0x17
                           000657  1912 	C$Scroll.c$344$1_0$244	= .
                                   1913 	.globl	C$Scroll.c$344$1_0$244
                                   1914 ;C:/ZGB-2023.0/common/src/Scroll.c:344: pending_w_map = scroll_map + scroll_tiles_w * y + x;
      000657 D5               [16] 1915 	push	de
      000658 21r04r00         [12] 1916 	ld	hl, #_scroll_tiles_w
      00065B 2A               [ 8] 1917 	ld	a, (hl+)
      00065C 5F               [ 4] 1918 	ld	e, a
      00065D 56               [ 8] 1919 	ld	d, (hl)
      00065E CDr00r00         [24] 1920 	call	__mulint
      000661 D1               [12] 1921 	pop	de
      000662 79               [ 4] 1922 	ld	a, c
      000663 21r02r00         [12] 1923 	ld	hl, #_scroll_map
      000666 86               [ 8] 1924 	add	a, (hl)
      000667 23               [ 8] 1925 	inc	hl
      000668 4F               [ 4] 1926 	ld	c, a
      000669 78               [ 4] 1927 	ld	a, b
      00066A 8E               [ 8] 1928 	adc	a, (hl)
      00066B 47               [ 4] 1929 	ld	b, a
      00066C 79               [ 4] 1930 	ld	a, c
      00066D 83               [ 4] 1931 	add	a, e
      00066E 21r12r00         [12] 1932 	ld	hl, #_pending_w_map
      000671 22               [ 8] 1933 	ld	(hl+), a
      000672 78               [ 4] 1934 	ld	a, b
      000673 8A               [ 4] 1935 	adc	a, d
      000674 77               [ 8] 1936 	ld	(hl), a
                           000675  1937 	C$Scroll.c$349$1_0$244	= .
                                   1938 	.globl	C$Scroll.c$349$1_0$244
                                   1939 ;C:/ZGB-2023.0/common/src/Scroll.c:349: }
                           000675  1940 	C$Scroll.c$349$1_0$244	= .
                                   1941 	.globl	C$Scroll.c$349$1_0$244
                           000675  1942 	XG$ScrollUpdateRowWithDelay$0$0	= .
                                   1943 	.globl	XG$ScrollUpdateRowWithDelay$0$0
      000675 C9               [16] 1944 	ret
                           000676  1945 	G$ScrollUpdateRow$0$0	= .
                                   1946 	.globl	G$ScrollUpdateRow$0$0
                           000676  1947 	C$Scroll.c$351$1_0$247	= .
                                   1948 	.globl	C$Scroll.c$351$1_0$247
                                   1949 ;C:/ZGB-2023.0/common/src/Scroll.c:351: void ScrollUpdateRow(INT16 x, INT16 y) {
                                   1950 ;	---------------------------------
                                   1951 ; Function ScrollUpdateRow
                                   1952 ; ---------------------------------
      000676                       1953 _ScrollUpdateRow::
      000676 E8 F9            [16] 1954 	add	sp, #-7
      000678 F8 02            [12] 1955 	ldhl	sp,	#2
      00067A 7B               [ 4] 1956 	ld	a, e
      00067B 22               [ 8] 1957 	ld	(hl+), a
      00067C 72               [ 8] 1958 	ld	(hl), d
      00067D 33               [ 8] 1959 	inc	sp
      00067E 33               [ 8] 1960 	inc	sp
      00067F C5               [16] 1961 	push	bc
      000680 21r04r00         [12] 1962 	ld	hl, #_scroll_tiles_w
      000683 2A               [ 8] 1963 	ld	a, (hl+)
      000684 5F               [ 4] 1964 	ld	e, a
      000685 56               [ 8] 1965 	ld	d, (hl)
      000686 CDr00r00         [24] 1966 	call	__mulint
      000689 79               [ 4] 1967 	ld	a, c
      00068A 21r02r00         [12] 1968 	ld	hl, #_scroll_map
      00068D 86               [ 8] 1969 	add	a, (hl)
      00068E 23               [ 8] 1970 	inc	hl
      00068F 4F               [ 4] 1971 	ld	c, a
      000690 78               [ 4] 1972 	ld	a, b
      000691 8E               [ 8] 1973 	adc	a, (hl)
      000692 47               [ 4] 1974 	ld	b, a
      000693 F8 02            [12] 1975 	ldhl	sp,	#2
      000695 2A               [ 8] 1976 	ld	a,	(hl+)
      000696 66               [ 8] 1977 	ld	h, (hl)
      000697 6F               [ 4] 1978 	ld	l, a
      000698 09               [ 8] 1979 	add	hl, bc
                           000699  1980 	C$Scroll.c$359$1_0$247	= .
                                   1981 	.globl	C$Scroll.c$359$1_0$247
                                   1982 ;C:/ZGB-2023.0/common/src/Scroll.c:359: PUSH_BANK(scroll_bank);
      000699 E5               [16] 1983 	push	hl
      00069A FAr08r03         [16] 1984 	ld	a, (#_scroll_bank)
      00069D F5               [16] 1985 	push	af
      00069E 33               [ 8] 1986 	inc	sp
      00069F CDr00r00         [24] 1987 	call	_PushBank
      0006A2 33               [ 8] 1988 	inc	sp
      0006A3 C1               [12] 1989 	pop	bc
                           0006A4  1990 	C$Scroll.c$360$1_0$247	= .
                                   1991 	.globl	C$Scroll.c$360$1_0$247
                                   1992 ;C:/ZGB-2023.0/common/src/Scroll.c:360: for(i = 0u; i != SCREEN_TILE_REFRES_W; ++i) {
      0006A4 F8 04            [12] 1993 	ldhl	sp,	#4
      0006A6 79               [ 4] 1994 	ld	a, c
      0006A7 22               [ 8] 1995 	ld	(hl+), a
      0006A8 78               [ 4] 1996 	ld	a, b
      0006A9 22               [ 8] 1997 	ld	(hl+), a
      0006AA 36 00            [12] 1998 	ld	(hl), #0x00
      0006AC                       1999 00102$:
                           0006AC  2000 	C$Scroll.c$364$3_0$249	= .
                                   2001 	.globl	C$Scroll.c$364$3_0$249
                                   2002 ;C:/ZGB-2023.0/common/src/Scroll.c:364: UPDATE_TILE(x + i, y, map ++, 0);
      0006AC F8 04            [12] 2003 	ldhl	sp,	#4
      0006AE 2A               [ 8] 2004 	ld	a, (hl+)
      0006AF 4F               [ 4] 2005 	ld	c, a
      0006B0 3A               [ 8] 2006 	ld	a, (hl-)
      0006B1 47               [ 4] 2007 	ld	b, a
      0006B2 34               [12] 2008 	inc	(hl)
      0006B3 20 02            [12] 2009 	jr	NZ, 00121$
      0006B5 23               [ 8] 2010 	inc	hl
      0006B6 34               [12] 2011 	inc	(hl)
      0006B7                       2012 00121$:
      0006B7 F8 06            [12] 2013 	ldhl	sp,	#6
      0006B9 5E               [ 8] 2014 	ld	e, (hl)
      0006BA 16 00            [ 8] 2015 	ld	d, #0x00
      0006BC F8 02            [12] 2016 	ldhl	sp,	#2
      0006BE 2A               [ 8] 2017 	ld	a,	(hl+)
      0006BF 66               [ 8] 2018 	ld	h, (hl)
      0006C0 6F               [ 4] 2019 	ld	l, a
      0006C1 19               [ 8] 2020 	add	hl, de
      0006C2 5D               [ 4] 2021 	ld	e, l
      0006C3 54               [ 4] 2022 	ld	d, h
      0006C4 21 00 00         [12] 2023 	ld	hl, #0x0000
      0006C7 E5               [16] 2024 	push	hl
      0006C8 C5               [16] 2025 	push	bc
      0006C9 F8 04            [12] 2026 	ldhl	sp,	#4
      0006CB 2A               [ 8] 2027 	ld	a, (hl+)
      0006CC 4F               [ 4] 2028 	ld	c, a
      0006CD 46               [ 8] 2029 	ld	b, (hl)
      0006CE CDr12r00         [24] 2030 	call	_UPDATE_TILE
                           0006D1  2031 	C$Scroll.c$360$2_0$248	= .
                                   2032 	.globl	C$Scroll.c$360$2_0$248
                                   2033 ;C:/ZGB-2023.0/common/src/Scroll.c:360: for(i = 0u; i != SCREEN_TILE_REFRES_W; ++i) {
      0006D1 F8 06            [12] 2034 	ldhl	sp,	#6
      0006D3 34               [12] 2035 	inc	(hl)
      0006D4 7E               [ 8] 2036 	ld	a, (hl)
      0006D5 D6 17            [ 8] 2037 	sub	a, #0x17
      0006D7 20 D3            [12] 2038 	jr	NZ, 00102$
                           0006D9  2039 	C$Scroll.c$367$1_0$247	= .
                                   2040 	.globl	C$Scroll.c$367$1_0$247
                                   2041 ;C:/ZGB-2023.0/common/src/Scroll.c:367: POP_BANK;
      0006D9 CDr00r00         [24] 2042 	call	_PopBank
                           0006DC  2043 	C$Scroll.c$368$1_0$247	= .
                                   2044 	.globl	C$Scroll.c$368$1_0$247
                                   2045 ;C:/ZGB-2023.0/common/src/Scroll.c:368: }
      0006DC E8 07            [16] 2046 	add	sp, #7
                           0006DE  2047 	C$Scroll.c$368$1_0$247	= .
                                   2048 	.globl	C$Scroll.c$368$1_0$247
                           0006DE  2049 	XG$ScrollUpdateRow$0$0	= .
                                   2050 	.globl	XG$ScrollUpdateRow$0$0
      0006DE C9               [16] 2051 	ret
                           0006DF  2052 	G$ScrollUpdateColumnR$0$0	= .
                                   2053 	.globl	G$ScrollUpdateColumnR$0$0
                           0006DF  2054 	C$Scroll.c$370$1_0$251	= .
                                   2055 	.globl	C$Scroll.c$370$1_0$251
                                   2056 ;C:/ZGB-2023.0/common/src/Scroll.c:370: void ScrollUpdateColumnR() {
                                   2057 ;	---------------------------------
                                   2058 ; Function ScrollUpdateColumnR
                                   2059 ; ---------------------------------
      0006DF                       2060 _ScrollUpdateColumnR::
                           0006DF  2061 	C$Scroll.c$373$2_0$251	= .
                                   2062 	.globl	C$Scroll.c$373$2_0$251
                                   2063 ;C:/ZGB-2023.0/common/src/Scroll.c:373: for(i = 0u; i != 5 && pending_h_i != 0; ++i, pending_h_i --) {
      0006DF 1E 00            [ 8] 2064 	ld	e, #0x00
      0006E1                       2065 00104$:
      0006E1 7B               [ 4] 2066 	ld	a, e
      0006E2 D6 05            [ 8] 2067 	sub	a, #0x05
      0006E4 C8               [20] 2068 	ret	Z
      0006E5 FAr0Dr03         [16] 2069 	ld	a, (#_pending_h_i)
      0006E8 B7               [ 4] 2070 	or	a, a
      0006E9 C8               [20] 2071 	ret	Z
                           0006EA  2072 	C$Scroll.c$379$3_0$252	= .
                                   2073 	.globl	C$Scroll.c$379$3_0$252
                                   2074 ;C:/ZGB-2023.0/common/src/Scroll.c:379: UPDATE_TILE(pending_h_x, pending_h_y ++, pending_h_map, 0);
      0006EA 21r0Br03         [12] 2075 	ld	hl, #_pending_h_y
      0006ED 2A               [ 8] 2076 	ld	a, (hl+)
      0006EE 4F               [ 4] 2077 	ld	c, a
      0006EF 3A               [ 8] 2078 	ld	a, (hl-)
      0006F0 47               [ 4] 2079 	ld	b, a
      0006F1 34               [12] 2080 	inc	(hl)
      0006F2 20 02            [12] 2081 	jr	NZ, 00131$
      0006F4 23               [ 8] 2082 	inc	hl
      0006F5 34               [12] 2083 	inc	(hl)
      0006F6                       2084 00131$:
      0006F6 D5               [16] 2085 	push	de
      0006F7 21 00 00         [12] 2086 	ld	hl, #0x0000
      0006FA E5               [16] 2087 	push	hl
      0006FB 21r10r00         [12] 2088 	ld	hl, #_pending_h_map
      0006FE 6E               [ 8] 2089 	ld	l, (hl)
                                   2090 ;	spillPairReg hl
                                   2091 ;	spillPairReg hl
      0006FF FAr11r00         [16] 2092 	ld	a, (_pending_h_map + 1)
      000702 67               [ 4] 2093 	ld	h, a
                                   2094 ;	spillPairReg hl
                                   2095 ;	spillPairReg hl
      000703 E5               [16] 2096 	push	hl
      000704 21r09r03         [12] 2097 	ld	hl, #_pending_h_x
      000707 2A               [ 8] 2098 	ld	a, (hl+)
      000708 5F               [ 4] 2099 	ld	e, a
      000709 56               [ 8] 2100 	ld	d, (hl)
      00070A CDr12r00         [24] 2101 	call	_UPDATE_TILE
      00070D D1               [12] 2102 	pop	de
                           00070E  2103 	C$Scroll.c$380$3_0$252	= .
                                   2104 	.globl	C$Scroll.c$380$3_0$252
                                   2105 ;C:/ZGB-2023.0/common/src/Scroll.c:380: pending_h_map += scroll_tiles_w;
      00070E FAr10r00         [16] 2106 	ld	a, (#_pending_h_map)
      000711 21r04r00         [12] 2107 	ld	hl, #_scroll_tiles_w
      000714 86               [ 8] 2108 	add	a, (hl)
      000715 21r10r00         [12] 2109 	ld	hl, #_pending_h_map
      000718 22               [ 8] 2110 	ld	(hl+), a
      000719 7E               [ 8] 2111 	ld	a, (hl)
      00071A 21r05r00         [12] 2112 	ld	hl, #_scroll_tiles_w + 1
      00071D 8E               [ 8] 2113 	adc	a, (hl)
      00071E EAr11r00         [16] 2114 	ld	(#_pending_h_map + 1),a
                           000721  2115 	C$Scroll.c$373$2_0$251	= .
                                   2116 	.globl	C$Scroll.c$373$2_0$251
                                   2117 ;C:/ZGB-2023.0/common/src/Scroll.c:373: for(i = 0u; i != 5 && pending_h_i != 0; ++i, pending_h_i --) {
      000721 1C               [ 4] 2118 	inc	e
      000722 21r0Dr03         [12] 2119 	ld	hl, #_pending_h_i
      000725 35               [12] 2120 	dec	(hl)
                           000726  2121 	C$Scroll.c$383$2_0$251	= .
                                   2122 	.globl	C$Scroll.c$383$2_0$251
                                   2123 ;C:/ZGB-2023.0/common/src/Scroll.c:383: }
                           000726  2124 	C$Scroll.c$383$2_0$251	= .
                                   2125 	.globl	C$Scroll.c$383$2_0$251
                           000726  2126 	XG$ScrollUpdateColumnR$0$0	= .
                                   2127 	.globl	XG$ScrollUpdateColumnR$0$0
      000726 18 B9            [12] 2128 	jr	00104$
                           000728  2129 	G$ScrollUpdateColumnWithDelay$0$0	= .
                                   2130 	.globl	G$ScrollUpdateColumnWithDelay$0$0
                           000728  2131 	C$Scroll.c$385$2_0$254	= .
                                   2132 	.globl	C$Scroll.c$385$2_0$254
                                   2133 ;C:/ZGB-2023.0/common/src/Scroll.c:385: void ScrollUpdateColumnWithDelay(INT16 x, INT16 y) {
                                   2134 ;	---------------------------------
                                   2135 ; Function ScrollUpdateColumnWithDelay
                                   2136 ; ---------------------------------
      000728                       2137 _ScrollUpdateColumnWithDelay::
                           000728  2138 	C$Scroll.c$386$1_0$254	= .
                                   2139 	.globl	C$Scroll.c$386$1_0$254
                                   2140 ;C:/ZGB-2023.0/common/src/Scroll.c:386: while(pending_h_i) {
      000728                       2141 00101$:
      000728 FAr0Dr03         [16] 2142 	ld	a, (#_pending_h_i)
      00072B B7               [ 4] 2143 	or	a, a
      00072C 28 09            [12] 2144 	jr	Z, 00103$
                           00072E  2145 	C$Scroll.c$387$2_0$255	= .
                                   2146 	.globl	C$Scroll.c$387$2_0$255
                                   2147 ;C:/ZGB-2023.0/common/src/Scroll.c:387: ScrollUpdateColumnR();
      00072E C5               [16] 2148 	push	bc
      00072F D5               [16] 2149 	push	de
      000730 CDrDFr06         [24] 2150 	call	_ScrollUpdateColumnR
      000733 D1               [12] 2151 	pop	de
      000734 C1               [12] 2152 	pop	bc
      000735 18 F1            [12] 2153 	jr	00101$
      000737                       2154 00103$:
                           000737  2155 	C$Scroll.c$390$1_0$254	= .
                                   2156 	.globl	C$Scroll.c$390$1_0$254
                                   2157 ;C:/ZGB-2023.0/common/src/Scroll.c:390: pending_h_x = x;
      000737 21r09r03         [12] 2158 	ld	hl, #_pending_h_x
      00073A 7B               [ 4] 2159 	ld	a, e
      00073B 22               [ 8] 2160 	ld	(hl+), a
      00073C 72               [ 8] 2161 	ld	(hl), d
                           00073D  2162 	C$Scroll.c$391$1_0$254	= .
                                   2163 	.globl	C$Scroll.c$391$1_0$254
                                   2164 ;C:/ZGB-2023.0/common/src/Scroll.c:391: pending_h_y = y;
      00073D 21r0Br03         [12] 2165 	ld	hl, #_pending_h_y
      000740 79               [ 4] 2166 	ld	a, c
      000741 22               [ 8] 2167 	ld	(hl+), a
      000742 70               [ 8] 2168 	ld	(hl), b
                           000743  2169 	C$Scroll.c$392$1_0$254	= .
                                   2170 	.globl	C$Scroll.c$392$1_0$254
                                   2171 ;C:/ZGB-2023.0/common/src/Scroll.c:392: pending_h_i = SCREEN_TILE_REFRES_H;
      000743 21r0Dr03         [12] 2172 	ld	hl, #_pending_h_i
      000746 36 15            [12] 2173 	ld	(hl), #0x15
                           000748  2174 	C$Scroll.c$393$1_0$254	= .
                                   2175 	.globl	C$Scroll.c$393$1_0$254
                                   2176 ;C:/ZGB-2023.0/common/src/Scroll.c:393: pending_h_map = scroll_map + scroll_tiles_w * y + x;
      000748 D5               [16] 2177 	push	de
      000749 21r04r00         [12] 2178 	ld	hl, #_scroll_tiles_w
      00074C 2A               [ 8] 2179 	ld	a, (hl+)
      00074D 5F               [ 4] 2180 	ld	e, a
      00074E 56               [ 8] 2181 	ld	d, (hl)
      00074F CDr00r00         [24] 2182 	call	__mulint
      000752 D1               [12] 2183 	pop	de
      000753 79               [ 4] 2184 	ld	a, c
      000754 21r02r00         [12] 2185 	ld	hl, #_scroll_map
      000757 86               [ 8] 2186 	add	a, (hl)
      000758 23               [ 8] 2187 	inc	hl
      000759 4F               [ 4] 2188 	ld	c, a
      00075A 78               [ 4] 2189 	ld	a, b
      00075B 8E               [ 8] 2190 	adc	a, (hl)
      00075C 47               [ 4] 2191 	ld	b, a
      00075D 79               [ 4] 2192 	ld	a, c
      00075E 83               [ 4] 2193 	add	a, e
      00075F 21r10r00         [12] 2194 	ld	hl, #_pending_h_map
      000762 22               [ 8] 2195 	ld	(hl+), a
      000763 78               [ 4] 2196 	ld	a, b
      000764 8A               [ 4] 2197 	adc	a, d
      000765 77               [ 8] 2198 	ld	(hl), a
                           000766  2199 	C$Scroll.c$398$1_0$254	= .
                                   2200 	.globl	C$Scroll.c$398$1_0$254
                                   2201 ;C:/ZGB-2023.0/common/src/Scroll.c:398: }
                           000766  2202 	C$Scroll.c$398$1_0$254	= .
                                   2203 	.globl	C$Scroll.c$398$1_0$254
                           000766  2204 	XG$ScrollUpdateColumnWithDelay$0$0	= .
                                   2205 	.globl	XG$ScrollUpdateColumnWithDelay$0$0
      000766 C9               [16] 2206 	ret
                           000767  2207 	G$ScrollUpdateColumn$0$0	= .
                                   2208 	.globl	G$ScrollUpdateColumn$0$0
                           000767  2209 	C$Scroll.c$400$1_0$257	= .
                                   2210 	.globl	C$Scroll.c$400$1_0$257
                                   2211 ;C:/ZGB-2023.0/common/src/Scroll.c:400: void ScrollUpdateColumn(INT16 x, INT16 y) {
                                   2212 ;	---------------------------------
                                   2213 ; Function ScrollUpdateColumn
                                   2214 ; ---------------------------------
      000767                       2215 _ScrollUpdateColumn::
      000767 E8 FB            [16] 2216 	add	sp, #-5
      000769 F8 02            [12] 2217 	ldhl	sp,	#2
      00076B 7B               [ 4] 2218 	ld	a, e
      00076C 22               [ 8] 2219 	ld	(hl+), a
      00076D 72               [ 8] 2220 	ld	(hl), d
      00076E 33               [ 8] 2221 	inc	sp
      00076F 33               [ 8] 2222 	inc	sp
      000770 C5               [16] 2223 	push	bc
      000771 21r04r00         [12] 2224 	ld	hl, #_scroll_tiles_w
      000774 2A               [ 8] 2225 	ld	a, (hl+)
      000775 5F               [ 4] 2226 	ld	e, a
      000776 56               [ 8] 2227 	ld	d, (hl)
      000777 CDr00r00         [24] 2228 	call	__mulint
      00077A F8 02            [12] 2229 	ldhl	sp,	#2
      00077C 2A               [ 8] 2230 	ld	a, (hl+)
      00077D 5E               [ 8] 2231 	ld	e, (hl)
      00077E 81               [ 4] 2232 	add	a, c
      00077F 4F               [ 4] 2233 	ld	c, a
      000780 7B               [ 4] 2234 	ld	a, e
      000781 88               [ 4] 2235 	adc	a, b
      000782 47               [ 4] 2236 	ld	b, a
      000783 79               [ 4] 2237 	ld	a, c
      000784 21r02r00         [12] 2238 	ld	hl, #_scroll_map
      000787 86               [ 8] 2239 	add	a, (hl)
      000788 23               [ 8] 2240 	inc	hl
      000789 5F               [ 4] 2241 	ld	e, a
      00078A 78               [ 4] 2242 	ld	a, b
      00078B 8E               [ 8] 2243 	adc	a, (hl)
      00078C 57               [ 4] 2244 	ld	d, a
                           00078D  2245 	C$Scroll.c$407$1_0$257	= .
                                   2246 	.globl	C$Scroll.c$407$1_0$257
                                   2247 ;C:/ZGB-2023.0/common/src/Scroll.c:407: PUSH_BANK(scroll_bank);
      00078D D5               [16] 2248 	push	de
      00078E FAr08r03         [16] 2249 	ld	a, (#_scroll_bank)
      000791 F5               [16] 2250 	push	af
      000792 33               [ 8] 2251 	inc	sp
      000793 CDr00r00         [24] 2252 	call	_PushBank
      000796 33               [ 8] 2253 	inc	sp
      000797 D1               [12] 2254 	pop	de
                           000798  2255 	C$Scroll.c$408$1_0$257	= .
                                   2256 	.globl	C$Scroll.c$408$1_0$257
                                   2257 ;C:/ZGB-2023.0/common/src/Scroll.c:408: for(i = 0u; i != SCREEN_TILE_REFRES_H; ++i) {
      000798 F8 04            [12] 2258 	ldhl	sp,	#4
      00079A 36 00            [12] 2259 	ld	(hl), #0x00
      00079C                       2260 00102$:
                           00079C  2261 	C$Scroll.c$414$3_0$259	= .
                                   2262 	.globl	C$Scroll.c$414$3_0$259
                                   2263 ;C:/ZGB-2023.0/common/src/Scroll.c:414: UPDATE_TILE(x, y + i, map, 0);
      00079C F8 04            [12] 2264 	ldhl	sp,	#4
      00079E 4E               [ 8] 2265 	ld	c, (hl)
      00079F 06 00            [ 8] 2266 	ld	b, #0x00
      0007A1 E1               [12] 2267 	pop	hl
      0007A2 E5               [16] 2268 	push	hl
      0007A3 09               [ 8] 2269 	add	hl, bc
      0007A4 4D               [ 4] 2270 	ld	c, l
      0007A5 44               [ 4] 2271 	ld	b, h
      0007A6 D5               [16] 2272 	push	de
      0007A7 21 00 00         [12] 2273 	ld	hl, #0x0000
      0007AA E5               [16] 2274 	push	hl
      0007AB D5               [16] 2275 	push	de
      0007AC F8 08            [12] 2276 	ldhl	sp,	#8
      0007AE 2A               [ 8] 2277 	ld	a, (hl+)
      0007AF 5F               [ 4] 2278 	ld	e, a
      0007B0 56               [ 8] 2279 	ld	d, (hl)
      0007B1 CDr12r00         [24] 2280 	call	_UPDATE_TILE
      0007B4 D1               [12] 2281 	pop	de
                           0007B5  2282 	C$Scroll.c$415$3_0$259	= .
                                   2283 	.globl	C$Scroll.c$415$3_0$259
                                   2284 ;C:/ZGB-2023.0/common/src/Scroll.c:415: map += scroll_tiles_w;
      0007B5 7B               [ 4] 2285 	ld	a, e
      0007B6 21r04r00         [12] 2286 	ld	hl, #_scroll_tiles_w
      0007B9 86               [ 8] 2287 	add	a, (hl)
      0007BA 23               [ 8] 2288 	inc	hl
      0007BB 5F               [ 4] 2289 	ld	e, a
      0007BC 7A               [ 4] 2290 	ld	a, d
      0007BD 8E               [ 8] 2291 	adc	a, (hl)
      0007BE 57               [ 4] 2292 	ld	d, a
                           0007BF  2293 	C$Scroll.c$408$2_0$258	= .
                                   2294 	.globl	C$Scroll.c$408$2_0$258
                                   2295 ;C:/ZGB-2023.0/common/src/Scroll.c:408: for(i = 0u; i != SCREEN_TILE_REFRES_H; ++i) {
      0007BF F8 04            [12] 2296 	ldhl	sp,	#4
      0007C1 34               [12] 2297 	inc	(hl)
      0007C2 7E               [ 8] 2298 	ld	a, (hl)
      0007C3 D6 15            [ 8] 2299 	sub	a, #0x15
      0007C5 20 D5            [12] 2300 	jr	NZ, 00102$
                           0007C7  2301 	C$Scroll.c$418$1_0$257	= .
                                   2302 	.globl	C$Scroll.c$418$1_0$257
                                   2303 ;C:/ZGB-2023.0/common/src/Scroll.c:418: POP_BANK;
      0007C7 CDr00r00         [24] 2304 	call	_PopBank
                           0007CA  2305 	C$Scroll.c$419$1_0$257	= .
                                   2306 	.globl	C$Scroll.c$419$1_0$257
                                   2307 ;C:/ZGB-2023.0/common/src/Scroll.c:419: }
      0007CA E8 05            [16] 2308 	add	sp, #5
                           0007CC  2309 	C$Scroll.c$419$1_0$257	= .
                                   2310 	.globl	C$Scroll.c$419$1_0$257
                           0007CC  2311 	XG$ScrollUpdateColumn$0$0	= .
                                   2312 	.globl	XG$ScrollUpdateColumn$0$0
      0007CC C9               [16] 2313 	ret
                           0007CD  2314 	G$RefreshScroll$0$0	= .
                                   2315 	.globl	G$RefreshScroll$0$0
                           0007CD  2316 	C$Scroll.c$421$1_0$260	= .
                                   2317 	.globl	C$Scroll.c$421$1_0$260
                                   2318 ;C:/ZGB-2023.0/common/src/Scroll.c:421: void RefreshScroll() {
                                   2319 ;	---------------------------------
                                   2320 ; Function RefreshScroll
                                   2321 ; ---------------------------------
      0007CD                       2322 _RefreshScroll::
      0007CD E8 F6            [16] 2323 	add	sp, #-10
                           0007CF  2324 	C$Scroll.c$422$2_0$260	= .
                                   2325 	.globl	C$Scroll.c$422$2_0$260
                                   2326 ;C:/ZGB-2023.0/common/src/Scroll.c:422: UINT16 ny = scroll_y;
      0007CF FAr08r00         [16] 2327 	ld	a, (#_scroll_y)
      0007D2 F8 00            [12] 2328 	ldhl	sp,	#0
      0007D4 77               [ 8] 2329 	ld	(hl), a
      0007D5 FAr09r00         [16] 2330 	ld	a, (#_scroll_y + 1)
      0007D8 F8 01            [12] 2331 	ldhl	sp,	#1
      0007DA 77               [ 8] 2332 	ld	(hl), a
                           0007DB  2333 	C$Scroll.c$424$1_0$260	= .
                                   2334 	.globl	C$Scroll.c$424$1_0$260
                                   2335 ;C:/ZGB-2023.0/common/src/Scroll.c:424: if(scroll_target) {
      0007DB 21r0Dr00         [12] 2336 	ld	hl, #_scroll_target + 1
      0007DE 3A               [ 8] 2337 	ld	a, (hl-)
      0007DF B6               [ 8] 2338 	or	a, (hl)
      0007E0 CAr88r08         [16] 2339 	jp	Z, 00108$
                           0007E3  2340 	C$Scroll.c$425$2_0$261	= .
                                   2341 	.globl	C$Scroll.c$425$2_0$261
                                   2342 ;C:/ZGB-2023.0/common/src/Scroll.c:425: if(U_LESS_THAN(scroll_bottom_movement_limit, scroll_target->y - scroll_y)) {
      0007E3 FAr01r00         [16] 2343 	ld	a, (#_scroll_bottom_movement_limit)
      0007E6 F8 09            [12] 2344 	ldhl	sp,	#9
      0007E8 77               [ 8] 2345 	ld	(hl), a
      0007E9 FAr0Cr00         [16] 2346 	ld	a, (#_scroll_target)
      0007EC F8 02            [12] 2347 	ldhl	sp,	#2
      0007EE 77               [ 8] 2348 	ld	(hl), a
      0007EF FAr0Dr00         [16] 2349 	ld	a, (#_scroll_target + 1)
      0007F2 F8 03            [12] 2350 	ldhl	sp,	#3
      0007F4 32               [ 8] 2351 	ld	(hl-), a
      0007F5 2A               [ 8] 2352 	ld	a, (hl+)
      0007F6 5F               [ 4] 2353 	ld	e, a
      0007F7 56               [ 8] 2354 	ld	d, (hl)
      0007F8 21 0E 00         [12] 2355 	ld	hl, #0x000e
      0007FB 19               [ 8] 2356 	add	hl, de
      0007FC 4D               [ 4] 2357 	ld	c, l
      0007FD 44               [ 4] 2358 	ld	b, h
      0007FE 59               [ 4] 2359 	ld	e, c
      0007FF 50               [ 4] 2360 	ld	d, b
      000800 1A               [ 8] 2361 	ld	a, (de)
      000801 F8 04            [12] 2362 	ldhl	sp,	#4
      000803 22               [ 8] 2363 	ld	(hl+), a
      000804 13               [ 8] 2364 	inc	de
      000805 1A               [ 8] 2365 	ld	a, (de)
      000806 77               [ 8] 2366 	ld	(hl), a
      000807 21r08r00         [12] 2367 	ld	hl, #_scroll_y
      00080A 2A               [ 8] 2368 	ld	a, (hl+)
      00080B 4F               [ 4] 2369 	ld	c, a
      00080C 46               [ 8] 2370 	ld	b, (hl)
      00080D F8 04            [12] 2371 	ldhl	sp,#4
      00080F 2A               [ 8] 2372 	ld	a, (hl+)
      000810 5F               [ 4] 2373 	ld	e, a
      000811 2A               [ 8] 2374 	ld	a, (hl+)
      000812 23               [ 8] 2375 	inc	hl
      000813 57               [ 4] 2376 	ld	d, a
      000814 7B               [ 4] 2377 	ld	a, e
      000815 91               [ 4] 2378 	sub	a, c
      000816 5F               [ 4] 2379 	ld	e, a
      000817 7A               [ 4] 2380 	ld	a, d
      000818 98               [ 4] 2381 	sbc	a, b
      000819 32               [ 8] 2382 	ld	(hl-), a
      00081A 73               [ 8] 2383 	ld	(hl), e
      00081B F8 09            [12] 2384 	ldhl	sp,	#9
      00081D 3A               [ 8] 2385 	ld	a, (hl-)
      00081E 2B               [ 8] 2386 	dec	hl
      00081F 2B               [ 8] 2387 	dec	hl
      000820 4F               [ 4] 2388 	ld	c, a
      000821 06 00            [ 8] 2389 	ld	b, #0x00
      000823 2A               [ 8] 2390 	ld	a, (hl+)
      000824 5F               [ 4] 2391 	ld	e, a
      000825 2A               [ 8] 2392 	ld	a, (hl+)
      000826 23               [ 8] 2393 	inc	hl
      000827 57               [ 4] 2394 	ld	d, a
      000828 79               [ 4] 2395 	ld	a, c
      000829 93               [ 4] 2396 	sub	a, e
      00082A 5F               [ 4] 2397 	ld	e, a
      00082B 78               [ 4] 2398 	ld	a, b
      00082C 9A               [ 4] 2399 	sbc	a, d
      00082D 32               [ 8] 2400 	ld	(hl-), a
      00082E 73               [ 8] 2401 	ld	(hl), e
      00082F E5               [16] 2402 	push	hl
      000830 23               [ 8] 2403 	inc	hl
      000831 CB 7E            [12] 2404 	bit	7, (hl)
      000833 E1               [12] 2405 	pop	hl
      000834 28 10            [12] 2406 	jr	Z, 00104$
                           000836  2407 	C$Scroll.c$426$3_0$262	= .
                                   2408 	.globl	C$Scroll.c$426$3_0$262
                                   2409 ;C:/ZGB-2023.0/common/src/Scroll.c:426: ny = scroll_target->y - scroll_bottom_movement_limit;
      000836 F8 04            [12] 2410 	ldhl	sp,#4
      000838 2A               [ 8] 2411 	ld	a, (hl+)
      000839 5F               [ 4] 2412 	ld	e, a
      00083A 56               [ 8] 2413 	ld	d, (hl)
      00083B 7B               [ 4] 2414 	ld	a, e
      00083C 91               [ 4] 2415 	sub	a, c
      00083D 5F               [ 4] 2416 	ld	e, a
      00083E 7A               [ 4] 2417 	ld	a, d
      00083F 98               [ 4] 2418 	sbc	a, b
      000840 F8 01            [12] 2419 	ldhl	sp,	#1
      000842 32               [ 8] 2420 	ld	(hl-), a
      000843 73               [ 8] 2421 	ld	(hl), e
      000844 18 29            [12] 2422 	jr	00105$
      000846                       2423 00104$:
                           000846  2424 	C$Scroll.c$427$2_0$261	= .
                                   2425 	.globl	C$Scroll.c$427$2_0$261
                                   2426 ;C:/ZGB-2023.0/common/src/Scroll.c:427: } else if(U_LESS_THAN(scroll_target->y - scroll_y, scroll_top_movement_limit)) {
      000846 21r00r00         [12] 2427 	ld	hl, #_scroll_top_movement_limit
      000849 4E               [ 8] 2428 	ld	c, (hl)
      00084A 06 00            [ 8] 2429 	ld	b, #0x00
      00084C F8 06            [12] 2430 	ldhl	sp,#6
      00084E 2A               [ 8] 2431 	ld	a, (hl+)
      00084F 5F               [ 4] 2432 	ld	e, a
      000850 2A               [ 8] 2433 	ld	a, (hl+)
      000851 23               [ 8] 2434 	inc	hl
      000852 57               [ 4] 2435 	ld	d, a
      000853 7B               [ 4] 2436 	ld	a, e
      000854 91               [ 4] 2437 	sub	a, c
      000855 5F               [ 4] 2438 	ld	e, a
      000856 7A               [ 4] 2439 	ld	a, d
      000857 98               [ 4] 2440 	sbc	a, b
      000858 32               [ 8] 2441 	ld	(hl-), a
      000859 73               [ 8] 2442 	ld	(hl), e
      00085A E5               [16] 2443 	push	hl
      00085B 23               [ 8] 2444 	inc	hl
      00085C CB 7E            [12] 2445 	bit	7, (hl)
      00085E E1               [12] 2446 	pop	hl
      00085F 28 0E            [12] 2447 	jr	Z, 00105$
                           000861  2448 	C$Scroll.c$428$3_0$263	= .
                                   2449 	.globl	C$Scroll.c$428$3_0$263
                                   2450 ;C:/ZGB-2023.0/common/src/Scroll.c:428: ny = scroll_target->y - scroll_top_movement_limit;
      000861 F8 04            [12] 2451 	ldhl	sp,#4
      000863 2A               [ 8] 2452 	ld	a, (hl+)
      000864 5F               [ 4] 2453 	ld	e, a
      000865 56               [ 8] 2454 	ld	d, (hl)
      000866 7B               [ 4] 2455 	ld	a, e
      000867 91               [ 4] 2456 	sub	a, c
      000868 5F               [ 4] 2457 	ld	e, a
      000869 7A               [ 4] 2458 	ld	a, d
      00086A 98               [ 4] 2459 	sbc	a, b
      00086B F8 01            [12] 2460 	ldhl	sp,	#1
      00086D 32               [ 8] 2461 	ld	(hl-), a
      00086E 73               [ 8] 2462 	ld	(hl), e
      00086F                       2463 00105$:
                           00086F  2464 	C$Scroll.c$431$2_0$261	= .
                                   2465 	.globl	C$Scroll.c$431$2_0$261
                                   2466 ;C:/ZGB-2023.0/common/src/Scroll.c:431: MoveScroll(scroll_target->x - (SCREENWIDTH >> 1), ny);
      00086F F8 02            [12] 2467 	ldhl	sp,#2
      000871 2A               [ 8] 2468 	ld	a, (hl+)
      000872 5F               [ 4] 2469 	ld	e, a
      000873 56               [ 8] 2470 	ld	d, (hl)
      000874 21 0C 00         [12] 2471 	ld	hl, #0x000c
      000877 19               [ 8] 2472 	add	hl, de
      000878 2A               [ 8] 2473 	ld	a, (hl+)
      000879 4F               [ 4] 2474 	ld	c, a
      00087A 46               [ 8] 2475 	ld	b, (hl)
      00087B 79               [ 4] 2476 	ld	a, c
      00087C C6 B0            [ 8] 2477 	add	a, #0xb0
      00087E 5F               [ 4] 2478 	ld	e, a
      00087F 78               [ 4] 2479 	ld	a, b
      000880 CE FF            [ 8] 2480 	adc	a, #0xff
      000882 57               [ 4] 2481 	ld	d, a
      000883 C1               [12] 2482 	pop	bc
      000884 C5               [16] 2483 	push	bc
      000885 CDr8Br08         [24] 2484 	call	_MoveScroll
      000888                       2485 00108$:
                           000888  2486 	C$Scroll.c$433$1_0$260	= .
                                   2487 	.globl	C$Scroll.c$433$1_0$260
                                   2488 ;C:/ZGB-2023.0/common/src/Scroll.c:433: }
      000888 E8 0A            [16] 2489 	add	sp, #10
                           00088A  2490 	C$Scroll.c$433$1_0$260	= .
                                   2491 	.globl	C$Scroll.c$433$1_0$260
                           00088A  2492 	XG$RefreshScroll$0$0	= .
                                   2493 	.globl	XG$RefreshScroll$0$0
      00088A C9               [16] 2494 	ret
                           00088B  2495 	G$MoveScroll$0$0	= .
                                   2496 	.globl	G$MoveScroll$0$0
                           00088B  2497 	C$Scroll.c$435$1_0$265	= .
                                   2498 	.globl	C$Scroll.c$435$1_0$265
                                   2499 ;C:/ZGB-2023.0/common/src/Scroll.c:435: void MoveScroll(INT16 x, INT16 y) {
                                   2500 ;	---------------------------------
                                   2501 ; Function MoveScroll
                                   2502 ; ---------------------------------
      00088B                       2503 _MoveScroll::
      00088B E8 F6            [16] 2504 	add	sp, #-10
                           00088D  2505 	C$Scroll.c$438$1_0$265	= .
                                   2506 	.globl	C$Scroll.c$438$1_0$265
                                   2507 ;C:/ZGB-2023.0/common/src/Scroll.c:438: PUSH_BANK(scroll_bank);
      00088D C5               [16] 2508 	push	bc
      00088E D5               [16] 2509 	push	de
      00088F FAr08r03         [16] 2510 	ld	a, (#_scroll_bank)
      000892 F5               [16] 2511 	push	af
      000893 33               [ 8] 2512 	inc	sp
      000894 CDr00r00         [24] 2513 	call	_PushBank
      000897 33               [ 8] 2514 	inc	sp
      000898 D1               [12] 2515 	pop	de
      000899 C1               [12] 2516 	pop	bc
                           00089A  2517 	C$Scroll.c$440$1_0$265	= .
                                   2518 	.globl	C$Scroll.c$440$1_0$265
                                   2519 ;C:/ZGB-2023.0/common/src/Scroll.c:440: current_column = scroll_x >> 3;
      00089A FAr06r00         [16] 2520 	ld	a, (#_scroll_x)
      00089D F8 00            [12] 2521 	ldhl	sp,	#0
      00089F 77               [ 8] 2522 	ld	(hl), a
      0008A0 FAr07r00         [16] 2523 	ld	a, (#_scroll_x + 1)
      0008A3 F8 01            [12] 2524 	ldhl	sp,	#1
      0008A5 77               [ 8] 2525 	ld	(hl), a
      0008A6 CB 2E            [16] 2526 	sra	(hl)
      0008A8 2B               [ 8] 2527 	dec	hl
      0008A9 CB 1E            [16] 2528 	rr	(hl)
      0008AB 23               [ 8] 2529 	inc	hl
      0008AC CB 2E            [16] 2530 	sra	(hl)
      0008AE 2B               [ 8] 2531 	dec	hl
      0008AF CB 1E            [16] 2532 	rr	(hl)
      0008B1 23               [ 8] 2533 	inc	hl
      0008B2 CB 2E            [16] 2534 	sra	(hl)
      0008B4 2B               [ 8] 2535 	dec	hl
      0008B5 CB 1E            [16] 2536 	rr	(hl)
                           0008B7  2537 	C$Scroll.c$441$1_0$265	= .
                                   2538 	.globl	C$Scroll.c$441$1_0$265
                                   2539 ;C:/ZGB-2023.0/common/src/Scroll.c:441: current_row    = scroll_y >> 3;
      0008B7 FAr08r00         [16] 2540 	ld	a, (#_scroll_y)
      0008BA F8 02            [12] 2541 	ldhl	sp,	#2
      0008BC 77               [ 8] 2542 	ld	(hl), a
      0008BD FAr09r00         [16] 2543 	ld	a, (#_scroll_y + 1)
      0008C0 F8 03            [12] 2544 	ldhl	sp,	#3
      0008C2 77               [ 8] 2545 	ld	(hl), a
      0008C3 CB 2E            [16] 2546 	sra	(hl)
      0008C5 2B               [ 8] 2547 	dec	hl
      0008C6 CB 1E            [16] 2548 	rr	(hl)
      0008C8 23               [ 8] 2549 	inc	hl
      0008C9 CB 2E            [16] 2550 	sra	(hl)
      0008CB 2B               [ 8] 2551 	dec	hl
      0008CC CB 1E            [16] 2552 	rr	(hl)
      0008CE 23               [ 8] 2553 	inc	hl
      0008CF CB 2E            [16] 2554 	sra	(hl)
      0008D1 2B               [ 8] 2555 	dec	hl
      0008D2 CB 1E            [16] 2556 	rr	(hl)
                           0008D4  2557 	C$Scroll.c$443$1_0$265	= .
                                   2558 	.globl	C$Scroll.c$443$1_0$265
                                   2559 ;C:/ZGB-2023.0/common/src/Scroll.c:443: scroll_x = x;
      0008D4 21r06r00         [12] 2560 	ld	hl, #_scroll_x
      0008D7 7B               [ 4] 2561 	ld	a, e
      0008D8 22               [ 8] 2562 	ld	(hl+), a
      0008D9 72               [ 8] 2563 	ld	(hl), d
                           0008DA  2564 	C$Scroll.c$444$1_0$265	= .
                                   2565 	.globl	C$Scroll.c$444$1_0$265
                                   2566 ;C:/ZGB-2023.0/common/src/Scroll.c:444: scroll_y = y;
      0008DA 21r08r00         [12] 2567 	ld	hl, #_scroll_y
      0008DD 79               [ 4] 2568 	ld	a, c
      0008DE 22               [ 8] 2569 	ld	(hl+), a
      0008DF 70               [ 8] 2570 	ld	(hl), b
                           0008E0  2571 	C$Scroll.c$445$1_0$265	= .
                                   2572 	.globl	C$Scroll.c$445$1_0$265
                                   2573 ;C:/ZGB-2023.0/common/src/Scroll.c:445: ClampScrollLimits();
      0008E0 CDr74r03         [24] 2574 	call	_ClampScrollLimits
                           0008E3  2575 	C$Scroll.c$447$1_0$265	= .
                                   2576 	.globl	C$Scroll.c$447$1_0$265
                                   2577 ;C:/ZGB-2023.0/common/src/Scroll.c:447: new_column     = scroll_x >> 3;
      0008E3 21r06r00         [12] 2578 	ld	hl, #_scroll_x
      0008E6 2A               [ 8] 2579 	ld	a, (hl+)
      0008E7 4F               [ 4] 2580 	ld	c, a
      0008E8 46               [ 8] 2581 	ld	b, (hl)
      0008E9 CB 28            [ 8] 2582 	sra	b
      0008EB CB 19            [ 8] 2583 	rr	c
      0008ED CB 28            [ 8] 2584 	sra	b
      0008EF CB 19            [ 8] 2585 	rr	c
      0008F1 CB 28            [ 8] 2586 	sra	b
      0008F3 CB 19            [ 8] 2587 	rr	c
                           0008F5  2588 	C$Scroll.c$448$1_0$265	= .
                                   2589 	.globl	C$Scroll.c$448$1_0$265
                                   2590 ;C:/ZGB-2023.0/common/src/Scroll.c:448: new_row        = scroll_y >> 3;
      0008F5 FAr08r00         [16] 2591 	ld	a, (#_scroll_y)
      0008F8 F8 04            [12] 2592 	ldhl	sp,	#4
      0008FA 77               [ 8] 2593 	ld	(hl), a
      0008FB FAr09r00         [16] 2594 	ld	a, (#_scroll_y + 1)
      0008FE F8 05            [12] 2595 	ldhl	sp,	#5
      000900 77               [ 8] 2596 	ld	(hl), a
      000901 CB 2E            [16] 2597 	sra	(hl)
      000903 2B               [ 8] 2598 	dec	hl
      000904 CB 1E            [16] 2599 	rr	(hl)
      000906 23               [ 8] 2600 	inc	hl
      000907 CB 2E            [16] 2601 	sra	(hl)
      000909 2B               [ 8] 2602 	dec	hl
      00090A CB 1E            [16] 2603 	rr	(hl)
      00090C 23               [ 8] 2604 	inc	hl
      00090D CB 2E            [16] 2605 	sra	(hl)
      00090F 2B               [ 8] 2606 	dec	hl
      000910 CB 1E            [16] 2607 	rr	(hl)
                           000912  2608 	C$Scroll.c$452$1_0$265	= .
                                   2609 	.globl	C$Scroll.c$452$1_0$265
                                   2610 ;C:/ZGB-2023.0/common/src/Scroll.c:452: ScrollUpdateColumnWithDelay(new_column - SCREEN_PAD_LEFT + SCREEN_TILE_REFRES_W - 1, new_row - SCREEN_PAD_TOP);
      000912 2A               [ 8] 2611 	ld	a, (hl+)
      000913 5F               [ 4] 2612 	ld	e, a
      000914 56               [ 8] 2613 	ld	d, (hl)
      000915 21 01 00         [12] 2614 	ld	hl, #0x0001
      000918 7B               [ 4] 2615 	ld	a, e
      000919 95               [ 4] 2616 	sub	a, l
      00091A 5F               [ 4] 2617 	ld	e, a
      00091B 7A               [ 4] 2618 	ld	a, d
      00091C 9C               [ 4] 2619 	sbc	a, h
      00091D F8 07            [12] 2620 	ldhl	sp,	#7
      00091F 32               [ 8] 2621 	ld	(hl-), a
      000920 73               [ 8] 2622 	ld	(hl), e
                           000921  2623 	C$Scroll.c$454$1_0$265	= .
                                   2624 	.globl	C$Scroll.c$454$1_0$265
                                   2625 ;C:/ZGB-2023.0/common/src/Scroll.c:454: ScrollUpdateColumnWithDelay(new_column - SCREEN_PAD_LEFT, new_row - SCREEN_PAD_TOP);
      000921 11 01 00         [12] 2626 	ld	de, #0x0001
      000924 79               [ 4] 2627 	ld	a, c
      000925 93               [ 4] 2628 	sub	a, e
      000926 5F               [ 4] 2629 	ld	e, a
      000927 78               [ 4] 2630 	ld	a, b
      000928 9A               [ 4] 2631 	sbc	a, d
      000929 F8 09            [12] 2632 	ldhl	sp,	#9
      00092B 32               [ 8] 2633 	ld	(hl-), a
      00092C 73               [ 8] 2634 	ld	(hl), e
                           00092D  2635 	C$Scroll.c$450$1_0$265	= .
                                   2636 	.globl	C$Scroll.c$450$1_0$265
                                   2637 ;C:/ZGB-2023.0/common/src/Scroll.c:450: if(current_column != new_column) {
      00092D F8 00            [12] 2638 	ldhl	sp,	#0
      00092F 7E               [ 8] 2639 	ld	a, (hl)
      000930 91               [ 4] 2640 	sub	a, c
      000931 20 05            [12] 2641 	jr	NZ, 00159$
      000933 23               [ 8] 2642 	inc	hl
      000934 7E               [ 8] 2643 	ld	a, (hl)
      000935 90               [ 4] 2644 	sub	a, b
      000936 28 36            [12] 2645 	jr	Z, 00105$
      000938                       2646 00159$:
                           000938  2647 	C$Scroll.c$451$2_0$266	= .
                                   2648 	.globl	C$Scroll.c$451$2_0$266
                                   2649 ;C:/ZGB-2023.0/common/src/Scroll.c:451: if(new_column > current_column) {
      000938 F8 00            [12] 2650 	ldhl	sp,	#0
      00093A 2A               [ 8] 2651 	ld	a, (hl+)
      00093B 91               [ 4] 2652 	sub	a, c
      00093C 7E               [ 8] 2653 	ld	a, (hl)
      00093D 98               [ 4] 2654 	sbc	a, b
      00093E 56               [ 8] 2655 	ld	d, (hl)
      00093F 78               [ 4] 2656 	ld	a, b
      000940 CB 7F            [ 8] 2657 	bit	7,a
      000942 28 07            [12] 2658 	jr	Z, 00160$
      000944 CB 7A            [ 8] 2659 	bit	7, d
      000946 20 08            [12] 2660 	jr	NZ, 00161$
      000948 BF               [ 4] 2661 	cp	a, a
      000949 18 05            [12] 2662 	jr	00161$
      00094B                       2663 00160$:
      00094B CB 7A            [ 8] 2664 	bit	7, d
      00094D 28 01            [12] 2665 	jr	Z, 00161$
      00094F 37               [ 4] 2666 	scf
      000950                       2667 00161$:
      000950 30 10            [12] 2668 	jr	NC, 00102$
                           000952  2669 	C$Scroll.c$452$3_0$267	= .
                                   2670 	.globl	C$Scroll.c$452$3_0$267
                                   2671 ;C:/ZGB-2023.0/common/src/Scroll.c:452: ScrollUpdateColumnWithDelay(new_column - SCREEN_PAD_LEFT + SCREEN_TILE_REFRES_W - 1, new_row - SCREEN_PAD_TOP);
      000952 21 15 00         [12] 2672 	ld	hl, #0x0015
      000955 09               [ 8] 2673 	add	hl, bc
      000956 5D               [ 4] 2674 	ld	e, l
      000957 54               [ 4] 2675 	ld	d, h
      000958 F8 06            [12] 2676 	ldhl	sp,	#6
      00095A 2A               [ 8] 2677 	ld	a, (hl+)
      00095B 4F               [ 4] 2678 	ld	c, a
      00095C 46               [ 8] 2679 	ld	b, (hl)
      00095D CDr28r07         [24] 2680 	call	_ScrollUpdateColumnWithDelay
      000960 18 0C            [12] 2681 	jr	00105$
      000962                       2682 00102$:
                           000962  2683 	C$Scroll.c$454$3_0$268	= .
                                   2684 	.globl	C$Scroll.c$454$3_0$268
                                   2685 ;C:/ZGB-2023.0/common/src/Scroll.c:454: ScrollUpdateColumnWithDelay(new_column - SCREEN_PAD_LEFT, new_row - SCREEN_PAD_TOP);
      000962 F8 06            [12] 2686 	ldhl	sp,	#6
      000964 2A               [ 8] 2687 	ld	a, (hl+)
      000965 4F               [ 4] 2688 	ld	c, a
      000966 2A               [ 8] 2689 	ld	a, (hl+)
      000967 47               [ 4] 2690 	ld	b, a
      000968 2A               [ 8] 2691 	ld	a, (hl+)
      000969 5F               [ 4] 2692 	ld	e, a
      00096A 56               [ 8] 2693 	ld	d, (hl)
      00096B CDr28r07         [24] 2694 	call	_ScrollUpdateColumnWithDelay
      00096E                       2695 00105$:
                           00096E  2696 	C$Scroll.c$458$1_0$265	= .
                                   2697 	.globl	C$Scroll.c$458$1_0$265
                                   2698 ;C:/ZGB-2023.0/common/src/Scroll.c:458: if(current_row != new_row) {
      00096E F8 02            [12] 2699 	ldhl	sp,	#2
      000970 2A               [ 8] 2700 	ld	a, (hl+)
      000971 23               [ 8] 2701 	inc	hl
      000972 96               [ 8] 2702 	sub	a, (hl)
      000973 20 06            [12] 2703 	jr	NZ, 00162$
      000975 2B               [ 8] 2704 	dec	hl
      000976 2A               [ 8] 2705 	ld	a, (hl+)
      000977 23               [ 8] 2706 	inc	hl
      000978 96               [ 8] 2707 	sub	a, (hl)
      000979 28 41            [12] 2708 	jr	Z, 00110$
      00097B                       2709 00162$:
                           00097B  2710 	C$Scroll.c$459$2_0$269	= .
                                   2711 	.globl	C$Scroll.c$459$2_0$269
                                   2712 ;C:/ZGB-2023.0/common/src/Scroll.c:459: if(new_row > current_row) {
      00097B F8 02            [12] 2713 	ldhl	sp,	#2
      00097D 5D               [ 4] 2714 	ld	e, l
      00097E 54               [ 4] 2715 	ld	d, h
      00097F F8 04            [12] 2716 	ldhl	sp,	#4
      000981 1A               [ 8] 2717 	ld	a, (de)
      000982 13               [ 8] 2718 	inc	de
      000983 96               [ 8] 2719 	sub	a, (hl)
      000984 23               [ 8] 2720 	inc	hl
      000985 1A               [ 8] 2721 	ld	a, (de)
      000986 9E               [ 8] 2722 	sbc	a, (hl)
      000987 1A               [ 8] 2723 	ld	a, (de)
      000988 57               [ 4] 2724 	ld	d, a
      000989 CB 7E            [12] 2725 	bit	7, (hl)
      00098B 28 07            [12] 2726 	jr	Z, 00163$
      00098D CB 7A            [ 8] 2727 	bit	7, d
      00098F 20 08            [12] 2728 	jr	NZ, 00164$
      000991 BF               [ 4] 2729 	cp	a, a
      000992 18 05            [12] 2730 	jr	00164$
      000994                       2731 00163$:
      000994 CB 7A            [ 8] 2732 	bit	7, d
      000996 28 01            [12] 2733 	jr	Z, 00164$
      000998 37               [ 4] 2734 	scf
      000999                       2735 00164$:
      000999 30 15            [12] 2736 	jr	NC, 00107$
                           00099B  2737 	C$Scroll.c$460$3_0$270	= .
                                   2738 	.globl	C$Scroll.c$460$3_0$270
                                   2739 ;C:/ZGB-2023.0/common/src/Scroll.c:460: ScrollUpdateRowWithDelay(new_column - SCREEN_PAD_LEFT, new_row - SCREEN_PAD_TOP + SCREEN_TILE_REFRES_H - 1);
      00099B F8 04            [12] 2740 	ldhl	sp,#4
      00099D 2A               [ 8] 2741 	ld	a, (hl+)
      00099E 5F               [ 4] 2742 	ld	e, a
      00099F 56               [ 8] 2743 	ld	d, (hl)
      0009A0 21 13 00         [12] 2744 	ld	hl, #0x0013
      0009A3 19               [ 8] 2745 	add	hl, de
      0009A4 4D               [ 4] 2746 	ld	c, l
      0009A5 44               [ 4] 2747 	ld	b, h
      0009A6 F8 08            [12] 2748 	ldhl	sp,	#8
      0009A8 2A               [ 8] 2749 	ld	a, (hl+)
      0009A9 5F               [ 4] 2750 	ld	e, a
      0009AA 56               [ 8] 2751 	ld	d, (hl)
      0009AB CDr37r06         [24] 2752 	call	_ScrollUpdateRowWithDelay
      0009AE 18 0C            [12] 2753 	jr	00110$
      0009B0                       2754 00107$:
                           0009B0  2755 	C$Scroll.c$462$3_0$271	= .
                                   2756 	.globl	C$Scroll.c$462$3_0$271
                                   2757 ;C:/ZGB-2023.0/common/src/Scroll.c:462: ScrollUpdateRowWithDelay(new_column - SCREEN_PAD_LEFT, new_row - SCREEN_PAD_TOP);
      0009B0 F8 06            [12] 2758 	ldhl	sp,	#6
      0009B2 2A               [ 8] 2759 	ld	a, (hl+)
      0009B3 4F               [ 4] 2760 	ld	c, a
      0009B4 2A               [ 8] 2761 	ld	a, (hl+)
      0009B5 47               [ 4] 2762 	ld	b, a
      0009B6 2A               [ 8] 2763 	ld	a, (hl+)
      0009B7 5F               [ 4] 2764 	ld	e, a
      0009B8 56               [ 8] 2765 	ld	d, (hl)
      0009B9 CDr37r06         [24] 2766 	call	_ScrollUpdateRowWithDelay
      0009BC                       2767 00110$:
                           0009BC  2768 	C$Scroll.c$466$1_0$265	= .
                                   2769 	.globl	C$Scroll.c$466$1_0$265
                                   2770 ;C:/ZGB-2023.0/common/src/Scroll.c:466: if(pending_w_i) {
      0009BC FAr12r03         [16] 2771 	ld	a, (#_pending_w_i)
      0009BF B7               [ 4] 2772 	or	a, a
      0009C0 28 03            [12] 2773 	jr	Z, 00112$
                           0009C2  2774 	C$Scroll.c$467$2_0$272	= .
                                   2775 	.globl	C$Scroll.c$467$2_0$272
                                   2776 ;C:/ZGB-2023.0/common/src/Scroll.c:467: ScrollUpdateRowR();
      0009C2 CDrF4r05         [24] 2777 	call	_ScrollUpdateRowR
      0009C5                       2778 00112$:
                           0009C5  2779 	C$Scroll.c$469$1_0$265	= .
                                   2780 	.globl	C$Scroll.c$469$1_0$265
                                   2781 ;C:/ZGB-2023.0/common/src/Scroll.c:469: if(pending_h_i) {
      0009C5 FAr0Dr03         [16] 2782 	ld	a, (#_pending_h_i)
      0009C8 B7               [ 4] 2783 	or	a, a
      0009C9 28 03            [12] 2784 	jr	Z, 00114$
                           0009CB  2785 	C$Scroll.c$470$2_0$273	= .
                                   2786 	.globl	C$Scroll.c$470$2_0$273
                                   2787 ;C:/ZGB-2023.0/common/src/Scroll.c:470: ScrollUpdateColumnR();
      0009CB CDrDFr06         [24] 2788 	call	_ScrollUpdateColumnR
      0009CE                       2789 00114$:
                           0009CE  2790 	C$Scroll.c$472$1_0$265	= .
                                   2791 	.globl	C$Scroll.c$472$1_0$265
                                   2792 ;C:/ZGB-2023.0/common/src/Scroll.c:472: POP_BANK;
      0009CE CDr00r00         [24] 2793 	call	_PopBank
                           0009D1  2794 	C$Scroll.c$473$1_0$265	= .
                                   2795 	.globl	C$Scroll.c$473$1_0$265
                                   2796 ;C:/ZGB-2023.0/common/src/Scroll.c:473: }
      0009D1 E8 0A            [16] 2797 	add	sp, #10
                           0009D3  2798 	C$Scroll.c$473$1_0$265	= .
                                   2799 	.globl	C$Scroll.c$473$1_0$265
                           0009D3  2800 	XG$MoveScroll$0$0	= .
                                   2801 	.globl	XG$MoveScroll$0$0
      0009D3 C9               [16] 2802 	ret
                           0009D4  2803 	G$GetScrollTilePtr$0$0	= .
                                   2804 	.globl	G$GetScrollTilePtr$0$0
                           0009D4  2805 	C$Scroll.c$475$1_0$275	= .
                                   2806 	.globl	C$Scroll.c$475$1_0$275
                                   2807 ;C:/ZGB-2023.0/common/src/Scroll.c:475: UINT8* GetScrollTilePtr(UINT16 x, UINT16 y) {
                                   2808 ;	---------------------------------
                                   2809 ; Function GetScrollTilePtr
                                   2810 ; ---------------------------------
      0009D4                       2811 _GetScrollTilePtr::
                           0009D4  2812 	C$Scroll.c$479$1_0$275	= .
                                   2813 	.globl	C$Scroll.c$479$1_0$275
                                   2814 ;C:/ZGB-2023.0/common/src/Scroll.c:479: return scroll_map + (scroll_tiles_w * y + x); //TODO: fix this mult!!
      0009D4 D5               [16] 2815 	push	de
      0009D5 21r04r00         [12] 2816 	ld	hl, #_scroll_tiles_w
      0009D8 2A               [ 8] 2817 	ld	a, (hl+)
      0009D9 5F               [ 4] 2818 	ld	e, a
      0009DA 56               [ 8] 2819 	ld	d, (hl)
      0009DB CDr00r00         [24] 2820 	call	__mulint
      0009DE 69               [ 4] 2821 	ld	l, c
                                   2822 ;	spillPairReg hl
                                   2823 ;	spillPairReg hl
      0009DF 60               [ 4] 2824 	ld	h, b
                                   2825 ;	spillPairReg hl
                                   2826 ;	spillPairReg hl
      0009E0 D1               [12] 2827 	pop	de
      0009E1 19               [ 8] 2828 	add	hl, de
      0009E2 4D               [ 4] 2829 	ld	c, l
      0009E3 44               [ 4] 2830 	ld	b, h
      0009E4 79               [ 4] 2831 	ld	a, c
      0009E5 21r02r00         [12] 2832 	ld	hl, #_scroll_map
      0009E8 86               [ 8] 2833 	add	a, (hl)
      0009E9 23               [ 8] 2834 	inc	hl
      0009EA 4F               [ 4] 2835 	ld	c, a
      0009EB 78               [ 4] 2836 	ld	a, b
      0009EC 8E               [ 8] 2837 	adc	a, (hl)
      0009ED 47               [ 4] 2838 	ld	b, a
                           0009EE  2839 	C$Scroll.c$480$1_0$275	= .
                                   2840 	.globl	C$Scroll.c$480$1_0$275
                                   2841 ;C:/ZGB-2023.0/common/src/Scroll.c:480: }
                           0009EE  2842 	C$Scroll.c$480$1_0$275	= .
                                   2843 	.globl	C$Scroll.c$480$1_0$275
                           0009EE  2844 	XG$GetScrollTilePtr$0$0	= .
                                   2845 	.globl	XG$GetScrollTilePtr$0$0
      0009EE C9               [16] 2846 	ret
                           0009EF  2847 	G$GetScrollTile$0$0	= .
                                   2848 	.globl	G$GetScrollTile$0$0
                           0009EF  2849 	C$Scroll.c$482$1_0$277	= .
                                   2850 	.globl	C$Scroll.c$482$1_0$277
                                   2851 ;C:/ZGB-2023.0/common/src/Scroll.c:482: UINT8 GetScrollTile(UINT16 x, UINT16 y) {
                                   2852 ;	---------------------------------
                                   2853 ; Function GetScrollTile
                                   2854 ; ---------------------------------
      0009EF                       2855 _GetScrollTile::
                           0009EF  2856 	C$Scroll.c$484$1_0$277	= .
                                   2857 	.globl	C$Scroll.c$484$1_0$277
                                   2858 ;C:/ZGB-2023.0/common/src/Scroll.c:484: PUSH_BANK(scroll_bank);
      0009EF C5               [16] 2859 	push	bc
      0009F0 D5               [16] 2860 	push	de
      0009F1 FAr08r03         [16] 2861 	ld	a, (#_scroll_bank)
      0009F4 F5               [16] 2862 	push	af
      0009F5 33               [ 8] 2863 	inc	sp
      0009F6 CDr00r00         [24] 2864 	call	_PushBank
      0009F9 33               [ 8] 2865 	inc	sp
      0009FA D1               [12] 2866 	pop	de
      0009FB C1               [12] 2867 	pop	bc
                           0009FC  2868 	C$Scroll.c$485$1_0$277	= .
                                   2869 	.globl	C$Scroll.c$485$1_0$277
                                   2870 ;C:/ZGB-2023.0/common/src/Scroll.c:485: ret = *GetScrollTilePtr(x, y);
      0009FC CDrD4r09         [24] 2871 	call	_GetScrollTilePtr
      0009FF 0A               [ 8] 2872 	ld	a, (bc)
      000A00 4F               [ 4] 2873 	ld	c, a
                           000A01  2874 	C$Scroll.c$486$1_0$277	= .
                                   2875 	.globl	C$Scroll.c$486$1_0$277
                                   2876 ;C:/ZGB-2023.0/common/src/Scroll.c:486: POP_BANK;
      000A01 C5               [16] 2877 	push	bc
      000A02 CDr00r00         [24] 2878 	call	_PopBank
      000A05 C1               [12] 2879 	pop	bc
                           000A06  2880 	C$Scroll.c$487$1_0$277	= .
                                   2881 	.globl	C$Scroll.c$487$1_0$277
                                   2882 ;C:/ZGB-2023.0/common/src/Scroll.c:487: return ret;
      000A06 79               [ 4] 2883 	ld	a, c
                           000A07  2884 	C$Scroll.c$488$1_0$277	= .
                                   2885 	.globl	C$Scroll.c$488$1_0$277
                                   2886 ;C:/ZGB-2023.0/common/src/Scroll.c:488: }
                           000A07  2887 	C$Scroll.c$488$1_0$277	= .
                                   2888 	.globl	C$Scroll.c$488$1_0$277
                           000A07  2889 	XG$GetScrollTile$0$0	= .
                                   2890 	.globl	XG$GetScrollTile$0$0
      000A07 C9               [16] 2891 	ret
                           000A08  2892 	G$GetMapSize$0$0	= .
                                   2893 	.globl	G$GetMapSize$0$0
                           000A08  2894 	C$Scroll.c$490$1_0$279	= .
                                   2895 	.globl	C$Scroll.c$490$1_0$279
                                   2896 ;C:/ZGB-2023.0/common/src/Scroll.c:490: void GetMapSize(UINT8 map_bank, const struct MapInfo* map, UINT8* tiles_w, UINT8* tiles_h)
                                   2897 ;	---------------------------------
                                   2898 ; Function GetMapSize
                                   2899 ; ---------------------------------
      000A08                       2900 _GetMapSize::
                           000A08  2901 	C$Scroll.c$492$1_0$279	= .
                                   2902 	.globl	C$Scroll.c$492$1_0$279
                                   2903 ;C:/ZGB-2023.0/common/src/Scroll.c:492: PUSH_BANK(map_bank);
      000A08 D5               [16] 2904 	push	de
      000A09 F5               [16] 2905 	push	af
      000A0A 33               [ 8] 2906 	inc	sp
      000A0B CDr00r00         [24] 2907 	call	_PushBank
      000A0E 33               [ 8] 2908 	inc	sp
      000A0F D1               [12] 2909 	pop	de
                           000A10  2910 	C$Scroll.c$493$1_0$279	= .
                                   2911 	.globl	C$Scroll.c$493$1_0$279
                                   2912 ;C:/ZGB-2023.0/common/src/Scroll.c:493: if(tiles_w) *tiles_w = map->width;
      000A10 F8 03            [12] 2913 	ldhl	sp,	#3
      000A12 3A               [ 8] 2914 	ld	a, (hl-)
      000A13 B6               [ 8] 2915 	or	a, (hl)
      000A14 28 09            [12] 2916 	jr	Z, 00102$
      000A16 2A               [ 8] 2917 	ld	a, (hl+)
      000A17 4F               [ 4] 2918 	ld	c, a
      000A18 46               [ 8] 2919 	ld	b, (hl)
      000A19 6B               [ 4] 2920 	ld	l, e
                                   2921 ;	spillPairReg hl
                                   2922 ;	spillPairReg hl
      000A1A 62               [ 4] 2923 	ld	h, d
                                   2924 ;	spillPairReg hl
                                   2925 ;	spillPairReg hl
      000A1B 23               [ 8] 2926 	inc	hl
      000A1C 23               [ 8] 2927 	inc	hl
      000A1D 7E               [ 8] 2928 	ld	a, (hl)
      000A1E 02               [ 8] 2929 	ld	(bc), a
      000A1F                       2930 00102$:
                           000A1F  2931 	C$Scroll.c$494$1_0$279	= .
                                   2932 	.globl	C$Scroll.c$494$1_0$279
                                   2933 ;C:/ZGB-2023.0/common/src/Scroll.c:494: if(tiles_h) *tiles_h = map->height;
      000A1F F8 05            [12] 2934 	ldhl	sp,	#5
      000A21 3A               [ 8] 2935 	ld	a, (hl-)
      000A22 B6               [ 8] 2936 	or	a, (hl)
      000A23 28 08            [12] 2937 	jr	Z, 00104$
      000A25 2A               [ 8] 2938 	ld	a, (hl+)
      000A26 4F               [ 4] 2939 	ld	c, a
      000A27 46               [ 8] 2940 	ld	b, (hl)
      000A28 13               [ 8] 2941 	inc	de
      000A29 13               [ 8] 2942 	inc	de
      000A2A 13               [ 8] 2943 	inc	de
      000A2B 1A               [ 8] 2944 	ld	a, (de)
      000A2C 02               [ 8] 2945 	ld	(bc), a
      000A2D                       2946 00104$:
                           000A2D  2947 	C$Scroll.c$495$1_0$279	= .
                                   2948 	.globl	C$Scroll.c$495$1_0$279
                                   2949 ;C:/ZGB-2023.0/common/src/Scroll.c:495: POP_BANK;
      000A2D CDr00r00         [24] 2950 	call	_PopBank
                           000A30  2951 	C$Scroll.c$496$1_0$279	= .
                                   2952 	.globl	C$Scroll.c$496$1_0$279
                                   2953 ;C:/ZGB-2023.0/common/src/Scroll.c:496: }
      000A30 E1               [12] 2954 	pop	hl
      000A31 E8 04            [16] 2955 	add	sp, #4
      000A33 E9               [ 4] 2956 	jp	(hl)
                           000A34  2957 	G$ScrollFindTile$0$0	= .
                                   2958 	.globl	G$ScrollFindTile$0$0
                           000A34  2959 	C$Scroll.c$498$1_0$281	= .
                                   2960 	.globl	C$Scroll.c$498$1_0$281
                                   2961 ;C:/ZGB-2023.0/common/src/Scroll.c:498: UINT8 ScrollFindTile(UINT8 map_bank, const struct MapInfo* map, UINT8 tile,
                                   2962 ;	---------------------------------
                                   2963 ; Function ScrollFindTile
                                   2964 ; ---------------------------------
      000A34                       2965 _ScrollFindTile::
      000A34 E8 F0            [16] 2966 	add	sp, #-16
      000A36 F8 0C            [12] 2967 	ldhl	sp,	#12
      000A38 73               [ 8] 2968 	ld	(hl), e
      000A39 23               [ 8] 2969 	inc	hl
      000A3A 72               [ 8] 2970 	ld	(hl), d
                           000A3B  2971 	C$Scroll.c$502$2_0$281	= .
                                   2972 	.globl	C$Scroll.c$502$2_0$281
                                   2973 ;C:/ZGB-2023.0/common/src/Scroll.c:502: UINT16 yt = 0;
      000A3B F8 00            [12] 2974 	ldhl	sp,	#0
      000A3D 36 00            [12] 2975 	ld	(hl), #0x00
      000A3F 23               [ 8] 2976 	inc	hl
      000A40 36 00            [12] 2977 	ld	(hl), #0x00
                           000A42  2978 	C$Scroll.c$503$2_0$281	= .
                                   2979 	.globl	C$Scroll.c$503$2_0$281
                                   2980 ;C:/ZGB-2023.0/common/src/Scroll.c:503: UINT8 found = 1;
      000A42 23               [ 8] 2981 	inc	hl
      000A43 36 01            [12] 2982 	ld	(hl), #0x01
                           000A45  2983 	C$Scroll.c$505$1_0$281	= .
                                   2984 	.globl	C$Scroll.c$505$1_0$281
                                   2985 ;C:/ZGB-2023.0/common/src/Scroll.c:505: PUSH_BANK(map_bank);
      000A45 F5               [16] 2986 	push	af
      000A46 33               [ 8] 2987 	inc	sp
      000A47 CDr00r00         [24] 2988 	call	_PushBank
      000A4A 33               [ 8] 2989 	inc	sp
                           000A4B  2990 	C$Scroll.c$506$2_0$282	= .
                                   2991 	.globl	C$Scroll.c$506$2_0$282
                                   2992 ;C:/ZGB-2023.0/common/src/Scroll.c:506: for(xt = start_x; xt != start_x + w; ++ xt) {
      000A4B F8 13            [12] 2993 	ldhl	sp,	#19
      000A4D 7E               [ 8] 2994 	ld	a, (hl)
      000A4E F8 03            [12] 2995 	ldhl	sp,	#3
      000A50 22               [ 8] 2996 	ld	(hl+), a
      000A51 36 00            [12] 2997 	ld	(hl), #0x00
      000A53 F8 0C            [12] 2998 	ldhl	sp,#12
      000A55 2A               [ 8] 2999 	ld	a, (hl+)
      000A56 5F               [ 4] 3000 	ld	e, a
      000A57 56               [ 8] 3001 	ld	d, (hl)
      000A58 21 02 00         [12] 3002 	ld	hl, #0x0002
      000A5B 19               [ 8] 3003 	add	hl, de
      000A5C E5               [16] 3004 	push	hl
      000A5D 7D               [ 4] 3005 	ld	a, l
      000A5E F8 07            [12] 3006 	ldhl	sp,	#7
      000A60 77               [ 8] 3007 	ld	(hl), a
      000A61 E1               [12] 3008 	pop	hl
      000A62 7C               [ 4] 3009 	ld	a, h
      000A63 F8 06            [12] 3010 	ldhl	sp,	#6
      000A65 77               [ 8] 3011 	ld	(hl), a
      000A66 F8 03            [12] 3012 	ldhl	sp,	#3
      000A68 7E               [ 8] 3013 	ld	a, (hl)
      000A69 F8 0E            [12] 3014 	ldhl	sp,	#14
      000A6B 22               [ 8] 3015 	ld	(hl+), a
      000A6C 36 00            [12] 3016 	ld	(hl), #0x00
      000A6E                       3017 00110$:
      000A6E F8 13            [12] 3018 	ldhl	sp,	#19
      000A70 2A               [ 8] 3019 	ld	a, (hl+)
      000A71 23               [ 8] 3020 	inc	hl
      000A72 06 00            [ 8] 3021 	ld	b, #0x00
      000A74 5E               [ 8] 3022 	ld	e, (hl)
      000A75 83               [ 4] 3023 	add	a, e
      000A76 4F               [ 4] 3024 	ld	c, a
      000A77 30 01            [12] 3025 	jr	NC, 00149$
      000A79 04               [ 4] 3026 	inc	b
      000A7A                       3027 00149$:
      000A7A F8 0E            [12] 3028 	ldhl	sp,	#14
      000A7C 7E               [ 8] 3029 	ld	a, (hl)
      000A7D 91               [ 4] 3030 	sub	a, c
      000A7E 20 06            [12] 3031 	jr	NZ, 00150$
      000A80 23               [ 8] 3032 	inc	hl
      000A81 7E               [ 8] 3033 	ld	a, (hl)
      000A82 90               [ 4] 3034 	sub	a, b
      000A83 CAr06r0B         [16] 3035 	jp	Z,00104$
      000A86                       3036 00150$:
                           000A86  3037 	C$Scroll.c$507$4_0$284	= .
                                   3038 	.globl	C$Scroll.c$507$4_0$284
                                   3039 ;C:/ZGB-2023.0/common/src/Scroll.c:507: for(yt = start_y; yt != start_y + h; ++ yt) {
      000A86 F8 14            [12] 3040 	ldhl	sp,	#20
      000A88 7E               [ 8] 3041 	ld	a, (hl)
      000A89 F8 00            [12] 3042 	ldhl	sp,	#0
      000A8B 22               [ 8] 3043 	ld	(hl+), a
      000A8C 36 00            [12] 3044 	ld	(hl), #0x00
      000A8E F8 0C            [12] 3045 	ldhl	sp,#12
      000A90 2A               [ 8] 3046 	ld	a, (hl+)
      000A91 5F               [ 4] 3047 	ld	e, a
      000A92 56               [ 8] 3048 	ld	d, (hl)
      000A93 1A               [ 8] 3049 	ld	a, (de)
      000A94 F8 07            [12] 3050 	ldhl	sp,	#7
      000A96 22               [ 8] 3051 	ld	(hl+), a
      000A97 13               [ 8] 3052 	inc	de
      000A98 1A               [ 8] 3053 	ld	a, (de)
      000A99 32               [ 8] 3054 	ld	(hl-), a
      000A9A 2B               [ 8] 3055 	dec	hl
      000A9B 2B               [ 8] 3056 	dec	hl
      000A9C 2A               [ 8] 3057 	ld	a, (hl+)
      000A9D 5F               [ 4] 3058 	ld	e, a
      000A9E 56               [ 8] 3059 	ld	d, (hl)
      000A9F 1A               [ 8] 3060 	ld	a, (de)
      000AA0 F8 09            [12] 3061 	ldhl	sp,	#9
      000AA2 77               [ 8] 3062 	ld	(hl), a
      000AA3 D1               [12] 3063 	pop	de
      000AA4 D5               [16] 3064 	push	de
      000AA5                       3065 00107$:
      000AA5 F8 14            [12] 3066 	ldhl	sp,	#20
      000AA7 7E               [ 8] 3067 	ld	a, (hl)
      000AA8 F8 0A            [12] 3068 	ldhl	sp,	#10
      000AAA 22               [ 8] 3069 	ld	(hl+), a
      000AAB 36 00            [12] 3070 	ld	(hl), #0x00
      000AAD F8 16            [12] 3071 	ldhl	sp,	#22
      000AAF 4E               [ 8] 3072 	ld	c, (hl)
      000AB0 06 00            [ 8] 3073 	ld	b, #0x00
      000AB2 F8 0A            [12] 3074 	ldhl	sp,	#10
      000AB4 2A               [ 8] 3075 	ld	a,	(hl+)
      000AB5 66               [ 8] 3076 	ld	h, (hl)
      000AB6 6F               [ 4] 3077 	ld	l, a
      000AB7 09               [ 8] 3078 	add	hl, bc
      000AB8 4D               [ 4] 3079 	ld	c, l
      000AB9 44               [ 4] 3080 	ld	b, h
      000ABA 79               [ 4] 3081 	ld	a, c
      000ABB 93               [ 4] 3082 	sub	a, e
      000ABC 20 04            [12] 3083 	jr	NZ, 00151$
      000ABE 78               [ 4] 3084 	ld	a, b
      000ABF 92               [ 4] 3085 	sub	a, d
      000AC0 28 2E            [12] 3086 	jr	Z, 00111$
      000AC2                       3087 00151$:
                           000AC2  3088 	C$Scroll.c$508$5_0$285	= .
                                   3089 	.globl	C$Scroll.c$508$5_0$285
                                   3090 ;C:/ZGB-2023.0/common/src/Scroll.c:508: if(map->data[map->width * yt + xt] == (UINT16)tile) { //That cast over there is mandatory and gave me a lot of headaches
      000AC2 F8 09            [12] 3091 	ldhl	sp,	#9
      000AC4 2A               [ 8] 3092 	ld	a, (hl+)
      000AC5 22               [ 8] 3093 	ld	(hl+), a
      000AC6 AF               [ 4] 3094 	xor	a, a
      000AC7 32               [ 8] 3095 	ld	(hl-), a
      000AC8 D5               [16] 3096 	push	de
      000AC9 4B               [ 4] 3097 	ld	c, e
      000ACA 42               [ 4] 3098 	ld	b, d
      000ACB 5E               [ 8] 3099 	ld	e, (hl)
      000ACC 16 00            [ 8] 3100 	ld	d, #0x00
      000ACE CDr00r00         [24] 3101 	call	__mulint
      000AD1 D1               [12] 3102 	pop	de
      000AD2 F8 0E            [12] 3103 	ldhl	sp,	#14
      000AD4 2A               [ 8] 3104 	ld	a,	(hl+)
      000AD5 66               [ 8] 3105 	ld	h, (hl)
      000AD6 6F               [ 4] 3106 	ld	l, a
      000AD7 09               [ 8] 3107 	add	hl, bc
      000AD8 4D               [ 4] 3108 	ld	c, l
      000AD9 44               [ 4] 3109 	ld	b, h
      000ADA F8 07            [12] 3110 	ldhl	sp,	#7
      000ADC 2A               [ 8] 3111 	ld	a,	(hl+)
      000ADD 66               [ 8] 3112 	ld	h, (hl)
      000ADE 6F               [ 4] 3113 	ld	l, a
      000ADF 09               [ 8] 3114 	add	hl, bc
      000AE0 4D               [ 4] 3115 	ld	c, l
      000AE1 44               [ 4] 3116 	ld	b, h
      000AE2 0A               [ 8] 3117 	ld	a, (bc)
      000AE3 4F               [ 4] 3118 	ld	c, a
      000AE4 F8 12            [12] 3119 	ldhl	sp,	#18
      000AE6 7E               [ 8] 3120 	ld	a, (hl)
      000AE7 91               [ 4] 3121 	sub	a, c
      000AE8 28 20            [12] 3122 	jr	Z, 00105$
                           000AEA  3123 	C$Scroll.c$507$4_0$284	= .
                                   3124 	.globl	C$Scroll.c$507$4_0$284
                                   3125 ;C:/ZGB-2023.0/common/src/Scroll.c:507: for(yt = start_y; yt != start_y + h; ++ yt) {
      000AEA 13               [ 8] 3126 	inc	de
      000AEB 33               [ 8] 3127 	inc	sp
      000AEC 33               [ 8] 3128 	inc	sp
      000AED D5               [16] 3129 	push	de
      000AEE 18 B5            [12] 3130 	jr	00107$
      000AF0                       3131 00111$:
                           000AF0  3132 	C$Scroll.c$506$2_0$282	= .
                                   3133 	.globl	C$Scroll.c$506$2_0$282
                                   3134 ;C:/ZGB-2023.0/common/src/Scroll.c:506: for(xt = start_x; xt != start_x + w; ++ xt) {
      000AF0 F8 0E            [12] 3135 	ldhl	sp,	#14
      000AF2 34               [12] 3136 	inc	(hl)
      000AF3 20 02            [12] 3137 	jr	NZ, 00153$
      000AF5 23               [ 8] 3138 	inc	hl
      000AF6 34               [12] 3139 	inc	(hl)
      000AF7                       3140 00153$:
      000AF7 F8 0E            [12] 3141 	ldhl	sp,	#14
      000AF9 7E               [ 8] 3142 	ld	a, (hl)
      000AFA F8 03            [12] 3143 	ldhl	sp,	#3
      000AFC 77               [ 8] 3144 	ld	(hl), a
      000AFD F8 0F            [12] 3145 	ldhl	sp,	#15
      000AFF 7E               [ 8] 3146 	ld	a, (hl)
      000B00 F8 04            [12] 3147 	ldhl	sp,	#4
      000B02 77               [ 8] 3148 	ld	(hl), a
      000B03 C3r6Er0A         [16] 3149 	jp	00110$
      000B06                       3150 00104$:
                           000B06  3151 	C$Scroll.c$513$1_0$281	= .
                                   3152 	.globl	C$Scroll.c$513$1_0$281
                                   3153 ;C:/ZGB-2023.0/common/src/Scroll.c:513: found = 0;
      000B06 F8 02            [12] 3154 	ldhl	sp,	#2
      000B08 36 00            [12] 3155 	ld	(hl), #0x00
                           000B0A  3156 	C$Scroll.c$515$1_0$281	= .
                                   3157 	.globl	C$Scroll.c$515$1_0$281
                                   3158 ;C:/ZGB-2023.0/common/src/Scroll.c:515: done:
      000B0A                       3159 00105$:
                           000B0A  3160 	C$Scroll.c$516$1_0$281	= .
                                   3161 	.globl	C$Scroll.c$516$1_0$281
                                   3162 ;C:/ZGB-2023.0/common/src/Scroll.c:516: POP_BANK;
      000B0A CDr00r00         [24] 3163 	call	_PopBank
                           000B0D  3164 	C$Scroll.c$517$1_0$281	= .
                                   3165 	.globl	C$Scroll.c$517$1_0$281
                                   3166 ;C:/ZGB-2023.0/common/src/Scroll.c:517: *x = xt;
      000B0D F8 17            [12] 3167 	ldhl	sp,	#23
      000B0F 2A               [ 8] 3168 	ld	a, (hl+)
      000B10 4F               [ 4] 3169 	ld	c, a
      000B11 46               [ 8] 3170 	ld	b, (hl)
      000B12 F8 03            [12] 3171 	ldhl	sp,	#3
      000B14 2A               [ 8] 3172 	ld	a, (hl+)
      000B15 02               [ 8] 3173 	ld	(bc), a
      000B16 03               [ 8] 3174 	inc	bc
      000B17 7E               [ 8] 3175 	ld	a, (hl)
      000B18 02               [ 8] 3176 	ld	(bc), a
                           000B19  3177 	C$Scroll.c$518$1_0$281	= .
                                   3178 	.globl	C$Scroll.c$518$1_0$281
                                   3179 ;C:/ZGB-2023.0/common/src/Scroll.c:518: *y = yt;
      000B19 F8 19            [12] 3180 	ldhl	sp,	#25
      000B1B 7E               [ 8] 3181 	ld	a, (hl)
      000B1C F8 0E            [12] 3182 	ldhl	sp,	#14
      000B1E 77               [ 8] 3183 	ld	(hl), a
      000B1F F8 1A            [12] 3184 	ldhl	sp,	#26
      000B21 7E               [ 8] 3185 	ld	a, (hl)
      000B22 F8 0F            [12] 3186 	ldhl	sp,	#15
      000B24 32               [ 8] 3187 	ld	(hl-), a
      000B25 2A               [ 8] 3188 	ld	a, (hl+)
      000B26 5F               [ 4] 3189 	ld	e, a
      000B27 56               [ 8] 3190 	ld	d, (hl)
      000B28 F8 00            [12] 3191 	ldhl	sp,	#0
      000B2A 2A               [ 8] 3192 	ld	a, (hl+)
      000B2B 12               [ 8] 3193 	ld	(de), a
      000B2C 13               [ 8] 3194 	inc	de
                           000B2D  3195 	C$Scroll.c$520$1_0$281	= .
                                   3196 	.globl	C$Scroll.c$520$1_0$281
                                   3197 ;C:/ZGB-2023.0/common/src/Scroll.c:520: return found;
      000B2D 2A               [ 8] 3198 	ld	a, (hl+)
      000B2E 12               [ 8] 3199 	ld	(de), a
      000B2F 7E               [ 8] 3200 	ld	a, (hl)
                           000B30  3201 	C$Scroll.c$521$1_0$281	= .
                                   3202 	.globl	C$Scroll.c$521$1_0$281
                                   3203 ;C:/ZGB-2023.0/common/src/Scroll.c:521: }
      000B30 E8 10            [16] 3204 	add	sp, #16
      000B32 E1               [12] 3205 	pop	hl
      000B33 E8 09            [16] 3206 	add	sp, #9
      000B35 E9               [ 4] 3207 	jp	(hl)
                                   3208 	.area _CODE
                                   3209 	.area _INITIALIZER
                           000000  3210 FScroll$__xinit_scroll_top_movement_limit$0_0$0 == .
      000000                       3211 __xinit__scroll_top_movement_limit:
      000000 1E                    3212 	.db #0x1e	; 30
                           000001  3213 FScroll$__xinit_scroll_bottom_movement_limit$0_0$0 == .
      000001                       3214 __xinit__scroll_bottom_movement_limit:
      000001 64                    3215 	.db #0x64	; 100	'd'
                           000002  3216 FScroll$__xinit_scroll_map$0_0$0 == .
      000002                       3217 __xinit__scroll_map:
      000002 00 00                 3218 	.dw #0x0000
                           000004  3219 FScroll$__xinit_scroll_cmap$0_0$0 == .
      000004                       3220 __xinit__scroll_cmap:
      000004 00 00                 3221 	.dw #0x0000
                           000006  3222 FScroll$__xinit_scroll_x$0_0$0 == .
      000006                       3223 __xinit__scroll_x:
      000006 00 00                 3224 	.dw #0x0000
                           000008  3225 FScroll$__xinit_scroll_y$0_0$0 == .
      000008                       3226 __xinit__scroll_y:
      000008 00 00                 3227 	.dw #0x0000
                           00000A  3228 FScroll$__xinit_scroll_x_vblank$0_0$0 == .
      00000A                       3229 __xinit__scroll_x_vblank:
      00000A 00                    3230 	.db #0x00	; 0
                           00000B  3231 FScroll$__xinit_scroll_y_vblank$0_0$0 == .
      00000B                       3232 __xinit__scroll_y_vblank:
      00000B 00                    3233 	.db #0x00	; 0
                           00000C  3234 FScroll$__xinit_scroll_target$0_0$0 == .
      00000C                       3235 __xinit__scroll_target:
      00000C 00 00                 3236 	.dw #0x0000
                           00000E  3237 FScroll$__xinit_scroll_offset_x$0_0$0 == .
      00000E                       3238 __xinit__scroll_offset_x:
      00000E 00                    3239 	.db #0x00	; 0
                           00000F  3240 FScroll$__xinit_scroll_offset_y$0_0$0 == .
      00000F                       3241 __xinit__scroll_offset_y:
      00000F 00                    3242 	.db #0x00	; 0
                           000010  3243 FScroll$__xinit_pending_h_map$0_0$0 == .
      000010                       3244 __xinit__pending_h_map:
      000010 00 00                 3245 	.dw #0x0000
                           000012  3246 FScroll$__xinit_pending_w_map$0_0$0 == .
      000012                       3247 __xinit__pending_w_map:
      000012 00 00                 3248 	.dw #0x0000
                           000014  3249 FScroll$__xinit_last_tile_loaded$0_0$0 == .
      000014                       3250 __xinit__last_tile_loaded:
      000014 00                    3251 	.db #0x00	; 0
                           000015  3252 FScroll$__xinit_last_bg_pal_loaded$0_0$0 == .
      000015                       3253 __xinit__last_bg_pal_loaded:
      000015 00                    3254 	.db #0x00	; 0
                           000016  3255 FScroll$__xinit_scroll_h_border$0_0$0 == .
      000016                       3256 __xinit__scroll_h_border:
      000016 00                    3257 	.db #0x00	;  0
                           000017  3258 FScroll$__xinit_clamp_enabled$0_0$0 == .
      000017                       3259 __xinit__clamp_enabled:
      000017 01                    3260 	.db #0x01	; 1
                                   3261 	.area _CABS (ABS)
