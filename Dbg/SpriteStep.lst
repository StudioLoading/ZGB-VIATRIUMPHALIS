                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14228 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module SpriteStep
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _Destroy_SpriteStep
                                     12 	.globl _Update_SpriteStep
                                     13 	.globl _Start_SpriteStep
                                     14 	.globl _SpriteManagerRemoveSprite
                                     15 	.globl _SetSpriteAnim
                                     16 	.globl _a_steponwater
                                     17 	.globl _a_step
                                     18 	.globl ___bank_SpriteStep
                                     19 ;--------------------------------------------------------
                                     20 ; special function registers
                                     21 ;--------------------------------------------------------
                                     22 ;--------------------------------------------------------
                                     23 ; ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area _DATA
                                     26 ;--------------------------------------------------------
                                     27 ; ram data
                                     28 ;--------------------------------------------------------
                                     29 	.area _INITIALIZED
                                     30 ;--------------------------------------------------------
                                     31 ; absolute external ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area _DABS (ABS)
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area _HOME
                                     38 	.area _GSINIT
                                     39 	.area _GSFINAL
                                     40 	.area _GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area _HOME
                                     45 	.area _HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area _CODE_255
                           000000    50 	G$Start_SpriteStep$0$0	= .
                                     51 	.globl	G$Start_SpriteStep$0$0
                           000000    52 	C$SpriteStep.c$12$0_0$164	= .
                                     53 	.globl	C$SpriteStep.c$12$0_0$164
                                     54 ;SpriteStep.c:12: void START(){
                                     55 ;	---------------------------------
                                     56 ; Function Start_SpriteStep
                                     57 ; ---------------------------------
      000000                         58 _Start_SpriteStep::
                           000000    59 	C$SpriteStep.c$13$1_0$164	= .
                                     60 	.globl	C$SpriteStep.c$13$1_0$164
                                     61 ;SpriteStep.c:13: THIS->lim_x = 1u;
      000000 21r00r00         [12]   62 	ld	hl, #_THIS
      000003 2A               [ 8]   63 	ld	a, (hl+)
      000004 4F               [ 4]   64 	ld	c, a
      000005 46               [ 8]   65 	ld	b, (hl)
      000006 21 15 00         [12]   66 	ld	hl, #0x0015
      000009 09               [ 8]   67 	add	hl, bc
      00000A 3E 01            [ 8]   68 	ld	a, #0x01
      00000C 22               [ 8]   69 	ld	(hl+), a
      00000D 36 00            [12]   70 	ld	(hl), #0x00
                           00000F    71 	C$SpriteStep.c$14$1_0$164	= .
                                     72 	.globl	C$SpriteStep.c$14$1_0$164
                                     73 ;SpriteStep.c:14: THIS->lim_y = 1u;
      00000F 21r00r00         [12]   74 	ld	hl, #_THIS
      000012 2A               [ 8]   75 	ld	a, (hl+)
      000013 4F               [ 4]   76 	ld	c, a
      000014 46               [ 8]   77 	ld	b, (hl)
      000015 21 17 00         [12]   78 	ld	hl, #0x0017
      000018 09               [ 8]   79 	add	hl, bc
      000019 3E 01            [ 8]   80 	ld	a, #0x01
      00001B 22               [ 8]   81 	ld	(hl+), a
      00001C 36 00            [12]   82 	ld	(hl), #0x00
                           00001E    83 	C$SpriteStep.c$15$1_0$164	= .
                                     84 	.globl	C$SpriteStep.c$15$1_0$164
                                     85 ;SpriteStep.c:15: SetSpriteAnim(THIS, a_step, 16u);
      00001E 3E 10            [ 8]   86 	ld	a, #0x10
      000020 F5               [16]   87 	push	af
      000021 33               [ 8]   88 	inc	sp
      000022 01r3Br00         [12]   89 	ld	bc, #_a_step
      000025 21r00r00         [12]   90 	ld	hl, #_THIS
      000028 2A               [ 8]   91 	ld	a, (hl+)
      000029 5F               [ 4]   92 	ld	e, a
      00002A 56               [ 8]   93 	ld	d, (hl)
      00002B CDr00r00         [24]   94 	call	_SetSpriteAnim
                           00002E    95 	C$SpriteStep.c$16$1_1$165	= .
                                     96 	.globl	C$SpriteStep.c$16$1_1$165
                                     97 ;SpriteStep.c:16: struct ItemData* step_data = (struct ItemData*) THIS->custom_data;
      00002E 21r00r00         [12]   98 	ld	hl, #_THIS
      000031 2A               [ 8]   99 	ld	a, (hl+)
      000032 4F               [ 4]  100 	ld	c, a
      000033 46               [ 8]  101 	ld	b, (hl)
                           000034   102 	C$SpriteStep.c$17$1_1$165	= .
                                    103 	.globl	C$SpriteStep.c$17$1_1$165
                                    104 ;SpriteStep.c:17: step_data->hp = 40u;
      000034 21 1D 00         [12]  105 	ld	hl,#0x1d
      000037 09               [ 8]  106 	add	hl,bc
      000038 36 28            [12]  107 	ld	(hl), #0x28
                           00003A   108 	C$SpriteStep.c$18$1_1$164	= .
                                    109 	.globl	C$SpriteStep.c$18$1_1$164
                                    110 ;SpriteStep.c:18: }
                           00003A   111 	C$SpriteStep.c$18$1_1$164	= .
                                    112 	.globl	C$SpriteStep.c$18$1_1$164
                           00003A   113 	XG$Start_SpriteStep$0$0	= .
                                    114 	.globl	XG$Start_SpriteStep$0$0
      00003A C9               [16]  115 	ret
                           0000FF   116 G$__bank_SpriteStep$0_0$0 == 0x00ff
                           0000FF   117 ___bank_SpriteStep	=	0x00ff
                           00003B   118 G$a_step$0_0$0 == .
      00003B                        119 _a_step:
      00003B 01                     120 	.db #0x01	; 1
      00003C 00                     121 	.db #0x00	; 0
                           00003D   122 G$a_steponwater$0_0$0 == .
      00003D                        123 _a_steponwater:
      00003D 04                     124 	.db #0x04	; 4
      00003E 00                     125 	.db #0x00	; 0
      00003F 01                     126 	.db #0x01	; 1
      000040 02                     127 	.db #0x02	; 2
      000041 03                     128 	.db #0x03	; 3
                           000042   129 	G$Update_SpriteStep$0$0	= .
                                    130 	.globl	G$Update_SpriteStep$0$0
                           000042   131 	C$SpriteStep.c$20$1_1$166	= .
                                    132 	.globl	C$SpriteStep.c$20$1_1$166
                                    133 ;SpriteStep.c:20: void UPDATE(){
                                    134 ;	---------------------------------
                                    135 ; Function Update_SpriteStep
                                    136 ; ---------------------------------
      000042                        137 _Update_SpriteStep::
                           000042   138 	C$SpriteStep.c$21$1_0$166	= .
                                    139 	.globl	C$SpriteStep.c$21$1_0$166
                                    140 ;SpriteStep.c:21: struct ItemData* step_data = (struct ItemData*) THIS->custom_data;
      000042 21r00r00         [12]  141 	ld	hl, #_THIS
      000045 2A               [ 8]  142 	ld	a, (hl+)
      000046 46               [ 8]  143 	ld	b, (hl)
      000047 C6 1B            [ 8]  144 	add	a, #0x1b
      000049 4F               [ 4]  145 	ld	c, a
      00004A 30 01            [12]  146 	jr	NC, 00121$
      00004C 04               [ 4]  147 	inc	b
      00004D                        148 00121$:
                           00004D   149 	C$SpriteStep.c$22$1_0$166	= .
                                    150 	.globl	C$SpriteStep.c$22$1_0$166
                                    151 ;SpriteStep.c:22: if(step_data->configured == 1){//orme su pozza
      00004D 59               [ 4]  152 	ld	e, c
      00004E 50               [ 4]  153 	ld	d, b
      00004F 13               [ 8]  154 	inc	de
      000050 13               [ 8]  155 	inc	de
      000051 13               [ 8]  156 	inc	de
      000052 1A               [ 8]  157 	ld	a, (de)
      000053 3D               [ 4]  158 	dec	a
      000054 20 10            [12]  159 	jr	NZ, 00102$
                           000056   160 	C$SpriteStep.c$23$2_0$167	= .
                                    161 	.globl	C$SpriteStep.c$23$2_0$167
                                    162 ;SpriteStep.c:23: SetSpriteAnim(THIS, a_steponwater, 16u);
      000056 2B               [ 8]  163 	dec	hl
      000057 C5               [16]  164 	push	bc
      000058 3E 10            [ 8]  165 	ld	a, #0x10
      00005A F5               [16]  166 	push	af
      00005B 33               [ 8]  167 	inc	sp
      00005C 01r3Dr00         [12]  168 	ld	bc, #_a_steponwater
      00005F 2A               [ 8]  169 	ld	a, (hl+)
      000060 5F               [ 4]  170 	ld	e, a
      000061 56               [ 8]  171 	ld	d, (hl)
      000062 CDr00r00         [24]  172 	call	_SetSpriteAnim
      000065 C1               [12]  173 	pop	bc
      000066                        174 00102$:
                           000066   175 	C$SpriteStep.c$25$1_0$166	= .
                                    176 	.globl	C$SpriteStep.c$25$1_0$166
                                    177 ;SpriteStep.c:25: step_data->hp--;
      000066 03               [ 8]  178 	inc	bc
      000067 03               [ 8]  179 	inc	bc
      000068 0A               [ 8]  180 	ld	a, (bc)
      000069 3D               [ 4]  181 	dec	a
      00006A 02               [ 8]  182 	ld	(bc), a
                           00006B   183 	C$SpriteStep.c$26$1_0$166	= .
                                    184 	.globl	C$SpriteStep.c$26$1_0$166
                                    185 ;SpriteStep.c:26: if(step_data->hp == 0){
      00006B B7               [ 4]  186 	or	a, a
      00006C C0               [20]  187 	ret	NZ
                           00006D   188 	C$SpriteStep.c$27$2_0$168	= .
                                    189 	.globl	C$SpriteStep.c$27$2_0$168
                                    190 ;SpriteStep.c:27: SpriteManagerRemoveSprite(THIS);
      00006D 21r00r00         [12]  191 	ld	hl, #_THIS
      000070 5E               [ 8]  192 	ld	e, (hl)
      000071 23               [ 8]  193 	inc	hl
      000072 56               [ 8]  194 	ld	d, (hl)
                           000073   195 	C$SpriteStep.c$29$1_0$166	= .
                                    196 	.globl	C$SpriteStep.c$29$1_0$166
                                    197 ;SpriteStep.c:29: }
                           000073   198 	C$SpriteStep.c$29$1_0$166	= .
                                    199 	.globl	C$SpriteStep.c$29$1_0$166
                           000073   200 	XG$Update_SpriteStep$0$0	= .
                                    201 	.globl	XG$Update_SpriteStep$0$0
      000073 C3r00r00         [16]  202 	jp	_SpriteManagerRemoveSprite
                           000076   203 	G$Destroy_SpriteStep$0$0	= .
                                    204 	.globl	G$Destroy_SpriteStep$0$0
                           000076   205 	C$SpriteStep.c$31$1_0$170	= .
                                    206 	.globl	C$SpriteStep.c$31$1_0$170
                                    207 ;SpriteStep.c:31: void DESTROY(){
                                    208 ;	---------------------------------
                                    209 ; Function Destroy_SpriteStep
                                    210 ; ---------------------------------
      000076                        211 _Destroy_SpriteStep::
                           000076   212 	C$SpriteStep.c$33$1_0$170	= .
                                    213 	.globl	C$SpriteStep.c$33$1_0$170
                                    214 ;SpriteStep.c:33: }
                           000076   215 	C$SpriteStep.c$33$1_0$170	= .
                                    216 	.globl	C$SpriteStep.c$33$1_0$170
                           000076   217 	XG$Destroy_SpriteStep$0$0	= .
                                    218 	.globl	XG$Destroy_SpriteStep$0$0
      000076 C9               [16]  219 	ret
                                    220 	.area _CODE_255
                                    221 	.area _INITIALIZER
                                    222 	.area _CABS (ABS)
